{"ast":null,"code":"// 获取小尺寸的专辑封面\n// 图片地址+?param=200x200，获取200x200尺寸的图片\nexport function getSizeImage(imgUrl, size) {\n  return `${imgUrl}?param=${size}x${size}`;\n} // 音乐的播放量：12亿，35万，1413\n\nexport function getCount(count) {\n  if (count < 0) return; // 小于2万\n\n  if (count < 100000) {\n    return count; // 小于2亿\n  } else if (Math.floor(count / 20000) < 10000) {\n    return Math.floor(count / 10000) + \"万\"; // return Math.floor(count / 1000) / 10 + \"万\";\n  } else {\n    return Math.floor(count / 100000000) + \"亿\"; // return Math.floor(count / 10000000) / 10 + \"亿\";\n  }\n}\nexport function getPlayUrl(id) {\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\n} // 格式化：时间\n\nexport function formatDate(time, fmt) {\n  let date = new Date(time);\n\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  }\n\n  let o = {\n    \"M+\": date.getMonth() + 1,\n    \"d+\": date.getDate(),\n    \"h+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds()\n  };\n\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      let str = o[k] + \"\";\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\n    }\n  }\n\n  return fmt;\n}\n\nfunction padLeftZero(str) {\n  return (\"00\" + str).substr(str.length);\n}\n\nexport function formatMonthDay(time) {\n  return formatDate(time, \"MM月dd日\");\n}\nexport function formatMinuteSecond(time) {\n  return formatDate(time, \"mm:ss\");\n}","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/utils/format-utils.js"],"names":["getSizeImage","imgUrl","size","getCount","count","Math","floor","getPlayUrl","id","formatDate","time","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","formatMonthDay","formatMinuteSecond"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AACzC,SAAQ,GAAED,MAAO,UAASC,IAAK,IAAGA,IAAK,EAAvC;AACD,C,CAED;;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,MAAIA,KAAK,GAAG,CAAZ,EAAe,OADe,CAE9B;;AACA,MAAIA,KAAK,GAAG,MAAZ,EAAoB;AAClB,WAAOA,KAAP,CADkB,CAElB;AACD,GAHD,MAGO,IAAIC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,KAAnB,IAA4B,KAAhC,EAAuC;AAC5C,WAAOC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,KAAnB,IAA4B,GAAnC,CAD4C,CAE5C;AACD,GAHM,MAGA;AACL,WAAOC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,SAAnB,IAAgC,GAAvC,CADK,CAEL;AACD;AACF;AAED,OAAO,SAASG,UAAT,CAAoBC,EAApB,EAAwB;AAC7B,SAAQ,iDAAgDA,EAAG,MAA3D;AACD,C,CAED;;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AACpC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAX;;AAEA,MAAI,OAAOI,IAAP,CAAYH,GAAZ,CAAJ,EAAsB;AACpBA,IAAAA,GAAG,GAAGA,GAAG,CAACI,OAAJ,CACJC,MAAM,CAACC,EADH,EAEJ,CAACL,IAAI,CAACM,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CAFI,CAAN;AAID;;AACD,MAAIC,CAAC,GAAG;AACN,UAAMT,IAAI,CAACU,QAAL,KAAkB,CADlB;AAEN,UAAMV,IAAI,CAACW,OAAL,EAFA;AAGN,UAAMX,IAAI,CAACY,QAAL,EAHA;AAIN,UAAMZ,IAAI,CAACa,UAAL,EAJA;AAKN,UAAMb,IAAI,CAACc,UAAL;AALA,GAAR;;AAOA,OAAK,IAAIC,CAAT,IAAcN,CAAd,EAAiB;AACf,QAAI,IAAIL,MAAJ,CAAY,IAAGW,CAAE,GAAjB,EAAqBb,IAArB,CAA0BH,GAA1B,CAAJ,EAAoC;AAClC,UAAIiB,GAAG,GAAGP,CAAC,CAACM,CAAD,CAAD,GAAO,EAAjB;AACAhB,MAAAA,GAAG,GAAGA,GAAG,CAACI,OAAJ,CACJC,MAAM,CAACC,EADH,EAEJD,MAAM,CAACC,EAAP,CAAUG,MAAV,KAAqB,CAArB,GAAyBQ,GAAzB,GAA+BC,WAAW,CAACD,GAAD,CAFtC,CAAN;AAID;AACF;;AACD,SAAOjB,GAAP;AACD;;AAED,SAASkB,WAAT,CAAqBD,GAArB,EAA0B;AACxB,SAAO,CAAC,OAAOA,GAAR,EAAaT,MAAb,CAAoBS,GAAG,CAACR,MAAxB,CAAP;AACD;;AAED,OAAO,SAASU,cAAT,CAAwBpB,IAAxB,EAA8B;AACnC,SAAOD,UAAU,CAACC,IAAD,EAAO,QAAP,CAAjB;AACD;AAED,OAAO,SAASqB,kBAAT,CAA4BrB,IAA5B,EAAkC;AACvC,SAAOD,UAAU,CAACC,IAAD,EAAO,OAAP,CAAjB;AACD","sourcesContent":["// 获取小尺寸的专辑封面\n// 图片地址+?param=200x200，获取200x200尺寸的图片\nexport function getSizeImage(imgUrl, size) {\n  return `${imgUrl}?param=${size}x${size}`;\n}\n\n// 音乐的播放量：12亿，35万，1413\nexport function getCount(count) {\n  if (count < 0) return;\n  // 小于2万\n  if (count < 100000) {\n    return count;\n    // 小于2亿\n  } else if (Math.floor(count / 20000) < 10000) {\n    return Math.floor(count / 10000) + \"万\";\n    // return Math.floor(count / 1000) / 10 + \"万\";\n  } else {\n    return Math.floor(count / 100000000) + \"亿\";\n    // return Math.floor(count / 10000000) / 10 + \"亿\";\n  }\n}\n\nexport function getPlayUrl(id) {\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\n}\n\n// 格式化：时间\nexport function formatDate(time, fmt) {\n  let date = new Date(time);\n\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  }\n  let o = {\n    \"M+\": date.getMonth() + 1,\n    \"d+\": date.getDate(),\n    \"h+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds(),\n  };\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      let str = o[k] + \"\";\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? str : padLeftZero(str)\n      );\n    }\n  }\n  return fmt;\n}\n\nfunction padLeftZero(str) {\n  return (\"00\" + str).substr(str.length);\n}\n\nexport function formatMonthDay(time) {\n  return formatDate(time, \"MM月dd日\");\n}\n\nexport function formatMinuteSecond(time) {\n  return formatDate(time, \"mm:ss\");\n}\n"]},"metadata":{},"sourceType":"module"}