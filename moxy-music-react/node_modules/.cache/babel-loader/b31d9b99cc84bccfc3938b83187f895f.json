{"ast":null,"code":"import _slicedToArray from\"/Users/moxy/ReactTea/moxy-music-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,memo}from\"react\";import{useSelector,useDispatch,shallowEqual}from\"react-redux\";import{getRadios}from\"../../store/actionCreators\";import LJThemeHeader from\"@/components/theme-header\";import LJRadioRankingCover from\"@/components/radio-ranking-cover\";import LJPagination from\"@/components/songs-pagination\";import{RankingWraper}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJRadioRanking(){// props 标记当前页数。每页32个\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];// redux\nvar _useSelector=useSelector(function(state){return{currentId:state.getIn([\"djRadio\",\"currentId\"]),radios:state.getIn([\"djRadio\",\"radios\"])};},shallowEqual),_useSelector$currentI=_useSelector.currentId,currentId=_useSelector$currentI===void 0?0:_useSelector$currentI,_useSelector$radios=_useSelector.radios,radios=_useSelector$radios===void 0?[]:_useSelector$radios;var dispatch=useDispatch();// hooks\nuseEffect(function(){dispatch(getRadios(currentId,0));},[dispatch,currentId]);// hanlde function\nvar onPageChange=function onPageChange(page,pageSize){setCurrentPage(page);dispatch(getRadios(currentId,page*32));};return/*#__PURE__*/_jsxs(RankingWraper,{children:[/*#__PURE__*/_jsx(LJThemeHeader,{title:\"\\u7535\\u53F0\\u6392\\u884C\\u699C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ranking-list\",children:radios.map(function(item,index){return/*#__PURE__*/_jsx(LJRadioRankingCover,{radio:item},item.id);})}),/*#__PURE__*/_jsx(LJPagination,{currentPage:currentPage,total:1000,pageSize:32,onPageChange:onPageChange})]});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/djradio/c-cpns/radio-ranking/index.js"],"names":["React","useState","useEffect","memo","useSelector","useDispatch","shallowEqual","getRadios","LJThemeHeader","LJRadioRankingCover","LJPagination","RankingWraper","LJRadioRanking","currentPage","setCurrentPage","state","currentId","getIn","radios","dispatch","onPageChange","page","pageSize","map","item","index","id"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,IAArC,KAAiD,OAAjD,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CAEA,OAASC,SAAT,KAA0B,4BAA1B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,2BAA1B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,kCAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CAEA,OAASC,aAAT,KAA8B,SAA9B,C,wFACA,2BAAeR,IAAI,CAAC,QAASS,CAAAA,cAAT,EAA0B,CAC5C;AAD4C,cAENX,QAAQ,CAAC,CAAD,CAFF,wCAErCY,WAFqC,eAExBC,cAFwB,eAI5C;AAJ4C,iBAKLV,WAAW,CAChD,SAACW,KAAD,QAAY,CACVC,SAAS,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,WAAZ,CAAZ,CADD,CAEVC,MAAM,CAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,QAAZ,CAAZ,CAFE,CAAZ,EADgD,CAKhDX,YALgD,CALN,oCAKpCU,SALoC,CAKpCA,SALoC,gCAKxB,CALwB,wDAKrBE,MALqB,CAKrBA,MALqB,8BAKZ,EALY,qBAY5C,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA;AACAH,SAAS,CAAC,UAAM,CACdiB,QAAQ,CAACZ,SAAS,CAACS,SAAD,CAAY,CAAZ,CAAV,CAAR,CACD,CAFQ,CAEN,CAACG,QAAD,CAAWH,SAAX,CAFM,CAAT,CAIA;AACA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAOC,QAAP,CAAoB,CACvCR,cAAc,CAACO,IAAD,CAAd,CACAF,QAAQ,CAACZ,SAAS,CAACS,SAAD,CAAYK,IAAI,CAAG,EAAnB,CAAV,CAAR,CACD,CAHD,CAKA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,CAAC,gCAArB,EADF,cAEE,YAAK,SAAS,CAAC,cAAf,UACGH,MAAM,CAACK,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC3B,mBAAO,KAAC,mBAAD,EAAmC,KAAK,CAAED,IAA1C,EAA0BA,IAAI,CAACE,EAA/B,CAAP,CACD,CAFA,CADH,EAFF,cAOE,KAAC,YAAD,EACE,WAAW,CAAEb,WADf,CAEE,KAAK,CAAE,IAFT,CAGE,QAAQ,CAAE,EAHZ,CAIE,YAAY,CAAEO,YAJhB,EAPF,GADF,CAgBD,CAzCkB,CAAnB","sourcesContent":["import React, { useState, useEffect, memo } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\n\nimport { getRadios } from \"../../store/actionCreators\";\n\nimport LJThemeHeader from \"@/components/theme-header\";\nimport LJRadioRankingCover from \"@/components/radio-ranking-cover\";\nimport LJPagination from \"@/components/songs-pagination\";\n\nimport { RankingWraper } from \"./style\";\nexport default memo(function LJRadioRanking() {\n  // props 标记当前页数。每页32个\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // redux\n  const { currentId = 0, radios = [] } = useSelector(\n    (state) => ({\n      currentId: state.getIn([\"djRadio\", \"currentId\"]),\n      radios: state.getIn([\"djRadio\", \"radios\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // hooks\n  useEffect(() => {\n    dispatch(getRadios(currentId, 0));\n  }, [dispatch, currentId]);\n\n  // hanlde function\n  const onPageChange = (page, pageSize) => {\n    setCurrentPage(page);\n    dispatch(getRadios(currentId, page * 32));\n  };\n\n  return (\n    <RankingWraper>\n      <LJThemeHeader title=\"电台排行榜\" />\n      <div className=\"ranking-list\">\n        {radios.map((item, index) => {\n          return <LJRadioRankingCover key={item.id} radio={item} />;\n        })}\n      </div>\n      <LJPagination\n        currentPage={currentPage}\n        total={1000}\n        pageSize={32}\n        onPageChange={onPageChange}\n      />\n    </RankingWraper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}