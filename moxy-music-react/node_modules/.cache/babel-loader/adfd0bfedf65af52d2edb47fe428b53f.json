{"ast":null,"code":"import React,{memo,useEffect}from\"react\";import{shallowEqual,useSelector,useDispatch}from\"react-redux\";import classNames from\"classnames\";import{getSizeImage}from\"@/utils/format-utils\";import{changeCurrentIndexAction,getRankingAction}from\"../../store/actionCreators\";import{RankTitleWrapper}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJRanking(){// redux hooks\nvar _useSelector=useSelector(function(state){return{listTitle:state.getIn([\"ranking\",\"listTitle\"]),currentIndex:state.getIn([\"ranking\",\"currentIndex\"])};},shallowEqual),listTitle=_useSelector.listTitle,currentIndex=_useSelector.currentIndex;var dispatch=useDispatch();// react hooks\nuseEffect(function(){var id=listTitle[currentIndex]&&listTitle[currentIndex].id;if(!id)return;dispatch(getRankingAction(id));},[dispatch,listTitle,currentIndex]);// handle functions\n// 点击榜单后，会在 header 和 list 展示对应的榜单信息\n// 保存：当前打开的榜单：下标 currentIndex、名称 listTitle\nvar handleItemClick=function handleItemClick(index){dispatch(changeCurrentIndexAction(index));var id=listTitle[currentIndex].id;dispatch(getRankingAction(id));};return/*#__PURE__*/_jsx(RankTitleWrapper,{children:listTitle.map(function(item,index){// 前四个和后面的分别是两组，各组需要添加一个标题名\nvar header=[\"云音乐特色榜\",\"全球媒体榜\"];var listClassification;if(index===0||index===4){listClassification=/*#__PURE__*/_jsx(\"h2\",{className:\"header\",children:index===0?header[0]:header[1]});}return/*#__PURE__*/_jsxs(\"div\",{children:[listClassification,/*#__PURE__*/_jsxs(\"div\",{className:classNames(\"item\",{active:index===currentIndex}),onClick:function onClick(e){return handleItemClick(index);},children:[/*#__PURE__*/_jsx(\"img\",{src:getSizeImage(item.coverImgUrl,40),alt:item.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:item.name}),/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:item.updateFrequency})]})]})]},item.id);})});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/ranking/c-cpns/rank-title/index.js"],"names":["React","memo","useEffect","shallowEqual","useSelector","useDispatch","classNames","getSizeImage","changeCurrentIndexAction","getRankingAction","RankTitleWrapper","LJRanking","state","listTitle","getIn","currentIndex","dispatch","id","handleItemClick","index","map","item","header","listClassification","active","e","coverImgUrl","name","updateFrequency"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,SAAtB,KAAuC,OAAvC,CACA,OAASC,YAAT,CAAuBC,WAAvB,CAAoCC,WAApC,KAAuD,aAAvD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,OAASC,YAAT,KAA6B,sBAA7B,CAEA,OACEC,wBADF,CAEEC,gBAFF,KAGO,4BAHP,CAKA,OAASC,gBAAT,KAAiC,SAAjC,C,wFAEA,2BAAeT,IAAI,CAAC,QAASU,CAAAA,SAAT,EAAqB,CACvC;AADuC,iBAEHP,WAAW,CAC7C,SAACQ,KAAD,QAAY,CACVC,SAAS,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,WAAZ,CAAZ,CADD,CAEVC,YAAY,CAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,cAAZ,CAAZ,CAFJ,CAAZ,EAD6C,CAK7CX,YAL6C,CAFR,CAE/BU,SAF+B,cAE/BA,SAF+B,CAEpBE,YAFoB,cAEpBA,YAFoB,CASvC,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA;AACAH,SAAS,CAAC,UAAM,CACd,GAAMe,CAAAA,EAAE,CAAGJ,SAAS,CAACE,YAAD,CAAT,EAA2BF,SAAS,CAACE,YAAD,CAAT,CAAwBE,EAA9D,CACA,GAAI,CAACA,EAAL,CAAS,OACTD,QAAQ,CAACP,gBAAgB,CAACQ,EAAD,CAAjB,CAAR,CACD,CAJQ,CAIN,CAACD,QAAD,CAAWH,SAAX,CAAsBE,YAAtB,CAJM,CAAT,CAMA;AACA;AACA;AACA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjCH,QAAQ,CAACR,wBAAwB,CAACW,KAAD,CAAzB,CAAR,CACA,GAAMF,CAAAA,EAAE,CAAGJ,SAAS,CAACE,YAAD,CAAT,CAAwBE,EAAnC,CACAD,QAAQ,CAACP,gBAAgB,CAACQ,EAAD,CAAjB,CAAR,CACD,CAJD,CAMA,mBACE,KAAC,gBAAD,WACGJ,SAAS,CAACO,GAAV,CAAc,SAACC,IAAD,CAAOF,KAAP,CAAiB,CAC9B;AACA,GAAMG,CAAAA,MAAM,CAAG,CAAC,QAAD,CAAW,OAAX,CAAf,CACA,GAAIC,CAAAA,kBAAJ,CACA,GAAIJ,KAAK,GAAK,CAAV,EAAeA,KAAK,GAAK,CAA7B,CAAgC,CAC9BI,kBAAkB,cAChB,WAAI,SAAS,CAAC,QAAd,UAAwBJ,KAAK,GAAK,CAAV,CAAcG,MAAM,CAAC,CAAD,CAApB,CAA0BA,MAAM,CAAC,CAAD,CAAxD,EADF,CAGD,CAED,mBACE,uBACGC,kBADH,cAEE,aACE,SAAS,CAAEjB,UAAU,CAAC,MAAD,CAAS,CAAEkB,MAAM,CAAEL,KAAK,GAAKJ,YAApB,CAAT,CADvB,CAEE,OAAO,CAAE,iBAACU,CAAD,QAAOP,CAAAA,eAAe,CAACC,KAAD,CAAtB,EAFX,wBAIE,YAAK,GAAG,CAAEZ,YAAY,CAACc,IAAI,CAACK,WAAN,CAAmB,EAAnB,CAAtB,CAA8C,GAAG,CAAEL,IAAI,CAACM,IAAxD,EAJF,cAKE,aAAK,SAAS,CAAC,MAAf,wBACE,YAAK,SAAS,CAAC,OAAf,UAAwBN,IAAI,CAACM,IAA7B,EADF,cAEE,YAAK,SAAS,CAAC,MAAf,UAAuBN,IAAI,CAACO,eAA5B,EAFF,GALF,GAFF,GAAUP,IAAI,CAACJ,EAAf,CADF,CAeD,CAzBA,CADH,EADF,CA8BD,CAzDkB,CAAnB","sourcesContent":["import React, { memo, useEffect } from \"react\";\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { getSizeImage } from \"@/utils/format-utils\";\n\nimport {\n  changeCurrentIndexAction,\n  getRankingAction,\n} from \"../../store/actionCreators\";\n\nimport { RankTitleWrapper } from \"./style\";\n\nexport default memo(function LJRanking() {\n  // redux hooks\n  const { listTitle, currentIndex } = useSelector(\n    (state) => ({\n      listTitle: state.getIn([\"ranking\", \"listTitle\"]),\n      currentIndex: state.getIn([\"ranking\", \"currentIndex\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // react hooks\n  useEffect(() => {\n    const id = listTitle[currentIndex] && listTitle[currentIndex].id;\n    if (!id) return;\n    dispatch(getRankingAction(id));\n  }, [dispatch, listTitle, currentIndex]);\n\n  // handle functions\n  // 点击榜单后，会在 header 和 list 展示对应的榜单信息\n  // 保存：当前打开的榜单：下标 currentIndex、名称 listTitle\n  const handleItemClick = (index) => {\n    dispatch(changeCurrentIndexAction(index));\n    const id = listTitle[currentIndex].id;\n    dispatch(getRankingAction(id));\n  };\n\n  return (\n    <RankTitleWrapper>\n      {listTitle.map((item, index) => {\n        // 前四个和后面的分别是两组，各组需要添加一个标题名\n        const header = [\"云音乐特色榜\", \"全球媒体榜\"];\n        let listClassification;\n        if (index === 0 || index === 4) {\n          listClassification = (\n            <h2 className=\"header\">{index === 0 ? header[0] : header[1]}</h2>\n          );\n        }\n\n        return (\n          <div key={item.id}>\n            {listClassification}\n            <div\n              className={classNames(\"item\", { active: index === currentIndex })}\n              onClick={(e) => handleItemClick(index)}\n            >\n              <img src={getSizeImage(item.coverImgUrl, 40)} alt={item.name} />\n              <div className=\"info\">\n                <div className=\"title\">{item.name}</div>\n                <div className=\"time\">{item.updateFrequency}</div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </RankTitleWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}