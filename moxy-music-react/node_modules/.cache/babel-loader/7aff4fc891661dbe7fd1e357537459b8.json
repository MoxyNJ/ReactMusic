{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\recommend\\\\c-cpns\\\\top-banner\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useCallback, useState } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { getTopBannerAction } from \"../../store/actionCreators\"; // 组件导入\n\nimport { Carousel } from \"antd\";\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJTopBanner() {\n  _s();\n\n  // state\n  // 模糊图的下标\n  const [currentIndex, setCurrentIndex] = useState(0); // redux 相关的内容 + hooks\n  // 拿到state\n\n  const {\n    topBanners\n  } = useSelector(state => ({\n    // topBanners: state.get(\"recommend\").get(\"topBanners\"),\n    topBanners: state.getIn([\"recommend\", \"topBanners\"])\n  }), shallowEqual); // 拿到dispatch\n\n  const dispatch = useDispatch(); // 控制左右翻页\n\n  const bannerRef = useRef(); // 发送网络请求\n\n  useEffect(() => {\n    console.log(dispatch);\n    dispatch(getTopBannerAction());\n  }, [dispatch]); // 背景模糊图\n  // 使用 useCallback，防止该回调函数每次组件渲染都重定义\n\n  const bannerChange = useCallback((from, to) => {\n    // 根据API自身携带了 from 和 to 这两个参数\n    // console.log(to)\n    setCurrentIndex(to);\n  }, []); // 其他业务逻辑\n  // 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\n  // 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\n\n  const bgImage = topBanners[currentIndex] && topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\n  return /*#__PURE__*/_jsxDEV(BannerWrapper, {\n    bgImage: bgImage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner wrap-v2\",\n      children: [/*#__PURE__*/_jsxDEV(BannerLeft, {\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          effect: \"fade\" // autoplay\n          ,\n          ref: bannerRef,\n          beforeChange: bannerChange,\n          children: topBanners.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"banner-item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: item.imageUrl,\n                alt: item.topTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, item.imageUrl, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BannerRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BannerControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn left\",\n          onClick: e => bannerRef.current.prev()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn right\",\n          onClick: e => bannerRef.current.next()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}, \"NeNmvC2U67GhRSWwuijt7y8c2RU=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/recommend/c-cpns/top-banner/index.js"],"names":["React","memo","useEffect","useRef","useCallback","useState","useSelector","useDispatch","shallowEqual","getTopBannerAction","Carousel","BannerWrapper","BannerLeft","BannerRight","BannerControl","LJTopBanner","currentIndex","setCurrentIndex","topBanners","state","getIn","dispatch","bannerRef","console","log","bannerChange","from","to","bgImage","imageUrl","map","item","index","topTitle","e","current","prev","next"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef, useCallback, useState } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport { getTopBannerAction } from \"../../store/actionCreators\";\r\n\r\n// 组件导入\r\nimport { Carousel } from \"antd\";\r\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from \"./style\";\r\n\r\nexport default memo(function LJTopBanner() {\r\n  // state\r\n  // 模糊图的下标\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // redux 相关的内容 + hooks\r\n  // 拿到state\r\n  const { topBanners } = useSelector(\r\n    (state) => ({\r\n      // topBanners: state.get(\"recommend\").get(\"topBanners\"),\r\n      topBanners: state.getIn([\"recommend\", \"topBanners\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // 拿到dispatch\r\n  const dispatch = useDispatch();\r\n\r\n  // 控制左右翻页\r\n  const bannerRef = useRef();\r\n\r\n  // 发送网络请求\r\n  useEffect(() => {\r\n    console.log(dispatch);\r\n    dispatch(getTopBannerAction());\r\n  }, [dispatch]);\r\n\r\n  // 背景模糊图\r\n  // 使用 useCallback，防止该回调函数每次组件渲染都重定义\r\n  const bannerChange = useCallback((from, to) => {\r\n    // 根据API自身携带了 from 和 to 这两个参数\r\n    // console.log(to)\r\n    setCurrentIndex(to);\r\n  }, []);\r\n\r\n  // 其他业务逻辑\r\n  // 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\r\n  // 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\r\n  const bgImage =\r\n    topBanners[currentIndex] &&\r\n    topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\r\n\r\n  return (\r\n    <BannerWrapper bgImage={bgImage}>\r\n      <div className=\"banner wrap-v2\">\r\n        <BannerLeft>\r\n          <Carousel\r\n            effect=\"fade\"\r\n            // autoplay\r\n            ref={bannerRef}\r\n            beforeChange={bannerChange}\r\n          >\r\n            {topBanners.map((item, index) => {\r\n              return (\r\n                <div className=\"banner-item\" key={item.imageUrl}>\r\n                  <img\r\n                    className=\"image\"\r\n                    src={item.imageUrl}\r\n                    alt={item.topTitle}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </BannerLeft>\r\n        <BannerRight></BannerRight>\r\n        <BannerControl>\r\n          <button\r\n            className=\"btn left\"\r\n            onClick={(e) => bannerRef.current.prev()}\r\n          ></button>\r\n          <button\r\n            className=\"btn right\"\r\n            onClick={(e) => bannerRef.current.next()}\r\n          ></button>\r\n        </BannerControl>\r\n      </div>\r\n    </BannerWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}