{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\player\\\\app-player-bar\\\\c-cpns\\\\app-player-volume\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Slider } from \"antd\";\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\nimport { PlayerVolumeWrapper } from \"./style\";\nimport \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerVolume() {\n  _s();\n\n  // 进度条\n  const [progress, setProgress] = useState(0); // 初始化音量，获取数据\n\n  useSelector;\n  const dispatch = useDispatch(); // 对音量的初始化\n\n  useEffect(() => {}, []); // 按下\n\n  const sliderChange = useCallback(value => {\n    const currentVolume = value / 100;\n    setProgress(value);\n    dispatch(changePlayerVolumeAction(currentVolume));\n  }, [dispatch]); // 松开\n\n  const sliderAfterChange = useCallback(value => {\n    const currentVolume = value / 100;\n    dispatch(changePlayerVolumeAction(currentVolume));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PlayerVolumeWrapper, {\n    className: \"sprite_playbar\",\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      vertical: true,\n      className: \"sprite_playbar\",\n      value: progress,\n      onChange: sliderChange,\n      onAfterChange: sliderAfterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}, \"/uj9phMWjPBpH0znHcFLCM0VHjo=\", false, function () {\n  return [useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/player/app-player-bar/c-cpns/app-player-volume/index.js"],"names":["React","memo","useCallback","useEffect","useState","useDispatch","useSelector","Slider","changePlayerVolumeAction","PlayerVolumeWrapper","LJPlayerVolume","progress","setProgress","dispatch","sliderChange","value","currentVolume","sliderAfterChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,mBAAT,QAAoC,SAApC;AACA,OAAe,aAAf;;AAEA,kCAAeR,IAAI,SAAC,SAASS,cAAT,GAA0B;AAAA;;AAC5C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC,CAF4C,CAG5C;;AACAE,EAAAA,WAAW;AAEX,QAAMO,QAAQ,GAAGR,WAAW,EAA5B,CAN4C,CAQ5C;;AACAF,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT,CAT4C,CAW5C;;AACA,QAAMW,YAAY,GAAGZ,WAAW,CAC7Ba,KAAD,IAAW;AACT,UAAMC,aAAa,GAAGD,KAAK,GAAG,GAA9B;AACAH,IAAAA,WAAW,CAACG,KAAD,CAAX;AACAF,IAAAA,QAAQ,CAACL,wBAAwB,CAACQ,aAAD,CAAzB,CAAR;AACD,GAL6B,EAM9B,CAACH,QAAD,CAN8B,CAAhC,CAZ4C,CAqB5C;;AACA,QAAMI,iBAAiB,GAAGf,WAAW,CAClCa,KAAD,IAAW;AACT,UAAMC,aAAa,GAAGD,KAAK,GAAG,GAA9B;AACAF,IAAAA,QAAQ,CAACL,wBAAwB,CAACQ,aAAD,CAAzB,CAAR;AACD,GAJkC,EAKnC,CAACH,QAAD,CALmC,CAArC;AAQA,sBACE,QAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,gBAA/B;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,KAAK,EAAEF,QAHT;AAIE,MAAA,QAAQ,EAAEG,YAJZ;AAKE,MAAA,aAAa,EAAEG;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCkB;AAAA,UAMAZ,WANA;AAAA,GAAnB","sourcesContent":["import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Slider } from \"antd\";\r\n\r\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\r\n\r\nimport { PlayerVolumeWrapper } from \"./style\";\r\nimport {} from \"react-redux\";\r\n\r\nexport default memo(function LJPlayerVolume() {\r\n  // 进度条\r\n  const [progress, setProgress] = useState(0);\r\n  // 初始化音量，获取数据\r\n  useSelector;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // 对音量的初始化\r\n  useEffect(() => {}, []);\r\n\r\n  // 按下\r\n  const sliderChange = useCallback(\r\n    (value) => {\r\n      const currentVolume = value / 100;\r\n      setProgress(value);\r\n      dispatch(changePlayerVolumeAction(currentVolume));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // 松开\r\n  const sliderAfterChange = useCallback(\r\n    (value) => {\r\n      const currentVolume = value / 100;\r\n      dispatch(changePlayerVolumeAction(currentVolume));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <PlayerVolumeWrapper className=\"sprite_playbar\">\r\n      <Slider\r\n        vertical\r\n        className=\"sprite_playbar\"\r\n        value={progress}\r\n        onChange={sliderChange}\r\n        onAfterChange={sliderAfterChange}\r\n      />\r\n    </PlayerVolumeWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}