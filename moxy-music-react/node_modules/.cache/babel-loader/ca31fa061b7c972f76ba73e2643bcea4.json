{"ast":null,"code":"import React,{memo}from\"react\";import{shallowEqual,useSelector}from\"react-redux\";import{getSizeImage,formatMonthDay}from\"@/utils/format-utils\";import LJRankingSongPannelBar from\"@/components/ranking-song-pannel-bar\";import{LJRankingTitleWrapper}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJRankingTitle(){// redux hooks\nvar _useSelector=useSelector(function(state){return{playList:state.getIn([\"ranking\",\"playList\"]),listTitle:state.getIn([\"ranking\",\"listTitle\"]),currentIndex:state.getIn([\"ranking\",\"currentIndex\"])};},shallowEqual),_useSelector$playList=_useSelector.playList,playList=_useSelector$playList===void 0?[]:_useSelector$playList,listTitle=_useSelector.listTitle,currentIndex=_useSelector.currentIndex;// react hooks\n// other function\nreturn/*#__PURE__*/_jsxs(LJRankingTitleWrapper,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"image\",children:[/*#__PURE__*/_jsx(\"img\",{src:getSizeImage(playList.coverImgUrl,150),alt:playList.name}),/*#__PURE__*/_jsx(\"div\",{className:\"mask sprite_cover\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"name\",children:playList.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"time\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon sprite_icon2\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"flash\",children:[\"\\u6700\\u8FD1\\u66F4\\u65B0\\uFF1A\",formatMonthDay(playList.trackUpdateTime)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"regular\",children:[\"\\uFF08\",listTitle[currentIndex]&&listTitle[currentIndex].updateFrequency,\"\\uFF09\"]})]}),/*#__PURE__*/_jsx(LJRankingSongPannelBar,{subscribedCount:\"(\".concat(playList.subscribedCount,\")\"),shareCount:\"(\".concat(playList.shareCount,\")\"),download:\"\\u4E0B\\u8F7D\",commentCount:\"(\".concat(playList.commentCount,\")\")})]})]});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/ranking/c-cpns/rank-header/index.js"],"names":["React","memo","shallowEqual","useSelector","getSizeImage","formatMonthDay","LJRankingSongPannelBar","LJRankingTitleWrapper","LJRankingTitle","state","playList","getIn","listTitle","currentIndex","coverImgUrl","name","trackUpdateTime","updateFrequency","subscribedCount","shareCount","commentCount"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,KAA4B,OAA5B,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,aAA1C,CAEA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,sBAA7C,CAEA,MAAOC,CAAAA,sBAAP,KAAmC,sCAAnC,CAEA,OAASC,qBAAT,KAAsC,SAAtC,C,wFACA,2BAAeN,IAAI,CAAC,QAASO,CAAAA,cAAT,EAA0B,CAC5C;AAD4C,iBAMxCL,WAAW,CACb,SAACM,KAAD,QAAY,CACVC,QAAQ,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,UAAZ,CAAZ,CADA,CAEVC,SAAS,CAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,WAAZ,CAAZ,CAFD,CAGVE,YAAY,CAAEJ,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,CAAY,cAAZ,CAAZ,CAHJ,CAAZ,EADa,CAMbT,YANa,CAN6B,oCAG1CQ,QAH0C,CAG1CA,QAH0C,gCAG/B,EAH+B,uBAI1CE,SAJ0C,cAI1CA,SAJ0C,CAK1CC,YAL0C,cAK1CA,YAL0C,CAe5C;AAEA;AAEA,mBACE,MAAC,qBAAD,yBACE,aAAK,SAAS,CAAC,OAAf,wBACE,YACE,GAAG,CAAET,YAAY,CAACM,QAAQ,CAACI,WAAV,CAAuB,GAAvB,CADnB,CAEE,GAAG,CAAEJ,QAAQ,CAACK,IAFhB,EADF,cAKE,YAAK,SAAS,CAAC,mBAAf,EALF,GADF,cAQE,aAAK,SAAS,CAAC,MAAf,wBACE,YAAK,SAAS,CAAC,MAAf,UAAuBL,QAAQ,CAACK,IAAhC,EADF,cAEE,aAAK,SAAS,CAAC,MAAf,wBACE,UAAG,SAAS,CAAC,mBAAb,EADF,cAEE,cAAM,SAAS,CAAC,OAAhB,4CACQV,cAAc,CAACK,QAAQ,CAACM,eAAV,CADtB,GAFF,cAKE,cAAM,SAAS,CAAC,SAAhB,oBAEGJ,SAAS,CAACC,YAAD,CAAT,EAA2BD,SAAS,CAACC,YAAD,CAAT,CAAwBI,eAFtD,YALF,GAFF,cAaE,KAAC,sBAAD,EACE,eAAe,YAAMP,QAAQ,CAACQ,eAAf,KADjB,CAEE,UAAU,YAAMR,QAAQ,CAACS,UAAf,KAFZ,CAGE,QAAQ,CAAC,cAHX,CAIE,YAAY,YAAMT,QAAQ,CAACU,YAAf,KAJd,EAbF,GARF,GADF,CA+BD,CAlDkB,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nimport { getSizeImage, formatMonthDay } from \"@/utils/format-utils\";\n\nimport LJRankingSongPannelBar from \"@/components/ranking-song-pannel-bar\";\n\nimport { LJRankingTitleWrapper } from \"./style\";\nexport default memo(function LJRankingTitle() {\n  // redux hooks\n  const {\n    playList = [],\n    listTitle,\n    currentIndex,\n  } = useSelector(\n    (state) => ({\n      playList: state.getIn([\"ranking\", \"playList\"]),\n      listTitle: state.getIn([\"ranking\", \"listTitle\"]),\n      currentIndex: state.getIn([\"ranking\", \"currentIndex\"]),\n    }),\n    shallowEqual\n  );\n\n  // react hooks\n\n  // other function\n\n  return (\n    <LJRankingTitleWrapper>\n      <div className=\"image\">\n        <img\n          src={getSizeImage(playList.coverImgUrl, 150)}\n          alt={playList.name}\n        />\n        <div className=\"mask sprite_cover\"></div>\n      </div>\n      <div className=\"info\">\n        <div className=\"name\">{playList.name}</div>\n        <div className=\"time\">\n          <i className=\"icon sprite_icon2\"></i>\n          <span className=\"flash\">\n            最近更新：{formatMonthDay(playList.trackUpdateTime)}\n          </span>\n          <span className=\"regular\">\n            （\n            {listTitle[currentIndex] && listTitle[currentIndex].updateFrequency}\n            ）\n          </span>\n        </div>\n        <LJRankingSongPannelBar\n          subscribedCount={`(${playList.subscribedCount})`}\n          shareCount={`(${playList.shareCount})`}\n          download=\"下载\"\n          commentCount={`(${playList.commentCount})`}\n        />\n      </div>\n    </LJRankingTitleWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}