{"ast":null,"code":"import * as actionTypes from \"./constants\";\nimport { PER_PAGE_NUMBER } from \"@/common/contants\";\nimport { getSongCategoryList, getSongCategory } from \"@/services/songList\";\nimport { handleSongsCategory } from \"@/utils/handle-data\"; // 不暴露，内部action\n\nconst changeCategoryAction = cate => ({\n  type: actionTypes.CHANGE_CATEGORY,\n  category: cate\n});\n\nconst changeSongListAction = list => ({\n  type: actionTypes.CHANGE_SONG_LIST,\n  songList: list\n}); // 暴露，异步action\n// 当前展示的歌单类名\n\n\nexport const changeCurrentCategoryAction = name => ({\n  type: actionTypes.CHANGE_CURRENT_CATEGORY,\n  currentCategory: name\n}); // 全部歌单类名\n\nexport const getSongCategoryAction = () => {\n  return dispatch => {\n    getSongCategory().then(res => {\n      dispatch(changeCategoryAction(handleSongsCategory(res)));\n    });\n  };\n}; // 当前展示的歌单内容\n\nexport const getSongCategoryListAction = page => {\n  return (dispatch, getState) => {\n    // 获取歌单类名 currentCategory\n    const name = getState().getIn([\"songs\", \"currentCategory\"]);\n    getSongCategoryList(name, page * PER_PAGE_NUMBER).then(res => {\n      dispatch(changeSongListAction(res));\n    });\n  };\n}; // 首页初始化全部数据，展示 “全部” 类别下的内容\n\nexport const InitGetSongIndoAction = res => {\n  return dispatch => {};\n};\n_c = InitGetSongIndoAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitGetSongIndoAction\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/songList/store/actionCreators.js"],"names":["actionTypes","PER_PAGE_NUMBER","getSongCategoryList","getSongCategory","handleSongsCategory","changeCategoryAction","cate","type","CHANGE_CATEGORY","category","changeSongListAction","list","CHANGE_SONG_LIST","songList","changeCurrentCategoryAction","name","CHANGE_CURRENT_CATEGORY","currentCategory","getSongCategoryAction","dispatch","then","res","getSongCategoryListAction","page","getState","getIn","InitGetSongIndoAction"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,aAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,qBAArD;AACA,SAASC,mBAAT,QAAoC,qBAApC,C,CACA;;AACA,MAAMC,oBAAoB,GAAIC,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEP,WAAW,CAACQ,eADoB;AAEtCC,EAAAA,QAAQ,EAAEH;AAF4B,CAAX,CAA7B;;AAKA,MAAMI,oBAAoB,GAAIC,IAAD,KAAW;AACtCJ,EAAAA,IAAI,EAAEP,WAAW,CAACY,gBADoB;AAEtCC,EAAAA,QAAQ,EAAEF;AAF4B,CAAX,CAA7B,C,CAKA;AACA;;;AACA,OAAO,MAAMG,2BAA2B,GAAIC,IAAD,KAAW;AACpDR,EAAAA,IAAI,EAAEP,WAAW,CAACgB,uBADkC;AAEpDC,EAAAA,eAAe,EAAEF;AAFmC,CAAX,CAApC,C,CAKP;;AACA,OAAO,MAAMG,qBAAqB,GAAG,MAAM;AACzC,SAAQC,QAAD,IAAc;AACnBhB,IAAAA,eAAe,GAAGiB,IAAlB,CAAwBC,GAAD,IAAS;AAC9BF,MAAAA,QAAQ,CAACd,oBAAoB,CAACD,mBAAmB,CAACiB,GAAD,CAApB,CAArB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAMC,yBAAyB,GAAIC,IAAD,IAAU;AACjD,SAAO,CAACJ,QAAD,EAAWK,QAAX,KAAwB;AAC7B;AACA,UAAMT,IAAI,GAAGS,QAAQ,GAAGC,KAAX,CAAiB,CAAC,OAAD,EAAU,iBAAV,CAAjB,CAAb;AACAvB,IAAAA,mBAAmB,CAACa,IAAD,EAAOQ,IAAI,GAAGtB,eAAd,CAAnB,CAAkDmB,IAAlD,CAAwDC,GAAD,IAAS;AAC9DF,MAAAA,QAAQ,CAACT,oBAAoB,CAACW,GAAD,CAArB,CAAR;AACD,KAFD;AAGD,GAND;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAMK,qBAAqB,GAAIL,GAAD,IAAS;AAC5C,SAAQF,QAAD,IAAc,CAAE,CAAvB;AACD,CAFM;KAAMO,qB","sourcesContent":["import * as actionTypes from \"./constants\";\r\nimport { PER_PAGE_NUMBER } from \"@/common/contants\";\r\n\r\nimport { getSongCategoryList, getSongCategory } from \"@/services/songList\";\r\nimport { handleSongsCategory } from \"@/utils/handle-data\";\r\n// 不暴露，内部action\r\nconst changeCategoryAction = (cate) => ({\r\n  type: actionTypes.CHANGE_CATEGORY,\r\n  category: cate,\r\n});\r\n\r\nconst changeSongListAction = (list) => ({\r\n  type: actionTypes.CHANGE_SONG_LIST,\r\n  songList: list,\r\n});\r\n\r\n// 暴露，异步action\r\n// 当前展示的歌单类名\r\nexport const changeCurrentCategoryAction = (name) => ({\r\n  type: actionTypes.CHANGE_CURRENT_CATEGORY,\r\n  currentCategory: name,\r\n});\r\n\r\n// 全部歌单类名\r\nexport const getSongCategoryAction = () => {\r\n  return (dispatch) => {\r\n    getSongCategory().then((res) => {\r\n      dispatch(changeCategoryAction(handleSongsCategory(res)));\r\n    });\r\n  };\r\n};\r\n\r\n// 当前展示的歌单内容\r\nexport const getSongCategoryListAction = (page) => {\r\n  return (dispatch, getState) => {\r\n    // 获取歌单类名 currentCategory\r\n    const name = getState().getIn([\"songs\", \"currentCategory\"]);\r\n    getSongCategoryList(name, page * PER_PAGE_NUMBER).then((res) => {\r\n      dispatch(changeSongListAction(res));\r\n    });\r\n  };\r\n};\r\n\r\n// 首页初始化全部数据，展示 “全部” 类别下的内容\r\nexport const InitGetSongIndoAction = (res) => {\r\n  return (dispatch) => {};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}