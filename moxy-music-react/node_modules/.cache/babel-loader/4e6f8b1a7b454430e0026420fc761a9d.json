{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\artist\\\\c-cpns\\\\artist-list\\\\c-cpns\\\\alpha-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { singerAlphas } from \"@/utils/handle-data\";\nimport { getArtistListAction } from \"../../../../store/actionCreators\";\nimport { AlphaListWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJAlphaList() {\n  _s();\n\n  // props & state\n  const [currentAlpha, setCurrentAlpha] = useState(\"-1\"); // redux hooks\n\n  const {\n    currentType,\n    currentArea\n  } = useSelector(state => ({\n    currentType: state.getIn([\"artist\", \"currentType\"]),\n    currentArea: state.getIn([\"artist\", \"currentArea\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // react hooks\n  // 初始化时，默认打开 “全部” 类目\n\n  useEffect(() => {\n    setCurrentAlpha(\"-1\");\n  }, [currentType]);\n  useEffect(() => {\n    dispatch(getArtistListAction(currentArea, currentType.type, currentAlpha));\n  }, [currentAlpha, currentType, currentArea, dispatch]);\n  return /*#__PURE__*/_jsxDEV(AlphaListWrapper, {\n    hasTop: currentArea !== -1,\n    children: currentArea !== -1 && singerAlphas.map((item, index) => {\n      const isActive = currentAlpha === item;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(\"item\", {\n          active: isActive\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => setCurrentAlpha(item),\n          className: classNames({\n            small: item === \"-1\" || item === \"0\"\n          }),\n          children: (() => {\n            switch (item) {\n              case \"-1\":\n                return \"热门\";\n\n              case \"0\":\n                return \"其他\";\n\n              default:\n                return item.toUpperCase();\n            }\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}, \"YEg++9sETrUG80acIkJE8OAdsNs=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/alpha-list/index.js"],"names":["React","memo","useState","useEffect","useSelector","shallowEqual","useDispatch","classNames","singerAlphas","getArtistListAction","AlphaListWrapper","LJAlphaList","currentAlpha","setCurrentAlpha","currentType","currentArea","state","getIn","dispatch","type","map","item","index","isActive","active","e","small","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AAEA,SAASC,gBAAT,QAAiC,SAAjC;;AACA,kCAAeT,IAAI,SAAC,SAASU,WAAT,GAAuB;AAAA;;AACzC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD,CAFyC,CAIzC;;AACA,QAAM;AAAEY,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BX,WAAW,CAC7CY,KAAD,KAAY;AACVF,IAAAA,WAAW,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CADH;AAEVF,IAAAA,WAAW,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ;AAFH,GAAZ,CAD8C,EAK9CZ,YAL8C,CAAhD;AAOA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B,CAZyC,CAczC;AACA;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFQ,EAEN,CAACC,WAAD,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACT,mBAAmB,CAACM,WAAD,EAAcD,WAAW,CAACK,IAA1B,EAAgCP,YAAhC,CAApB,CAAR;AACD,GAFQ,EAEN,CAACA,YAAD,EAAeE,WAAf,EAA4BC,WAA5B,EAAyCG,QAAzC,CAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEH,WAAW,KAAK,CAAC,CAA3C;AAAA,cACGA,WAAW,KAAK,CAAC,CAAjB,IACCP,YAAY,CAACY,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,YAAMC,QAAQ,GAAGX,YAAY,KAAKS,IAAlC;AACA,0BACE;AAEE,QAAA,SAAS,EAAEd,UAAU,CAAC,MAAD,EAAS;AAAEiB,UAAAA,MAAM,EAAED;AAAV,SAAT,CAFvB;AAAA,+BAIE;AACE,UAAA,OAAO,EAAGE,CAAD,IAAOZ,eAAe,CAACQ,IAAD,CADjC;AAEE,UAAA,SAAS,EAAEd,UAAU,CAAC;AACpBmB,YAAAA,KAAK,EAAEL,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK;AADb,WAAD,CAFvB;AAAA,oBAOG,CAAC,MAAM;AACN,oBAAQA,IAAR;AACE,mBAAK,IAAL;AACE,uBAAO,IAAP;;AACF,mBAAK,GAAL;AACE,uBAAO,IAAP;;AACF;AACE,uBAAOA,IAAI,CAACM,WAAL,EAAP;AANJ;AAQD,WATA;AAPH;AAAA;AAAA;AAAA;AAAA;AAJF,SACOL,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA3BD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAzDkB;AAAA,UAKoBlB,WALpB,EAYAE,WAZA;AAAA,GAAnB","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { singerAlphas } from \"@/utils/handle-data\";\r\nimport { getArtistListAction } from \"../../../../store/actionCreators\";\r\n\r\nimport { AlphaListWrapper } from \"./style\";\r\nexport default memo(function LJAlphaList() {\r\n  // props & state\r\n  const [currentAlpha, setCurrentAlpha] = useState(\"-1\");\r\n\r\n  // redux hooks\r\n  const { currentType, currentArea } = useSelector(\r\n    (state) => ({\r\n      currentType: state.getIn([\"artist\", \"currentType\"]),\r\n      currentArea: state.getIn([\"artist\", \"currentArea\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // react hooks\r\n  // 初始化时，默认打开 “全部” 类目\r\n  useEffect(() => {\r\n    setCurrentAlpha(\"-1\");\r\n  }, [currentType]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getArtistListAction(currentArea, currentType.type, currentAlpha));\r\n  }, [currentAlpha, currentType, currentArea, dispatch]);\r\n\r\n  return (\r\n    <AlphaListWrapper hasTop={currentArea !== -1}>\r\n      {currentArea !== -1 &&\r\n        singerAlphas.map((item, index) => {\r\n          const isActive = currentAlpha === item;\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={classNames(\"item\", { active: isActive })}\r\n            >\r\n              <span\r\n                onClick={(e) => setCurrentAlpha(item)}\r\n                className={classNames({\r\n                  small: item === \"-1\" || item === \"0\",\r\n                })}\r\n              >\r\n                {/* 使用立即执行箭头函数，可以在jsx中用switch */}\r\n                {(() => {\r\n                  switch (item) {\r\n                    case \"-1\":\r\n                      return \"热门\";\r\n                    case \"0\":\r\n                      return \"其他\";\r\n                    default:\r\n                      return item.toUpperCase();\r\n                  }\r\n                })()}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n    </AlphaListWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}