{"ast":null,"code":"var _jsxFileName = \"/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-category/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { artistCategories } from \"@/services/local-data\";\nimport { changeCurrentAreaAction, changeCurrentTypeAction } from \"../../store/actionCreators\";\nimport { CategoryWrapper, CategoryItem } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJArtistCategory() {\n  _s();\n\n  console.log(artistCategories); // redux hooks\n\n  const {\n    currentArea,\n    currentType\n  } = useSelector(state => ({\n    currentArea: state.getIn([\"artist\", \"currentArea\"]),\n    currentType: state.getIn([\"artist\", \"currentType\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // handle function\n\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  }; // 用一个高阶函数，把每个大类中的小类提取了出来\n\n\n  const renderArtist = (artists, area) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: artists.map((item, index) => {\n        // 判断是否被选中，要大类area和小类type都相符合。\n        const isSelect = currentArea === area && currentType.type === item.type;\n        return /*#__PURE__*/_jsxDEV(CategoryItem, {\n          className: classNames({\n            active: isSelect\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: e => selectArtist(area, item),\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n    children: artistCategories.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), renderArtist(item.artists, item.area)]\n      }, item.area, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}, \"xFibncTQICo7vxvRK6LLsqTiC/I=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-category/index.js"],"names":["React","memo","useDispatch","useSelector","shallowEqual","classNames","artistCategories","changeCurrentAreaAction","changeCurrentTypeAction","CategoryWrapper","CategoryItem","LJArtistCategory","console","log","currentArea","currentType","state","getIn","dispatch","selectArtist","area","type","renderArtist","artists","map","item","index","isSelect","active","e","name","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA,SACEC,uBADF,EAEEC,uBAFF,QAGO,4BAHP;AAKA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,SAA9C;;AACA,kCAAeT,IAAI,SAAC,SAASU,gBAAT,GAA4B;AAAA;;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYP,gBAAZ,EAD8C,CAE9C;;AACA,QAAM;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BZ,WAAW,CAC7Ca,KAAD,KAAY;AACVF,IAAAA,WAAW,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CADH;AAEVF,IAAAA,WAAW,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ;AAFH,GAAZ,CAD8C,EAK9Cb,YAL8C,CAAhD;AAOA,QAAMc,QAAQ,GAAGhB,WAAW,EAA5B,CAV8C,CAY9C;;AACA,QAAMiB,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnCH,IAAAA,QAAQ,CAACX,uBAAuB,CAACa,IAAD,CAAxB,CAAR;AACAF,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,IAAD,CAAxB,CAAR;AACD,GAHD,CAb8C,CAkB9C;;;AACA,QAAMC,YAAY,GAAG,CAACC,OAAD,EAAUH,IAAV,KAAmB;AACtC,wBACE;AAAA,gBACGG,OAAO,CAACC,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B;AACA,cAAMC,QAAQ,GACZb,WAAW,KAAKM,IAAhB,IAAwBL,WAAW,CAACM,IAAZ,KAAqBI,IAAI,CAACJ,IADpD;AAEA,4BACE,QAAC,YAAD;AAEE,UAAA,SAAS,EAAEhB,UAAU,CAAC;AAAEuB,YAAAA,MAAM,EAAED;AAAV,WAAD,CAFvB;AAAA,iCAKE;AAAM,YAAA,OAAO,EAAGE,CAAD,IAAOV,YAAY,CAACC,IAAD,EAAOK,IAAP,CAAlC;AAAA,sBAAiDA,IAAI,CAACK;AAAtD;AAAA;AAAA;AAAA;AAAA;AALF,WACOL,IAAI,CAACK,IADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAbA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD,GAnBD;;AAqBA,sBACE,QAAC,eAAD;AAAA,cAEGxB,gBAAgB,CAACkB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBD,IAAI,CAACM;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGT,YAAY,CAACG,IAAI,CAACF,OAAN,EAAeE,IAAI,CAACL,IAApB,CAFf;AAAA,SAA8BK,IAAI,CAACL,IAAnC;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArDkB;AAAA,UAGoBjB,WAHpB,EAUAD,WAVA;AAAA,GAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { artistCategories } from \"@/services/local-data\";\n\nimport {\n  changeCurrentAreaAction,\n  changeCurrentTypeAction,\n} from \"../../store/actionCreators\";\n\nimport { CategoryWrapper, CategoryItem } from \"./style\";\nexport default memo(function LJArtistCategory() {\n  console.log(artistCategories);\n  // redux hooks\n  const { currentArea, currentType } = useSelector(\n    (state) => ({\n      currentArea: state.getIn([\"artist\", \"currentArea\"]),\n      currentType: state.getIn([\"artist\", \"currentType\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // handle function\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  };\n\n  // 用一个高阶函数，把每个大类中的小类提取了出来\n  const renderArtist = (artists, area) => {\n    return (\n      <div>\n        {artists.map((item, index) => {\n          // 判断是否被选中，要大类area和小类type都相符合。\n          const isSelect =\n            currentArea === area && currentType.type === item.type;\n          return (\n            <CategoryItem\n              key={item.name}\n              className={classNames({ active: isSelect })}\n            >\n              {/* 如果选中后，就会dispatch area & type，从而让list组件获取详细歌手数据 */}\n              <span onClick={(e) => selectArtist(area, item)}>{item.name}</span>\n            </CategoryItem>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <CategoryWrapper>\n      {/* 左侧导航的数据是本地提前保存的，直接拿来用。 */}\n      {artistCategories.map((item, index) => {\n        return (\n          <div className=\"section\" key={item.area}>\n            <h2 className=\"title\">{item.title}</h2>\n            {renderArtist(item.artists, item.area)}\n          </div>\n        );\n      })}\n    </CategoryWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}