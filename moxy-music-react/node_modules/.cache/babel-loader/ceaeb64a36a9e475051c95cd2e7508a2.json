{"ast":null,"code":"var _jsxFileName = \"/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-bar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { Slider } from \"antd\";\nimport { getSizeImage, formatDate, getPlayUrl } from \"@/utils/format-utils\";\nimport { getSongDetailAction } from \"../store/actionCreators\";\nimport { PlaybarWrapper, Control, PlayInfo, Operator } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJAppPlayBar() {\n  _s();\n\n  // component state：      组件内部的state\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false); // redux hooks：          获取state和dispatch\n\n  const {\n    currentSong\n  } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  const audioRef = useRef(); // other hooks：          react的hooks\n\n  useEffect(() => {\n    dispatch(getSongDetailAction(1858069368));\n  }, [dispatch]);\n  useEffect(() => {\n    audioRef.current.src = getPlayUrl(currentSong.id);\n  }, [currentSong.id]); // other function：       组件内部的其他逻辑\n  // 判断如果有值，才会去值，否则为 undefined。防止报，且可以一个默认值，这里就没给了。\n\n  const picUrl = currentSong.al && currentSong.al.picUrl || \"\";\n  const songName = currentSong.name || \"未知歌曲\";\n  const singerName = currentSong.ar && currentSong.ar[0].name || \"未知歌手\";\n  const duration = currentSong.dt || 0;\n  const showDuration = formatDate(duration, \"mm:ss\");\n  const showCurrentTime = formatDate(currentTime, \"mm:ss\"); //handle function\n\n  const playMusic = useCallback(() => {\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\n    setIsPlaying(!isPlaying);\n  }, [isPlaying]); // 播放条上的当前时间\n\n  const timeUpdate = useCallback(e => {\n    const currentTime = e.target.currentTime;\n\n    if (!isChanging) {\n      setCurrentTime(currentTime * 1000);\n      console.log(\"timeUpdate\", currentTime);\n      setProgress(currentTime * 1000 / duration * 100);\n    }\n  }, [duration, isChanging, currentTime]); // Slider是一个组定义组件，要往里面传递参数的时候，使用useCallback嵌套回调函数的时候，防止频繁重新定义\n  // 按下\n\n  const sliderChange = useCallback(value => {\n    const time = value / 100 * duration / 1000;\n    setProgress(value);\n    setCurrentTime(time * 1000);\n    console.log(\"time\", time);\n    console.log(\"???\");\n    console.log(currentTime);\n    setIsChanging(true);\n  }, [duration, currentTime]); // 松开\n\n  const sliderAfterChange = useCallback(value => {\n    const time = value / 100 * duration / 1000;\n    audioRef.current.currentTime = time;\n    setCurrentTime(time * 1000);\n    console.log(\"sliderAfterChange\", currentTime);\n    setIsChanging(false);\n    if (!isPlaying) playMusic();\n  }, [duration, isPlaying, playMusic, currentTime]);\n  return /*#__PURE__*/_jsxDEV(PlaybarWrapper, {\n    className: \"sprite_playbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content wrap-v2\",\n      children: [/*#__PURE__*/_jsxDEV(Control, {\n        isPlaying: isPlaying,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_playbar prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_playbar play\",\n          onClick: e => playMusic()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_playbar next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/todo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getSizeImage(picUrl, 35),\n              alt: \"\\u97F3\\u4E50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/todo\",\n              className: \"song-name\",\n              children: songName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/todo\",\n              className: \"singer-name\",\n              children: singerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [/*#__PURE__*/_jsxDEV(Slider, {\n              tipFormatter: null,\n              value: progress,\n              onChange: sliderChange,\n              onAfterChange: sliderAfterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"now-time\",\n                children: showCurrentTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"divider\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"now-time\",\n                children: currentTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"divider\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"duration\",\n                children: showDuration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Operator, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"playerbar_pip btn pip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn favor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right sprite_playbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn loop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        onTimeUpdate: timeUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}, \"27Y6j+JDFrQR2Uz/Vd/dRSRdKys=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-bar/index.js"],"names":["React","memo","useState","useEffect","useRef","useCallback","useDispatch","useSelector","shallowEqual","Slider","getSizeImage","formatDate","getPlayUrl","getSongDetailAction","PlaybarWrapper","Control","PlayInfo","Operator","LJAppPlayBar","currentTime","setCurrentTime","progress","setProgress","isChanging","setIsChanging","isPlaying","setIsPlaying","currentSong","state","getIn","dispatch","audioRef","current","src","id","picUrl","al","songName","name","singerName","ar","duration","dt","showDuration","showCurrentTime","playMusic","pause","play","timeUpdate","e","target","console","log","sliderChange","value","time","sliderAfterChange"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { Slider } from \"antd\";\n\nimport { getSizeImage, formatDate, getPlayUrl } from \"@/utils/format-utils\";\nimport { getSongDetailAction } from \"../store/actionCreators\";\n\nimport { PlaybarWrapper, Control, PlayInfo, Operator } from \"./style\";\n\nexport default memo(function LJAppPlayBar() {\n  // component state：      组件内部的state\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // redux hooks：          获取state和dispatch\n  const { currentSong } = useSelector(\n    (state) => ({\n      currentSong: state.getIn([\"player\", \"currentSong\"]),\n    }),\n    shallowEqual\n  );\n\n  const dispatch = useDispatch();\n\n  const audioRef = useRef();\n\n  // other hooks：          react的hooks\n  useEffect(() => {\n    dispatch(getSongDetailAction(1858069368));\n  }, [dispatch]);\n\n  useEffect(() => {\n    audioRef.current.src = getPlayUrl(currentSong.id);\n  }, [currentSong.id]);\n\n  // other function：       组件内部的其他逻辑\n  // 判断如果有值，才会去值，否则为 undefined。防止报，且可以一个默认值，这里就没给了。\n  const picUrl = (currentSong.al && currentSong.al.picUrl) || \"\";\n  const songName = currentSong.name || \"未知歌曲\";\n  const singerName = (currentSong.ar && currentSong.ar[0].name) || \"未知歌手\";\n  const duration = currentSong.dt || 0;\n  const showDuration = formatDate(duration, \"mm:ss\");\n  const showCurrentTime = formatDate(currentTime, \"mm:ss\");\n\n  //handle function\n  const playMusic = useCallback(() => {\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\n    setIsPlaying(!isPlaying);\n  }, [isPlaying]);\n\n  // 播放条上的当前时间\n  const timeUpdate = useCallback(\n    (e) => {\n      const currentTime = e.target.currentTime;\n      if (!isChanging) {\n        setCurrentTime(currentTime * 1000);\n        console.log(\"timeUpdate\", currentTime);\n        setProgress(((currentTime * 1000) / duration) * 100);\n      }\n    },\n    [duration, isChanging, currentTime]\n  );\n\n  // Slider是一个组定义组件，要往里面传递参数的时候，使用useCallback嵌套回调函数的时候，防止频繁重新定义\n  // 按下\n  const sliderChange = useCallback(\n    (value) => {\n      const time = ((value / 100) * duration) / 1000;\n      setProgress(value);\n      setCurrentTime(time * 1000);\n      console.log(\"time\", time);\n      console.log(\"???\");\n      console.log(currentTime);\n      setIsChanging(true);\n    },\n    [duration, currentTime]\n  );\n  // 松开\n  const sliderAfterChange = useCallback(\n    (value) => {\n      const time = ((value / 100) * duration) / 1000;\n      audioRef.current.currentTime = time;\n      setCurrentTime(time * 1000);\n      console.log(\"sliderAfterChange\", currentTime);\n      setIsChanging(false);\n      if (!isPlaying) playMusic();\n    },\n    [duration, isPlaying, playMusic, currentTime]\n  );\n\n  return (\n    <PlaybarWrapper className=\"sprite_playbar\">\n      <div className=\"content wrap-v2\">\n        <Control isPlaying={isPlaying}>\n          <button className=\"sprite_playbar prev\"></button>\n          <button\n            className=\"sprite_playbar play\"\n            onClick={(e) => playMusic()}\n          ></button>\n          <button className=\"sprite_playbar next\"></button>\n        </Control>\n        <PlayInfo>\n          <div className=\"image\">\n            <a href=\"/todo\">\n              <img src={getSizeImage(picUrl, 35)} alt=\"音乐\" />\n            </a>\n          </div>\n          <div className=\"info\">\n            <div className=\"song\">\n              <a href=\"/todo\" className=\"song-name\">\n                {songName}\n              </a>\n              <a href=\"/todo\" className=\"singer-name\">\n                {singerName}\n              </a>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                tipFormatter={null}\n                value={progress}\n                onChange={sliderChange}\n                onAfterChange={sliderAfterChange}\n              />\n              <div className=\"time\">\n                <span className=\"now-time\">{showCurrentTime}</span>\n                <span className=\"divider\">/</span>\n                <span className=\"now-time\">{currentTime}</span>\n                <span className=\"divider\">/</span>\n                <span className=\"duration\">{showDuration}</span>\n              </div>\n            </div>\n          </div>\n        </PlayInfo>\n        <Operator>\n          <div className=\"left\">\n            <button className=\"playerbar_pip btn pip\"></button>\n            <button className=\"sprite_playbar btn favor\"></button>\n            <button className=\"sprite_playbar btn share\"></button>\n          </div>\n          <div className=\"right sprite_playbar\">\n            <button className=\"sprite_playbar btn volume\"></button>\n            <button className=\"sprite_playbar btn loop\"></button>\n            <button className=\"sprite_playbar btn playlist\"></button>\n          </div>\n        </Operator>\n        <audio ref={audioRef} onTimeUpdate={timeUpdate} />\n      </div>\n    </PlaybarWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}