{"ast":null,"code":"var _jsxFileName = \"/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-bar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { Slider } from \"antd\";\nimport { getSizeImage, formatDate, getPlayUrl } from \"@/utils/format-utils\";\nimport { getSongDetailAction } from \"../store/actionCreators\";\nimport { PlaybarWrapper, Control, PlayInfo, Operator } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJAppPlayBar() {\n  _s();\n\n  // component state：      组件内部的state\n  // redux hooks：          获取state和dispatch\n  const {\n    currentSong\n  } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  const audioRef = useRef(); // other hooks：          react的hooks\n\n  useEffect(() => {\n    dispatch(getSongDetailAction(167876));\n  }, [dispatch]); // other function：       组件内部的其他逻辑\n  // 判断如果有值，才会去值，否则为 undefined。防止报，且可以一个默认值，这里就没给了。\n\n  const picUrl = currentSong.al && currentSong.al.picUrl || \"\";\n  const songName = currentSong.name || \"未知歌曲\";\n  const singerName = currentSong.ar && currentSong.ar[0].name || \"未知歌手\";\n  const duration = currentSong.dt || 0;\n  const showDuration = formatDate(duration, \"mm:ss\"); //handle function\n  // 歌曲链接根据网易云接口，要拼接一下\n\n  const playMusic = () => {\n    audioRef.current.src = getPlayUrl(currentSong.id);\n    audioRef.current.play;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlaybarWrapper, {\n    className: \"sprite_playbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content wrap-v2\",\n      children: [/*#__PURE__*/_jsxDEV(Control, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_playbar prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_playbar play\",\n          onClick: e => playMusic()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_playbar next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/todo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getSizeImage(picUrl, 35),\n              alt: \"\\u97F3\\u4E50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/todo\",\n              className: \"song-name\",\n              children: songName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/todo\",\n              className: \"singer-name\",\n              children: singerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [/*#__PURE__*/_jsxDEV(Slider, {\n              defaultValue: 30,\n              tipFormatter: null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"now-time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"duration\",\n                children: showDuration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Operator, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"playerbar_pip btn pip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn favor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right sprite_playbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn loop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sprite_playbar btn playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}, \"5RbfFBpbzmU18/hl9JCBO6a6oW4=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-bar/index.js"],"names":["React","memo","useEffect","useRef","useDispatch","useSelector","shallowEqual","Slider","getSizeImage","formatDate","getPlayUrl","getSongDetailAction","PlaybarWrapper","Control","PlayInfo","Operator","LJAppPlayBar","currentSong","state","getIn","dispatch","audioRef","picUrl","al","songName","name","singerName","ar","duration","dt","showDuration","playMusic","current","src","id","play","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,sBAArD;AACA,SAASC,mBAAT,QAAoC,yBAApC;AAEA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4CC,QAA5C,QAA4D,SAA5D;;AAEA,kCAAed,IAAI,SAAC,SAASe,YAAT,GAAwB;AAAA;;AAC1C;AAEA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBZ,WAAW,CAChCa,KAAD,KAAY;AACVD,IAAAA,WAAW,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ;AADH,GAAZ,CADiC,EAIjCb,YAJiC,CAAnC;AAOA,QAAMc,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAMiB,QAAQ,GAAGlB,MAAM,EAAvB,CAb0C,CAe1C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACT,mBAAmB,CAAC,MAAD,CAApB,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT,CAhB0C,CAoB1C;AACA;;AACA,QAAME,MAAM,GAAIL,WAAW,CAACM,EAAZ,IAAkBN,WAAW,CAACM,EAAZ,CAAeD,MAAlC,IAA6C,EAA5D;AACA,QAAME,QAAQ,GAAGP,WAAW,CAACQ,IAAZ,IAAoB,MAArC;AACA,QAAMC,UAAU,GAAIT,WAAW,CAACU,EAAZ,IAAkBV,WAAW,CAACU,EAAZ,CAAe,CAAf,EAAkBF,IAArC,IAA8C,MAAjE;AACA,QAAMG,QAAQ,GAAGX,WAAW,CAACY,EAAZ,IAAkB,CAAnC;AACA,QAAMC,YAAY,GAAGrB,UAAU,CAACmB,QAAD,EAAW,OAAX,CAA/B,CA1B0C,CA4B1C;AACA;;AACA,QAAMG,SAAS,GAAG,MAAM;AACtBV,IAAAA,QAAQ,CAACW,OAAT,CAAiBC,GAAjB,GAAuBvB,UAAU,CAACO,WAAW,CAACiB,EAAb,CAAjC;AACAb,IAAAA,QAAQ,CAACW,OAAT,CAAiBG,IAAjB;AACD,GAHD;;AAKA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,gBAA1B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,OAAD;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,OAAO,EAAGC,CAAD,IAAOL,SAAS;AAF3B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,QAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAG,YAAA,IAAI,EAAC,OAAR;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEvB,YAAY,CAACc,MAAD,EAAS,EAAT,CAAtB;AAAoC,cAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAG,cAAA,IAAI,EAAC,OAAR;AAAgB,cAAA,SAAS,EAAC,WAA1B;AAAA,wBACGE;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAG,cAAA,IAAI,EAAC,OAAR;AAAgB,cAAA,SAAS,EAAC,aAA1B;AAAA,wBACGE;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,YAAY,EAAE,EAAtB;AAA0B,cAAA,YAAY,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA,0BAA4BI;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAkCE,QAAC,QAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,eA8CE;AAAO,QAAA,GAAG,EAAET;AAAZ;AAAA;AAAA;AAAA;AAAA,cA9CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAvFkB;AAAA,UAIOhB,WAJP,EAWAD,WAXA;AAAA,GAAnB","sourcesContent":["import React, { memo, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { Slider } from \"antd\";\n\nimport { getSizeImage, formatDate, getPlayUrl } from \"@/utils/format-utils\";\nimport { getSongDetailAction } from \"../store/actionCreators\";\n\nimport { PlaybarWrapper, Control, PlayInfo, Operator } from \"./style\";\n\nexport default memo(function LJAppPlayBar() {\n  // component state：      组件内部的state\n\n  // redux hooks：          获取state和dispatch\n  const { currentSong } = useSelector(\n    (state) => ({\n      currentSong: state.getIn([\"player\", \"currentSong\"]),\n    }),\n    shallowEqual\n  );\n\n  const dispatch = useDispatch();\n\n  const audioRef = useRef();\n\n  // other hooks：          react的hooks\n  useEffect(() => {\n    dispatch(getSongDetailAction(167876));\n  }, [dispatch]);\n\n  // other function：       组件内部的其他逻辑\n  // 判断如果有值，才会去值，否则为 undefined。防止报，且可以一个默认值，这里就没给了。\n  const picUrl = (currentSong.al && currentSong.al.picUrl) || \"\";\n  const songName = currentSong.name || \"未知歌曲\";\n  const singerName = (currentSong.ar && currentSong.ar[0].name) || \"未知歌手\";\n  const duration = currentSong.dt || 0;\n  const showDuration = formatDate(duration, \"mm:ss\");\n\n  //handle function\n  // 歌曲链接根据网易云接口，要拼接一下\n  const playMusic = () => {\n    audioRef.current.src = getPlayUrl(currentSong.id);\n    audioRef.current.play;\n  };\n\n  return (\n    <PlaybarWrapper className=\"sprite_playbar\">\n      <div className=\"content wrap-v2\">\n        <Control>\n          <button className=\"sprite_playbar prev\"></button>\n          <button\n            className=\"sprite_playbar play\"\n            onClick={(e) => playMusic()}\n          ></button>\n          <button className=\"sprite_playbar next\"></button>\n        </Control>\n        <PlayInfo>\n          <div className=\"image\">\n            <a href=\"/todo\">\n              <img src={getSizeImage(picUrl, 35)} alt=\"音乐\" />\n            </a>\n          </div>\n          <div className=\"info\">\n            <div className=\"song\">\n              <a href=\"/todo\" className=\"song-name\">\n                {songName}\n              </a>\n              <a href=\"/todo\" className=\"singer-name\">\n                {singerName}\n              </a>\n            </div>\n            <div className=\"progress\">\n              <Slider defaultValue={30} tipFormatter={null} />\n              <div className=\"time\">\n                <span className=\"now-time\"></span>\n                <span className=\"divider\"></span>\n                <span className=\"duration\">{showDuration}</span>\n              </div>\n            </div>\n          </div>\n        </PlayInfo>\n        <Operator>\n          <div className=\"left\">\n            <button className=\"playerbar_pip btn pip\"></button>\n            <button className=\"sprite_playbar btn favor\"></button>\n            <button className=\"sprite_playbar btn share\"></button>\n          </div>\n          <div className=\"right sprite_playbar\">\n            <button className=\"sprite_playbar btn volume\"></button>\n            <button className=\"sprite_playbar btn loop\"></button>\n            <button className=\"sprite_playbar btn playlist\"></button>\n          </div>\n        </Operator>\n        <audio ref={audioRef} />\n      </div>\n    </PlaybarWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}