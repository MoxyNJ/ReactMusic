{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\ranking\\\\c-cpns\\\\rank-title\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect } from \"react\";\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { getSizeImage } from \"@/utils/format-utils\";\nimport { changeCurrentIndexAction, getRankingAction } from \"../../store/actionCreators\";\nimport { RankTitleWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJRanking() {\n  _s();\n\n  // redux hooks\n  const {\n    listTitle,\n    currentIndex\n  } = useSelector(state => ({\n    listTitle: state.getIn([\"ranking\", \"listTitle\"]),\n    currentIndex: state.getIn([\"ranking\", \"currentIndex\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // react hooks\n\n  useEffect(() => {\n    const id = listTitle[currentIndex] && listTitle[currentIndex].id;\n    if (!id) return;\n    dispatch(getRankingAction(id));\n  }, [dispatch, listTitle, currentIndex]); // handle functions\n  // 点击榜单后，会在 header 和 list 展示对应的榜单信息\n  // 保存：当前打开的榜单：下标 currentIndex、名称 listTitle\n\n  const handleItemClick = index => {\n    dispatch(changeCurrentIndexAction(index));\n    const id = listTitle[currentIndex].id;\n    dispatch(getRankingAction(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(RankTitleWrapper, {\n    children: listTitle.map((item, index) => {\n      // 前四个和后面的分别是两组，各组需要添加一个标题名\n      const header = [\"云音乐特色榜\", \"全球媒体榜\"];\n      let listClassification;\n\n      if (index === 0 || index === 4) {\n        listClassification = /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"header\",\n          children: index === 0 ? header[0] : header[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [listClassification, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"item\", {\n            active: index === currentIndex\n          }),\n          onClick: e => handleItemClick(index),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSizeImage(item.coverImgUrl, 40),\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: item.updateFrequency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}, \"ZdPjZj2hiZT4O/gqMDJS93yNc6M=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/ranking/c-cpns/rank-title/index.js"],"names":["React","memo","useEffect","shallowEqual","useSelector","useDispatch","classNames","getSizeImage","changeCurrentIndexAction","getRankingAction","RankTitleWrapper","LJRanking","listTitle","currentIndex","state","getIn","dispatch","id","handleItemClick","index","map","item","header","listClassification","active","e","coverImgUrl","name","updateFrequency"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,SACEC,wBADF,EAEEC,gBAFF,QAGO,4BAHP;AAKA,SAASC,gBAAT,QAAiC,SAAjC;;AAEA,kCAAeT,IAAI,SAAC,SAASU,SAAT,GAAqB;AAAA;;AACvC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BT,WAAW,CAC5CU,KAAD,KAAY;AACVF,IAAAA,SAAS,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,WAAZ,CAAZ,CADD;AAEVF,IAAAA,YAAY,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,cAAZ,CAAZ;AAFJ,GAAZ,CAD6C,EAK7CZ,YAL6C,CAA/C;AAOA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B,CATuC,CAWvC;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,EAAE,GAAGL,SAAS,CAACC,YAAD,CAAT,IAA2BD,SAAS,CAACC,YAAD,CAAT,CAAwBI,EAA9D;AACA,QAAI,CAACA,EAAL,EAAS;AACTD,IAAAA,QAAQ,CAACP,gBAAgB,CAACQ,EAAD,CAAjB,CAAR;AACD,GAJQ,EAIN,CAACD,QAAD,EAAWJ,SAAX,EAAsBC,YAAtB,CAJM,CAAT,CAZuC,CAkBvC;AACA;AACA;;AACA,QAAMK,eAAe,GAAIC,KAAD,IAAW;AACjCH,IAAAA,QAAQ,CAACR,wBAAwB,CAACW,KAAD,CAAzB,CAAR;AACA,UAAMF,EAAE,GAAGL,SAAS,CAACC,YAAD,CAAT,CAAwBI,EAAnC;AACAD,IAAAA,QAAQ,CAACP,gBAAgB,CAACQ,EAAD,CAAjB,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,gBAAD;AAAA,cACGL,SAAS,CAACQ,GAAV,CAAc,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAC9B;AACA,YAAMG,MAAM,GAAG,CAAC,QAAD,EAAW,OAAX,CAAf;AACA,UAAIC,kBAAJ;;AACA,UAAIJ,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA7B,EAAgC;AAC9BI,QAAAA,kBAAkB,gBAChB;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA,oBAAwBJ,KAAK,KAAK,CAAV,GAAcG,MAAM,CAAC,CAAD,CAApB,GAA0BA,MAAM,CAAC,CAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;AAED,0BACE;AAAA,mBACGC,kBADH,eAEE;AACE,UAAA,SAAS,EAAEjB,UAAU,CAAC,MAAD,EAAS;AAAEkB,YAAAA,MAAM,EAAEL,KAAK,KAAKN;AAApB,WAAT,CADvB;AAEE,UAAA,OAAO,EAAGY,CAAD,IAAOP,eAAe,CAACC,KAAD,CAFjC;AAAA,kCAIE;AAAK,YAAA,GAAG,EAAEZ,YAAY,CAACc,IAAI,CAACK,WAAN,EAAmB,EAAnB,CAAtB;AAA8C,YAAA,GAAG,EAAEL,IAAI,CAACM;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBN,IAAI,CAACM;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBAAuBN,IAAI,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUP,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAzBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAzDkB;AAAA,UAEmBb,WAFnB,EASAC,WATA;AAAA,GAAnB","sourcesContent":["import React, { memo, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { getSizeImage } from \"@/utils/format-utils\";\r\n\r\nimport {\r\n  changeCurrentIndexAction,\r\n  getRankingAction,\r\n} from \"../../store/actionCreators\";\r\n\r\nimport { RankTitleWrapper } from \"./style\";\r\n\r\nexport default memo(function LJRanking() {\r\n  // redux hooks\r\n  const { listTitle, currentIndex } = useSelector(\r\n    (state) => ({\r\n      listTitle: state.getIn([\"ranking\", \"listTitle\"]),\r\n      currentIndex: state.getIn([\"ranking\", \"currentIndex\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // react hooks\r\n  useEffect(() => {\r\n    const id = listTitle[currentIndex] && listTitle[currentIndex].id;\r\n    if (!id) return;\r\n    dispatch(getRankingAction(id));\r\n  }, [dispatch, listTitle, currentIndex]);\r\n\r\n  // handle functions\r\n  // 点击榜单后，会在 header 和 list 展示对应的榜单信息\r\n  // 保存：当前打开的榜单：下标 currentIndex、名称 listTitle\r\n  const handleItemClick = (index) => {\r\n    dispatch(changeCurrentIndexAction(index));\r\n    const id = listTitle[currentIndex].id;\r\n    dispatch(getRankingAction(id));\r\n  };\r\n\r\n  return (\r\n    <RankTitleWrapper>\r\n      {listTitle.map((item, index) => {\r\n        // 前四个和后面的分别是两组，各组需要添加一个标题名\r\n        const header = [\"云音乐特色榜\", \"全球媒体榜\"];\r\n        let listClassification;\r\n        if (index === 0 || index === 4) {\r\n          listClassification = (\r\n            <h2 className=\"header\">{index === 0 ? header[0] : header[1]}</h2>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div key={item.id}>\r\n            {listClassification}\r\n            <div\r\n              className={classNames(\"item\", { active: index === currentIndex })}\r\n              onClick={(e) => handleItemClick(index)}\r\n            >\r\n              <img src={getSizeImage(item.coverImgUrl, 40)} alt={item.name} />\r\n              <div className=\"info\">\r\n                <div className=\"title\">{item.name}</div>\r\n                <div className=\"time\">{item.updateFrequency}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </RankTitleWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}