{"ast":null,"code":"import React,{memo,useEffect}from\"react\";import{useDispatch,useSelector,shallowEqual}from\"react-redux\";import{getSizeImage}from\"@/utils/format-utils\";import{getSimiPlaylistAction}from\"../../../store/actionCreators\";import LJThemeHeaderPlayer from\"@/components/theme-header-player\";import{PlayerCoverListWrapper}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJPlayerCoverList(){// redux hooks\nvar _useSelector=useSelector(function(state){return{simiPlaylist:state.getIn([\"player\",\"simiPlaylist\"])};},shallowEqual),simiPlaylist=_useSelector.simiPlaylist;var dispatch=useDispatch();// other hooks\nuseEffect(function(){dispatch(getSimiPlaylistAction());},[dispatch]);return/*#__PURE__*/_jsxs(PlayerCoverListWrapper,{children:[/*#__PURE__*/_jsx(LJThemeHeaderPlayer,{title:\"\\u5305\\u542B\\u8FD9\\u9996\\u6B4C\\u7684\\u6B4C\\u5355\"}),/*#__PURE__*/_jsx(\"div\",{className:\"songs\",children:simiPlaylist.map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"song-item\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"image\",href:\"/todo\",children:/*#__PURE__*/_jsx(\"img\",{src:getSizeImage(item.coverImgUrl,50),alt:item.mame})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info text-nowrap\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/todo\",className:\"name\",children:item.name}),/*#__PURE__*/_jsx(\"div\",{className:\"didv\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-nowrap\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"by\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/todo\",className:\"nickname\",children:item.creator&&item.creator.nickname})]})]})]},item.id);})})]});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-full/c-cpns/player-cover-list/index.js"],"names":["React","memo","useEffect","useDispatch","useSelector","shallowEqual","getSizeImage","getSimiPlaylistAction","LJThemeHeaderPlayer","PlayerCoverListWrapper","LJPlayerCoverList","state","simiPlaylist","getIn","dispatch","map","item","index","coverImgUrl","mame","name","creator","nickname","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,SAAtB,KAAuC,OAAvC,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CAEA,OAASC,YAAT,KAA6B,sBAA7B,CACA,OAASC,qBAAT,KAAsC,+BAAtC,CAEA,MAAOC,CAAAA,mBAAP,KAAgC,kCAAhC,CACA,OAASC,sBAAT,KAAuC,SAAvC,C,wFAEA,2BAAeR,IAAI,CAAC,QAASS,CAAAA,iBAAT,EAA6B,CAC/C;AAD+C,iBAEtBN,WAAW,CAClC,SAACO,KAAD,QAAY,CACVC,YAAY,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,CAAW,cAAX,CAAZ,CADJ,CAAZ,EADkC,CAIlCR,YAJkC,CAFW,CAEvCO,YAFuC,cAEvCA,YAFuC,CAQ/C,GAAME,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA;AACAD,SAAS,CAAC,UAAM,CACdY,QAAQ,CAACP,qBAAqB,EAAtB,CAAR,CACD,CAFQ,CAEN,CAACO,QAAD,CAFM,CAAT,CAIA,mBACE,MAAC,sBAAD,yBACE,KAAC,mBAAD,EAAqB,KAAK,CAAC,kDAA3B,EADF,cAEE,YAAK,SAAS,CAAC,OAAf,UACGF,YAAY,CAACG,GAAb,CAAiB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACjC,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,UAAG,SAAS,CAAC,OAAb,CAAqB,IAAI,CAAC,OAA1B,uBACE,YAAK,GAAG,CAAEX,YAAY,CAACU,IAAI,CAACE,WAAN,CAAmB,EAAnB,CAAtB,CAA8C,GAAG,CAAEF,IAAI,CAACG,IAAxD,EADF,EADF,cAIE,aAAK,SAAS,CAAC,kBAAf,wBACE,UAAG,IAAI,CAAC,OAAR,CAAgB,SAAS,CAAC,MAA1B,UACGH,IAAI,CAACI,IADR,EADF,cAIE,YAAK,SAAS,CAAC,MAAf,EAJF,cAKE,aAAK,SAAS,CAAC,aAAf,wBACE,4BADF,cAEE,UAAG,IAAI,CAAC,OAAR,CAAgB,SAAS,CAAC,UAA1B,UACGJ,IAAI,CAACK,OAAL,EAAgBL,IAAI,CAACK,OAAL,CAAaC,QADhC,EAFF,GALF,GAJF,GAAgCN,IAAI,CAACO,EAArC,CADF,CAmBD,CApBA,CADH,EAFF,GADF,CA4BD,CA3CkB,CAAnB","sourcesContent":["import React, { memo, useEffect } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport { getSizeImage } from \"@/utils/format-utils\";\nimport { getSimiPlaylistAction } from \"../../../store/actionCreators\";\n\nimport LJThemeHeaderPlayer from \"@/components/theme-header-player\";\nimport { PlayerCoverListWrapper } from \"./style\";\n\nexport default memo(function LJPlayerCoverList() {\n  // redux hooks\n  const { simiPlaylist } = useSelector(\n    (state) => ({\n      simiPlaylist: state.getIn([\"player\", \"simiPlaylist\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // other hooks\n  useEffect(() => {\n    dispatch(getSimiPlaylistAction());\n  }, [dispatch]);\n\n  return (\n    <PlayerCoverListWrapper>\n      <LJThemeHeaderPlayer title=\"包含这首歌的歌单\" />\n      <div className=\"songs\">\n        {simiPlaylist.map((item, index) => {\n          return (\n            <div className=\"song-item\" key={item.id}>\n              <a className=\"image\" href=\"/todo\">\n                <img src={getSizeImage(item.coverImgUrl, 50)} alt={item.mame} />\n              </a>\n              <div className=\"info text-nowrap\">\n                <a href=\"/todo\" className=\"name\">\n                  {item.name}\n                </a>\n                <div className=\"didv\"></div>\n                <div className=\"text-nowrap\">\n                  <span>by</span>\n                  <a href=\"/todo\" className=\"nickname\">\n                    {item.creator && item.creator.nickname}\n                  </a>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </PlayerCoverListWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}