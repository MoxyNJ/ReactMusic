{"ast":null,"code":"import _slicedToArray from\"/Users/moxy/ReactTea/moxy-music-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useState,useEffect}from\"react\";import{useSelector,shallowEqual,useDispatch}from\"react-redux\";import classNames from\"classnames\";import{singerAlphas}from\"@/utils/handle-data\";import{getArtistListAction}from\"../../../../store/actionCreators\";import{AlphaListWrapper}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJAlphaList(){// props & state\nvar _useState=useState(\"-1\"),_useState2=_slicedToArray(_useState,2),currentAlpha=_useState2[0],setCurrentAlpha=_useState2[1];// redux hooks\nvar _useSelector=useSelector(function(state){return{currentType:state.getIn([\"artist\",\"currentType\"]),currentArea:state.getIn([\"artist\",\"currentArea\"])};},shallowEqual),currentType=_useSelector.currentType,currentArea=_useSelector.currentArea;var dispatch=useDispatch();// react hooks\n// 初始化时，默认打开 “全部” 类目\nuseEffect(function(){setCurrentAlpha(\"-1\");},[currentType]);useEffect(function(){dispatch(getArtistListAction(currentArea,currentType.type,currentAlpha));},[currentAlpha,currentType,currentArea,dispatch]);return/*#__PURE__*/_jsx(AlphaListWrapper,{hasTop:currentArea!==-1,children:currentArea!==-1&&singerAlphas.map(function(item,index){var isActive=currentAlpha===item;return/*#__PURE__*/_jsx(\"div\",{className:classNames(\"item\",{active:isActive}),children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(e){return setCurrentAlpha(item);},className:classNames({small:item===\"-1\"||item===\"0\"}),children:function(){switch(item){case\"-1\":return\"热门\";case\"0\":return\"其他\";default:return item.toUpperCase();}}()})},index);})});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/alpha-list/index.js"],"names":["React","memo","useState","useEffect","useSelector","shallowEqual","useDispatch","classNames","singerAlphas","getArtistListAction","AlphaListWrapper","LJAlphaList","currentAlpha","setCurrentAlpha","state","currentType","getIn","currentArea","dispatch","type","map","item","index","isActive","active","e","small","toUpperCase"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,CAAgCC,SAAhC,KAAiD,OAAjD,CACA,OAASC,WAAT,CAAsBC,YAAtB,CAAoCC,WAApC,KAAuD,aAAvD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,OAASC,YAAT,KAA6B,qBAA7B,CACA,OAASC,mBAAT,KAAoC,kCAApC,CAEA,OAASC,gBAAT,KAAiC,SAAjC,C,2CACA,2BAAeT,IAAI,CAAC,QAASU,CAAAA,WAAT,EAAuB,CACzC;AADyC,cAEDT,QAAQ,CAAC,IAAD,CAFP,wCAElCU,YAFkC,eAEpBC,eAFoB,eAIzC;AAJyC,iBAKJT,WAAW,CAC9C,SAACU,KAAD,QAAY,CACVC,WAAW,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,CAAW,aAAX,CAAZ,CADH,CAEVC,WAAW,CAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,CAAW,aAAX,CAAZ,CAFH,CAAZ,EAD8C,CAK9CX,YAL8C,CALP,CAKjCU,WALiC,cAKjCA,WALiC,CAKpBE,WALoB,cAKpBA,WALoB,CAYzC,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA;AACA;AACAH,SAAS,CAAC,UAAM,CACdU,eAAe,CAAC,IAAD,CAAf,CACD,CAFQ,CAEN,CAACE,WAAD,CAFM,CAAT,CAIAZ,SAAS,CAAC,UAAM,CACde,QAAQ,CAACT,mBAAmB,CAACQ,WAAD,CAAcF,WAAW,CAACI,IAA1B,CAAgCP,YAAhC,CAApB,CAAR,CACD,CAFQ,CAEN,CAACA,YAAD,CAAeG,WAAf,CAA4BE,WAA5B,CAAyCC,QAAzC,CAFM,CAAT,CAIA,mBACE,KAAC,gBAAD,EAAkB,MAAM,CAAED,WAAW,GAAK,CAAC,CAA3C,UACGA,WAAW,GAAK,CAAC,CAAjB,EACCT,YAAY,CAACY,GAAb,CAAiB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAChC,GAAMC,CAAAA,QAAQ,CAAGX,YAAY,GAAKS,IAAlC,CACA,mBACE,YAEE,SAAS,CAAEd,UAAU,CAAC,MAAD,CAAS,CAAEiB,MAAM,CAAED,QAAV,CAAT,CAFvB,uBAIE,aACE,OAAO,CAAE,iBAACE,CAAD,QAAOZ,CAAAA,eAAe,CAACQ,IAAD,CAAtB,EADX,CAEE,SAAS,CAAEd,UAAU,CAAC,CACpBmB,KAAK,CAAEL,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAK,GADb,CAAD,CAFvB,UAOI,UAAM,CACN,OAAQA,IAAR,EACE,IAAK,IAAL,CACE,MAAO,IAAP,CACF,IAAK,GAAL,CACE,MAAO,IAAP,CACF,QACE,MAAOA,CAAAA,IAAI,CAACM,WAAL,EAAP,CANJ,CAQD,CATA,EAPH,EAJF,EACOL,KADP,CADF,CAyBD,CA3BD,CAFJ,EADF,CAiCD,CAzDkB,CAAnB","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { singerAlphas } from \"@/utils/handle-data\";\nimport { getArtistListAction } from \"../../../../store/actionCreators\";\n\nimport { AlphaListWrapper } from \"./style\";\nexport default memo(function LJAlphaList() {\n  // props & state\n  const [currentAlpha, setCurrentAlpha] = useState(\"-1\");\n\n  // redux hooks\n  const { currentType, currentArea } = useSelector(\n    (state) => ({\n      currentType: state.getIn([\"artist\", \"currentType\"]),\n      currentArea: state.getIn([\"artist\", \"currentArea\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // react hooks\n  // 初始化时，默认打开 “全部” 类目\n  useEffect(() => {\n    setCurrentAlpha(\"-1\");\n  }, [currentType]);\n\n  useEffect(() => {\n    dispatch(getArtistListAction(currentArea, currentType.type, currentAlpha));\n  }, [currentAlpha, currentType, currentArea, dispatch]);\n\n  return (\n    <AlphaListWrapper hasTop={currentArea !== -1}>\n      {currentArea !== -1 &&\n        singerAlphas.map((item, index) => {\n          const isActive = currentAlpha === item;\n          return (\n            <div\n              key={index}\n              className={classNames(\"item\", { active: isActive })}\n            >\n              <span\n                onClick={(e) => setCurrentAlpha(item)}\n                className={classNames({\n                  small: item === \"-1\" || item === \"0\",\n                })}\n              >\n                {/* 使用立即执行箭头函数，可以在jsx中用switch */}\n                {(() => {\n                  switch (item) {\n                    case \"-1\":\n                      return \"热门\";\n                    case \"0\":\n                      return \"其他\";\n                    default:\n                      return item.toUpperCase();\n                  }\n                })()}\n              </span>\n            </div>\n          );\n        })}\n    </AlphaListWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}