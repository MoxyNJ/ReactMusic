{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\artist\\\\c-cpns\\\\artist-category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport classNames from 'classnames';\nimport { artistCategories } from '@/services/local-data';\nimport { CategoryWrapper, CategoryItem } from './style';\nimport { changeCurrentAreaAction, changeCurrentTypeAction } from '../../store/actionCreators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function HYArtistCategory(props) {\n  _s();\n\n  // redux hooks\n  const {\n    currentArea,\n    currentType\n  } = useSelector(state => ({\n    currentArea: state.getIn([\"artist\", \"currentArea\"]),\n    currentType: state.getIn([\"artist\", \"currentType\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // handle function\n\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  }; // render jsx\n\n\n  const renderArtist = (artists, area) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: artists.map((item, index) => {\n        const isSelect = currentArea === area && currentType.type === item.type;\n        return /*#__PURE__*/_jsxDEV(CategoryItem, {\n          className: classNames({\n            \"active\": isSelect\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: e => selectArtist(area, item),\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n    children: artistCategories.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), renderArtist(item.artists, item.area)]\n      }, item.area, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}, \"Q/0O1r2xWlKI7tF0OwAKf3JVIxc=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-category/index.js"],"names":["React","memo","useDispatch","useSelector","shallowEqual","classNames","artistCategories","CategoryWrapper","CategoryItem","changeCurrentAreaAction","changeCurrentTypeAction","HYArtistCategory","props","currentArea","currentType","state","getIn","dispatch","selectArtist","area","type","renderArtist","artists","map","item","index","isSelect","e","name","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,SAA9C;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,4BAAjE;;AAEA,kCAAeT,IAAI,SAAC,SAASU,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEnD;AACA,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BX,WAAW,CAACY,KAAK,KAAK;AACvDF,IAAAA,WAAW,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CAD0C;AAEvDF,IAAAA,WAAW,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ;AAF0C,GAAL,CAAN,EAG1CZ,YAH0C,CAA9C;AAIA,QAAMa,QAAQ,GAAGf,WAAW,EAA5B,CAPmD,CASnD;;AACA,QAAMgB,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnCH,IAAAA,QAAQ,CAACR,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACAF,IAAAA,QAAQ,CAACP,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACD,GAHD,CAVmD,CAenD;;;AACA,QAAMC,YAAY,GAAG,CAACC,OAAD,EAAUH,IAAV,KAAmB;AACtC,wBACE;AAAA,gBAEIG,OAAO,CAACC,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,cAAMC,QAAQ,GAAGb,WAAW,KAAKM,IAAhB,IAAwBL,WAAW,CAACM,IAAZ,KAAqBI,IAAI,CAACJ,IAAnE;AACA,4BACE,QAAC,YAAD;AACc,UAAA,SAAS,EAAEf,UAAU,CAAC;AAAC,sBAAUqB;AAAX,WAAD,CADnC;AAAA,iCAEE;AAAM,YAAA,OAAO,EAAEC,CAAC,IAAIT,YAAY,CAACC,IAAD,EAAOK,IAAP,CAAhC;AAAA,sBAA+CA,IAAI,CAACI;AAApD;AAAA;AAAA;AAAA;AAAA;AAFF,WAAmBJ,IAAI,CAACI,IAAxB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OARD;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD;;AAkBA,sBACE,QAAC,eAAD;AAAA,cAEItB,gBAAgB,CAACiB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBD,IAAI,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGR,YAAY,CAACG,IAAI,CAACF,OAAN,EAAeE,IAAI,CAACL,IAApB,CAFf;AAAA,SAA8BK,IAAI,CAACL,IAAnC;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhDkB;AAAA,UAGkBhB,WAHlB,EAOAD,WAPA;AAAA,GAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { artistCategories } from '@/services/local-data';\n\nimport { CategoryWrapper, CategoryItem } from './style';\nimport { changeCurrentAreaAction, changeCurrentTypeAction } from '../../store/actionCreators';\n\nexport default memo(function HYArtistCategory(props) {\n\n  // redux hooks\n  const {currentArea, currentType} = useSelector(state => ({\n    currentArea: state.getIn([\"artist\", \"currentArea\"]),\n    currentType: state.getIn([\"artist\", \"currentType\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  // handle function\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  }\n\n  // render jsx\n  const renderArtist = (artists, area) => {\n    return (\n      <div>\n        {\n          artists.map((item, index) => {\n            const isSelect = currentArea === area && currentType.type === item.type;\n            return (\n              <CategoryItem key={item.name} \n                            className={classNames({\"active\": isSelect})}>\n                <span onClick={e => selectArtist(area, item)}>{item.name}</span>\n              </CategoryItem>\n            )\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <CategoryWrapper>\n      {\n        artistCategories.map((item, index) => {\n          return (\n            <div className=\"section\" key={item.area}>\n              <h2 className=\"title\">{item.title}</h2>\n              {renderArtist(item.artists, item.area)}\n            </div>\n          )\n        })\n      }\n    </CategoryWrapper>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}