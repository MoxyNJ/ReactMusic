{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\player\\\\app-player-full\\\\c-cpns\\\\player-info\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { getSizeImage } from \"@/utils/format-utils\";\nimport LJSongOperationBar from \"@/components/song-operation-bar\";\nimport { InfoWrapper, InfoLeftWrapper, InfoRightWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerInfo() {\n  _s();\n\n  // reack hooks -> props\n  const [isShow, setIsShow] = useState(false); // redux hooks\n\n  const {\n    currentSong,\n    lyricList\n  } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\n    lyricList: state.getIn([\"player\", \"lyricList\"])\n  }), shallowEqual); // handle function\n\n  const totalLyricCount = isShow ? lyricList.length : 13;\n  return /*#__PURE__*/_jsxDEV(InfoWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(InfoLeftWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getSizeImage(currentSong.al && currentSong.al.picUrl, 130),\n          alt: currentSong.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cover image_cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"sprite_icon2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/\",\n          children: \"\\u751F\\u6210\\u5916\\u94FE\\u64AD\\u653E\\u5668\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoRightWrapper, {\n      isShow: isShow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"sprite_icon2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: currentSong.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"\\u6B4C\\u624B\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/todo\",\n          className: \"name\",\n          children: currentSong.ar && currentSong.ar[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"\\u6240\\u5C5E\\u4E13\\u8F91\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/todo\",\n          className: \"name\",\n          children: currentSong.al.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LJSongOperationBar, {\n        collectionT: \"\\u6536\\u85CF\",\n        shareT: \"\\u5206\\u4EAB\",\n        downloadT: \"\\u4E0B\\u8F7D\",\n        commentT: `(${currentSong.dt})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lyric\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lyric-info\",\n          children: lyricList.slice(0, totalLyricCount).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: item.content\n            }, item.time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"lyric-control\",\n          onClick: e => setIsShow(!isShow),\n          children: [isShow ? \"收起\" : \"展开\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"sprite_icon2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}, \"TCf+ZqXkb7TKae0zzwTzyyoJteE=\", false, function () {\n  return [useSelector];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/player/app-player-full/c-cpns/player-info/index.js"],"names":["React","memo","useState","useSelector","shallowEqual","getSizeImage","LJSongOperationBar","InfoWrapper","InfoLeftWrapper","InfoRightWrapper","LJPlayerInfo","isShow","setIsShow","currentSong","lyricList","state","getIn","totalLyricCount","length","al","picUrl","name","ar","dt","slice","map","item","index","content","time","e"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\r\nimport { useSelector, shallowEqual } from \"react-redux\";\r\n\r\nimport { getSizeImage } from \"@/utils/format-utils\";\r\n\r\nimport LJSongOperationBar from \"@/components/song-operation-bar\";\r\nimport { InfoWrapper, InfoLeftWrapper, InfoRightWrapper } from \"./style\";\r\n\r\nexport default memo(function LJPlayerInfo() {\r\n  // reack hooks -> props\r\n  const [isShow, setIsShow] = useState(false);\r\n\r\n  // redux hooks\r\n  const { currentSong, lyricList } = useSelector(\r\n    (state) => ({\r\n      currentSong: state.getIn([\"player\", \"currentSong\"]),\r\n      lyricList: state.getIn([\"player\", \"lyricList\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // handle function\r\n  const totalLyricCount = isShow ? lyricList.length : 13;\r\n\r\n  return (\r\n    <InfoWrapper>\r\n      <InfoLeftWrapper>\r\n        <div className=\"image\">\r\n          <img\r\n            src={getSizeImage(currentSong.al && currentSong.al.picUrl, 130)}\r\n            alt={currentSong.name}\r\n          />\r\n          <span className=\"cover image_cover\"></span>\r\n        </div>\r\n        <div className=\"link\">\r\n          <i className=\"sprite_icon2\"></i>\r\n          <a href=\"#/\">生成外链播放器</a>\r\n        </div>\r\n      </InfoLeftWrapper>\r\n      <InfoRightWrapper isShow={isShow}>\r\n        <div className=\"header\">\r\n          <i className=\"sprite_icon2\"></i>\r\n          <h3 className=\"title\">{currentSong.name}</h3>\r\n        </div>\r\n        <div className=\"item\">\r\n          <span className=\"label\">歌手：</span>\r\n          <a href=\"/todo\" className=\"name\">\r\n            {currentSong.ar && currentSong.ar[0].name}\r\n          </a>\r\n        </div>\r\n        <div className=\"item\">\r\n          <span className=\"label\">所属专辑：</span>\r\n          <a href=\"/todo\" className=\"name\">\r\n            {currentSong.al.name}\r\n          </a>\r\n        </div>\r\n\r\n        <LJSongOperationBar\r\n          collectionT=\"收藏\"\r\n          shareT=\"分享\"\r\n          downloadT=\"下载\"\r\n          commentT={`(${currentSong.dt})`}\r\n        />\r\n\r\n        <div className=\"lyric\">\r\n          <div className=\"lyric-info\">\r\n            {lyricList.slice(0, totalLyricCount).map((item, index) => {\r\n              return (\r\n                <p key={item.time} className=\"text\">\r\n                  {item.content}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n          <button className=\"lyric-control\" onClick={(e) => setIsShow(!isShow)}>\r\n            {isShow ? \"收起\" : \"展开\"}\r\n            <i className=\"sprite_icon2\"></i>\r\n          </button>\r\n        </div>\r\n      </InfoRightWrapper>\r\n    </InfoWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}