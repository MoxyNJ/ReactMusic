{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\artist\\\\c-cpns\\\\artist-list\\\\c-cpns\\\\alpha-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { singerAlphas } from '@/utils/handle-data';\nimport { getArtistListAction } from '../../../../store/actionCreators';\nimport { AlphaListWrapper } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function HYAlphaList() {\n  _s();\n\n  const [currentAlpha, setCurrentAlpha] = useState(\"-1\");\n  const {\n    currentType,\n    currentArea\n  } = useSelector(state => ({\n    currentType: state.getIn([\"artist\", \"currentType\"]),\n    currentArea: state.getIn([\"artist\", \"currentArea\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setCurrentAlpha(\"-1\");\n  }, [currentType, currentArea]);\n  useEffect(() => {\n    dispatch(getArtistListAction(currentArea, currentType.type, currentAlpha));\n  }, [currentAlpha, currentType, currentArea, dispatch]);\n  return /*#__PURE__*/_jsxDEV(AlphaListWrapper, {\n    hasTop: currentArea !== -1,\n    children: currentArea !== -1 && singerAlphas.map((item, index) => {\n      const isActive = currentAlpha === item;\n      if (item === \"0\") item = \"其他\";\n      if (item === \"-1\") item = \"热门\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(\"item\", {\n          \"active\": isActive\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => setCurrentAlpha(item),\n          children: item.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"YEg++9sETrUG80acIkJE8OAdsNs=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/alpha-list/index.js"],"names":["React","memo","useState","useEffect","useSelector","shallowEqual","useDispatch","classNames","singerAlphas","getArtistListAction","AlphaListWrapper","HYAlphaList","currentAlpha","setCurrentAlpha","currentType","currentArea","state","getIn","dispatch","type","map","item","index","isActive","e","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AAEA,SACEC,gBADF,QAEO,SAFP;;AAIA,kCAAeT,IAAI,SAAC,SAASU,WAAT,GAAuB;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAM;AAAEY,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BX,WAAW,CAACY,KAAK,KAAK;AACzDF,IAAAA,WAAW,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CAD4C;AAEzDF,IAAAA,WAAW,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ;AAF4C,GAAL,CAAN,EAG5CZ,YAH4C,CAAhD;AAIA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFQ,EAEN,CAACC,WAAD,EAAcC,WAAd,CAFM,CAAT;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACT,mBAAmB,CAACM,WAAD,EAAcD,WAAW,CAACK,IAA1B,EAAgCP,YAAhC,CAApB,CAAR;AACD,GAFQ,EAEN,CAACA,YAAD,EAAeE,WAAf,EAA4BC,WAA5B,EAAyCG,QAAzC,CAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEH,WAAW,KAAK,CAAC,CAA3C;AAAA,cAEIA,WAAW,KAAK,CAAC,CAAjB,IAAsBP,YAAY,CAACY,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtD,YAAMC,QAAQ,GAAGX,YAAY,KAAKS,IAAlC;AACA,UAAIA,IAAI,KAAK,GAAb,EAAkBA,IAAI,GAAG,IAAP;AAClB,UAAIA,IAAI,KAAK,IAAb,EAAmBA,IAAI,GAAG,IAAP;AACnB,0BACE;AACK,QAAA,SAAS,EAAEd,UAAU,CAAC,MAAD,EAAS;AAAC,oBAAUgB;AAAX,SAAT,CAD1B;AAAA,+BAEE;AAAM,UAAA,OAAO,EAAEC,CAAC,IAAIX,eAAe,CAACQ,IAAD,CAAnC;AAAA,oBAA4CA,IAAI,CAACI,WAAL;AAA5C;AAAA;AAAA;AAAA;AAAA;AAFF,SAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAVqB;AAF1B;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjCkB;AAAA,UAGoBjB,WAHpB,EAOAE,WAPA;AAAA,GAAnB","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { singerAlphas } from '@/utils/handle-data';\nimport { getArtistListAction } from '../../../../store/actionCreators';\n\nimport {\n  AlphaListWrapper\n} from './style';\n\nexport default memo(function HYAlphaList() {\n  const [currentAlpha, setCurrentAlpha] = useState(\"-1\");\n\n  const { currentType, currentArea } = useSelector(state => ({\n    currentType: state.getIn([\"artist\", \"currentType\"]),\n    currentArea: state.getIn([\"artist\", \"currentArea\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCurrentAlpha(\"-1\");\n  }, [currentType, currentArea]);\n  useEffect(() => {\n    dispatch(getArtistListAction(currentArea, currentType.type, currentAlpha));\n  }, [currentAlpha, currentType, currentArea, dispatch]);\n\n  return (\n    <AlphaListWrapper hasTop={currentArea !== -1}>\n      {\n        currentArea !== -1 && singerAlphas.map((item, index) => {\n          const isActive = currentAlpha === item;\n          if (item === \"0\") item = \"其他\";\n          if (item === \"-1\") item = \"热门\";\n          return (\n            <div key={item}\n                 className={classNames(\"item\", {\"active\": isActive})}>\n              <span onClick={e => setCurrentAlpha(item)}>{item.toUpperCase()}</span>\n            </div>\n          )\n        })\n      }\n    </AlphaListWrapper>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}