{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\player\\\\app-player-bar\\\\c-cpns\\\\app-player-panel\\\\c-cnps\\\\player-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { PlayerListWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerList() {\n  _s();\n\n  const {\n    playList,\n    currentSongIndex\n  } = useSelector(state => ({\n    playList: state.getIn([\"player\", \"playList\"]),\n    currentSongIndex: state.getIn([\"player\", \"currentSongIndex\"])\n  }), shallowEqual);\n  return /*#__PURE__*/_jsxDEV(PlayerListWrapper, {\n    children: // classnames:可以给元素动态添加 class 类名，\n    // 如果属性值为true则为其添加该类名;如果值为false，则不添加。\n    playList.map((item, index) => {\n      return {};\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}, \"z4stuHRFno7kA+wfnXfxn3hCA5o=\", false, function () {\n  return [useSelector];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/player/app-player-bar/c-cpns/app-player-panel/c-cnps/player-list/index.js"],"names":["React","memo","useSelector","shallowEqual","classnames","PlayerListWrapper","LJPlayerList","playList","currentSongIndex","state","getIn","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,aAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,iBAAT,QAAkC,SAAlC;;AAEA,kCAAeJ,IAAI,SAAC,SAASK,YAAT,GAAwB;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCN,WAAW,CAC/CO,KAAD,KAAY;AACVF,IAAAA,QAAQ,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,UAAX,CAAZ,CADA;AAEVF,IAAAA,gBAAgB,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,kBAAX,CAAZ;AAFR,GAAZ,CADgD,EAKhDP,YALgD,CAAlD;AAOA,sBACE,QAAC,iBAAD;AAAA,cAEI;AACA;AACAI,IAAAA,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,aAAO,EAAP;AACD,KAFD;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBkB;AAAA,UACsBX,WADtB;AAAA,GAAnB","sourcesContent":["import React, { memo } from \"react\";\r\nimport { useSelector, shallowEqual } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { PlayerListWrapper } from \"./style\";\r\n\r\nexport default memo(function LJPlayerList() {\r\n  const { playList, currentSongIndex } = useSelector(\r\n    (state) => ({\r\n      playList: state.getIn([\"player\", \"playList\"]),\r\n      currentSongIndex: state.getIn([\"player\", \"currentSongIndex\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n  return (\r\n    <PlayerListWrapper>\r\n      {\r\n        // classnames:可以给元素动态添加 class 类名，\r\n        // 如果属性值为true则为其添加该类名;如果值为false，则不添加。\r\n        playList.map((item, index) => {\r\n          return {};\r\n        })\r\n      }\r\n    </PlayerListWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}