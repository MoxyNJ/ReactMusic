{"ast":null,"code":"// [00:00.77]Once upon a younger year\n// [00:04.47]When all our shadows disappeared\n// [00:06.44]The animals inside came out to play\n// [00:10.15]Went face to face with all our fears\n//\n// [00:10.15]Went face to face with all our fears\n// 切割的正则表达式\nconst parseExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/; // 歌词切换\n\nexport function parseLyric(lyricString) {\n  // 用于保存得到的每一个歌词对象\n  const lyrics = []; // 获得一个数组，把一长串的歌词切割为一句一句的。\n\n  const lineStrings = lyricString.split(\"\\n\");\n\n  for (let line of lineStrings) {\n    // 判断是否有值，有可能切割后有空元素\n    if (line) {\n      const result = parseExp.exec(line); // 拿到时间后，转换为毫秒\n\n      const time1 = result[1] * 60 * 1000;\n      const time2 = result[2] * 1000; // 根据单词列表，最后一组数字有可能是3位，有可能是2位\n\n      const time3 = result[3].length === 3 ? result[3] * 1 : result[3] * 10;\n      const time = time1 + time2 + time3; // 对字符串进行删减，只保留歌词\n\n      const content = line.replace(parseExp, \"\").trim(); // 得到这个对象，然后添加到lyrics数组中\n\n      lyrics.push({\n        time,\n        content\n      });\n    }\n  }\n\n  return lyrics;\n}","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/utils/parse-lyric.js"],"names":["parseExp","parseLyric","lyricString","lyrics","lineStrings","split","line","result","exec","time1","time2","time3","length","time","content","replace","trim","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAMA,QAAQ,GAAG,gCAAjB,C,CAEA;;AACA,OAAO,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AACtC;AACA,QAAMC,MAAM,GAAG,EAAf,CAFsC,CAItC;;AACA,QAAMC,WAAW,GAAGF,WAAW,CAACG,KAAZ,CAAkB,IAAlB,CAApB;;AACA,OAAK,IAAIC,IAAT,IAAiBF,WAAjB,EAA8B;AAC5B;AACA,QAAIE,IAAJ,EAAU;AACR,YAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAT,CAAcF,IAAd,CAAf,CADQ,CAER;;AACA,YAAMG,KAAK,GAAGF,MAAM,CAAC,CAAD,CAAN,GAAY,EAAZ,GAAiB,IAA/B;AACA,YAAMG,KAAK,GAAGH,MAAM,CAAC,CAAD,CAAN,GAAY,IAA1B,CAJQ,CAKR;;AACA,YAAMI,KAAK,GAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUK,MAAV,KAAqB,CAArB,GAAyBL,MAAM,CAAC,CAAD,CAAN,GAAY,CAArC,GAAyCA,MAAM,CAAC,CAAD,CAAN,GAAY,EAAnE;AACA,YAAMM,IAAI,GAAGJ,KAAK,GAAGC,KAAR,GAAgBC,KAA7B,CAPQ,CAQR;;AACA,YAAMG,OAAO,GAAGR,IAAI,CAACS,OAAL,CAAaf,QAAb,EAAuB,EAAvB,EAA2BgB,IAA3B,EAAhB,CATQ,CAUR;;AACAb,MAAAA,MAAM,CAACc,IAAP,CAAY;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAZ;AACD;AACF;;AACD,SAAOX,MAAP;AACD","sourcesContent":["// [00:00.77]Once upon a younger year\r\n// [00:04.47]When all our shadows disappeared\r\n// [00:06.44]The animals inside came out to play\r\n// [00:10.15]Went face to face with all our fears\r\n//\r\n\r\n// [00:10.15]Went face to face with all our fears\r\n// 切割的正则表达式\r\nconst parseExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;\r\n\r\n// 歌词切换\r\nexport function parseLyric(lyricString) {\r\n  // 用于保存得到的每一个歌词对象\r\n  const lyrics = [];\r\n\r\n  // 获得一个数组，把一长串的歌词切割为一句一句的。\r\n  const lineStrings = lyricString.split(\"\\n\");\r\n  for (let line of lineStrings) {\r\n    // 判断是否有值，有可能切割后有空元素\r\n    if (line) {\r\n      const result = parseExp.exec(line);\r\n      // 拿到时间后，转换为毫秒\r\n      const time1 = result[1] * 60 * 1000;\r\n      const time2 = result[2] * 1000;\r\n      // 根据单词列表，最后一组数字有可能是3位，有可能是2位\r\n      const time3 = result[3].length === 3 ? result[3] * 1 : result[3] * 10;\r\n      const time = time1 + time2 + time3;\r\n      // 对字符串进行删减，只保留歌词\r\n      const content = line.replace(parseExp, \"\").trim();\r\n      // 得到这个对象，然后添加到lyrics数组中\r\n      lyrics.push({ time, content });\r\n    }\r\n  }\r\n  return lyrics;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}