{"ast":null,"code":"// 获取小尺寸的专辑封面\n// 图片地址+?param=200x200，获取200x200尺寸的图片\nexport function getSizeImage(imgUrl,size){return\"\".concat(imgUrl,\"?param=\").concat(size,\"x\").concat(size);}// 音乐的播放量：12亿，35万，1413\nexport function getCount(count){if(count<0)return;// 小于2万\nif(count<100000){return count;// 小于2亿\n}else if(Math.floor(count/20000)<10000){return Math.floor(count/10000)+\"万\";// return Math.floor(count / 1000) / 10 + \"万\";\n}else{return Math.floor(count/100000000)+\"亿\";// return Math.floor(count / 10000000) / 10 + \"亿\";\n}}// 即将播放的音乐，拼接一下\nexport function getPlayUrl(id){return\"https://music.163.com/song/media/outer/url?id=\".concat(id,\".mp3\");}// 格式化：时间\nexport function formatDate(time,fmt){var date=new Date(time);if(/(y+)/.test(fmt)){fmt=fmt.replace(RegExp.$1,(date.getFullYear()+\"\").substr(4-RegExp.$1.length));}var o={\"M+\":date.getMonth()+1,\"d+\":date.getDate(),\"h+\":date.getHours(),\"m+\":date.getMinutes(),\"s+\":date.getSeconds()};for(var k in o){if(new RegExp(\"(\".concat(k,\")\")).test(fmt)){var str=o[k]+\"\";fmt=fmt.replace(RegExp.$1,RegExp.$1.length===1?str:padLeftZero(str));}}return fmt;}function padLeftZero(str){return(\"00\"+str).substr(str.length);}// 调用上面的时间格式化函数，\nexport function formatMonthDay(time){return formatDate(time,\"MM月dd日\");}// 调用上面的时间格式化函数，\nexport function formatMinuteSecond(time){return formatDate(time,\"mm:ss\");}","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/utils/format-utils.js"],"names":["getSizeImage","imgUrl","size","getCount","count","Math","floor","getPlayUrl","id","formatDate","time","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","formatMonthDay","formatMinuteSecond"],"mappings":"AAAA;AACA;AACA,MAAO,SAASA,CAAAA,YAAT,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoC,CACzC,gBAAUD,MAAV,mBAA0BC,IAA1B,aAAkCA,IAAlC,EACD,CAED;AACA,MAAO,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAC9B,GAAIA,KAAK,CAAG,CAAZ,CAAe,OACf;AACA,GAAIA,KAAK,CAAG,MAAZ,CAAoB,CAClB,MAAOA,CAAAA,KAAP,CACA;AACD,CAHD,IAGO,IAAIC,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAG,KAAnB,EAA4B,KAAhC,CAAuC,CAC5C,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAG,KAAnB,EAA4B,GAAnC,CACA;AACD,CAHM,IAGA,CACL,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAG,SAAnB,EAAgC,GAAvC,CACA;AACD,CACF,CAED;AACA,MAAO,SAASG,CAAAA,UAAT,CAAoBC,EAApB,CAAwB,CAC7B,8DAAwDA,EAAxD,SACD,CAED;AACA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,GAA1B,CAA+B,CACpC,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASH,IAAT,CAAX,CAEA,GAAI,OAAOI,IAAP,CAAYH,GAAZ,CAAJ,CAAsB,CACpBA,GAAG,CAAGA,GAAG,CAACI,OAAJ,CACJC,MAAM,CAACC,EADH,CAEJ,CAACL,IAAI,CAACM,WAAL,GAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,EAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CAFI,CAAN,CAID,CACD,GAAIC,CAAAA,CAAC,CAAG,CACN,KAAMT,IAAI,CAACU,QAAL,GAAkB,CADlB,CAEN,KAAMV,IAAI,CAACW,OAAL,EAFA,CAGN,KAAMX,IAAI,CAACY,QAAL,EAHA,CAIN,KAAMZ,IAAI,CAACa,UAAL,EAJA,CAKN,KAAMb,IAAI,CAACc,UAAL,EALA,CAAR,CAOA,IAAK,GAAIC,CAAAA,CAAT,GAAcN,CAAAA,CAAd,CAAiB,CACf,GAAI,GAAIL,CAAAA,MAAJ,YAAeW,CAAf,OAAqBb,IAArB,CAA0BH,GAA1B,CAAJ,CAAoC,CAClC,GAAIiB,CAAAA,GAAG,CAAGP,CAAC,CAACM,CAAD,CAAD,CAAO,EAAjB,CACAhB,GAAG,CAAGA,GAAG,CAACI,OAAJ,CACJC,MAAM,CAACC,EADH,CAEJD,MAAM,CAACC,EAAP,CAAUG,MAAV,GAAqB,CAArB,CAAyBQ,GAAzB,CAA+BC,WAAW,CAACD,GAAD,CAFtC,CAAN,CAID,CACF,CACD,MAAOjB,CAAAA,GAAP,CACD,CAED,QAASkB,CAAAA,WAAT,CAAqBD,GAArB,CAA0B,CACxB,MAAO,CAAC,KAAOA,GAAR,EAAaT,MAAb,CAAoBS,GAAG,CAACR,MAAxB,CAAP,CACD,CAED;AACA,MAAO,SAASU,CAAAA,cAAT,CAAwBpB,IAAxB,CAA8B,CACnC,MAAOD,CAAAA,UAAU,CAACC,IAAD,CAAO,QAAP,CAAjB,CACD,CAED;AACA,MAAO,SAASqB,CAAAA,kBAAT,CAA4BrB,IAA5B,CAAkC,CACvC,MAAOD,CAAAA,UAAU,CAACC,IAAD,CAAO,OAAP,CAAjB,CACD","sourcesContent":["// 获取小尺寸的专辑封面\n// 图片地址+?param=200x200，获取200x200尺寸的图片\nexport function getSizeImage(imgUrl, size) {\n  return `${imgUrl}?param=${size}x${size}`;\n}\n\n// 音乐的播放量：12亿，35万，1413\nexport function getCount(count) {\n  if (count < 0) return;\n  // 小于2万\n  if (count < 100000) {\n    return count;\n    // 小于2亿\n  } else if (Math.floor(count / 20000) < 10000) {\n    return Math.floor(count / 10000) + \"万\";\n    // return Math.floor(count / 1000) / 10 + \"万\";\n  } else {\n    return Math.floor(count / 100000000) + \"亿\";\n    // return Math.floor(count / 10000000) / 10 + \"亿\";\n  }\n}\n\n// 即将播放的音乐，拼接一下\nexport function getPlayUrl(id) {\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\n}\n\n// 格式化：时间\nexport function formatDate(time, fmt) {\n  let date = new Date(time);\n\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  }\n  let o = {\n    \"M+\": date.getMonth() + 1,\n    \"d+\": date.getDate(),\n    \"h+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds(),\n  };\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      let str = o[k] + \"\";\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? str : padLeftZero(str)\n      );\n    }\n  }\n  return fmt;\n}\n\nfunction padLeftZero(str) {\n  return (\"00\" + str).substr(str.length);\n}\n\n// 调用上面的时间格式化函数，\nexport function formatMonthDay(time) {\n  return formatDate(time, \"MM月dd日\");\n}\n\n// 调用上面的时间格式化函数，\nexport function formatMinuteSecond(time) {\n  return formatDate(time, \"mm:ss\");\n}\n"]},"metadata":{},"sourceType":"module"}