{"ast":null,"code":"import _slicedToArray from\"/Users/moxy/ReactTea/moxy-music-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,memo}from\"react\";import{useSelector,useDispatch,shallowEqual}from\"react-redux\";import{PER_PAGE_NUMBER}from\"@/common/contants\";import{getSongCategoryListAction}from\"../../store/actionCreators\";import LJSongsCover from\"@/components/songs-cover\";import LJPagination from\"@/components/songs-pagination\";import{SongsMainWrapper}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJSongsMain(){// props\n// 记录当前的页数\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];// redux hoooks\nvar _useSelector=useSelector(function(state){return{songList:state.getIn([\"songList\",\"songList\"])};},shallowEqual),_useSelector$songList=_useSelector.songList,_useSelector$songList2=_useSelector$songList.total,total=_useSelector$songList2===void 0?0:_useSelector$songList2,_useSelector$songList3=_useSelector$songList.playlists,playlists=_useSelector$songList3===void 0?[]:_useSelector$songList3;var dispatch=useDispatch();// handle function\n// 子数组通信，改变展示歌单的页数。\nfunction onPageChange(page){setCurrentPage(page);dispatch(getSongCategoryListAction(page));}return/*#__PURE__*/_jsxs(SongsMainWrapper,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"songs-list\",children:playlists.map(function(item,index){return/*#__PURE__*/_jsx(LJSongsCover,{info:item,right:\"30px\"},index);})}),/*#__PURE__*/_jsx(LJPagination,{currentPage:currentPage,total:total,pageSize:PER_PAGE_NUMBER,onPageChange:onPageChange})]});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/songList/c-cpns/songs-main/index.js"],"names":["React","useState","memo","useSelector","useDispatch","shallowEqual","PER_PAGE_NUMBER","getSongCategoryListAction","LJSongsCover","LJPagination","SongsMainWrapper","LJSongsMain","currentPage","setCurrentPage","state","songList","getIn","total","playlists","dispatch","onPageChange","page","map","item","index"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,IAA1B,KAAsC,OAAtC,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CAEA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,yBAAT,KAA0C,4BAA1C,CAEA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAASC,gBAAT,KAAiC,SAAjC,C,wFACA,2BAAeR,IAAI,CAAC,QAASS,CAAAA,WAAT,EAAuB,CACzC;AACA;AAFyC,cAGHV,QAAQ,CAAC,CAAD,CAHL,wCAGlCW,WAHkC,eAGrBC,cAHqB,eAKzC;AALyC,iBAQrCV,WAAW,CACb,SAACW,KAAD,QAAY,CACVC,QAAQ,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,UAAD,CAAa,UAAb,CAAZ,CADA,CAAZ,EADa,CAIbX,YAJa,CAR0B,oCAOvCU,QAPuC,8CAO3BE,KAP2B,CAO3BA,KAP2B,iCAOnB,CAPmB,qEAOhBC,SAPgB,CAOhBA,SAPgB,iCAOJ,EAPI,wBAczC,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA;AACA;AACA,QAASgB,CAAAA,YAAT,CAAsBC,IAAtB,CAA4B,CAC1BR,cAAc,CAACQ,IAAD,CAAd,CACAF,QAAQ,CAACZ,yBAAyB,CAACc,IAAD,CAA1B,CAAR,CACD,CAED,mBACE,MAAC,gBAAD,yBACE,YAAK,SAAS,CAAC,YAAf,UACGH,SAAS,CAACI,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC9B,mBAAO,KAAC,YAAD,EAAc,IAAI,CAAED,IAApB,CAAsC,KAAK,CAAC,MAA5C,EAA+BC,KAA/B,CAAP,CACD,CAFA,CADH,EADF,cAME,KAAC,YAAD,EACE,WAAW,CAAEZ,WADf,CAEE,KAAK,CAAEK,KAFT,CAGE,QAAQ,CAAEX,eAHZ,CAIE,YAAY,CAAEc,YAJhB,EANF,GADF,CAeD,CAtCkB,CAAnB","sourcesContent":["import React, { useState, memo } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\n\nimport { PER_PAGE_NUMBER } from \"@/common/contants\";\nimport { getSongCategoryListAction } from \"../../store/actionCreators\";\n\nimport LJSongsCover from \"@/components/songs-cover\";\nimport LJPagination from \"@/components/songs-pagination\";\nimport { SongsMainWrapper } from \"./style\";\nexport default memo(function LJSongsMain() {\n  // props\n  // 记录当前的页数\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // redux hoooks\n  const {\n    songList: { total = 0, playlists = [] },\n  } = useSelector(\n    (state) => ({\n      songList: state.getIn([\"songList\", \"songList\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // handle function\n  // 子数组通信，改变展示歌单的页数。\n  function onPageChange(page) {\n    setCurrentPage(page);\n    dispatch(getSongCategoryListAction(page));\n  }\n\n  return (\n    <SongsMainWrapper>\n      <div className=\"songs-list\">\n        {playlists.map((item, index) => {\n          return <LJSongsCover info={item} key={index} right=\"30px\" />;\n        })}\n      </div>\n      <LJPagination\n        currentPage={currentPage}\n        total={total}\n        pageSize={PER_PAGE_NUMBER}\n        onPageChange={onPageChange}\n      />\n    </SongsMainWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}