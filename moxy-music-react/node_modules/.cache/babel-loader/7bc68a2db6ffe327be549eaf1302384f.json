{"ast":null,"code":"var _jsxFileName = \"/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/recommend/c-cpns/top-banner/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useCallback, useState } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { getTopBannerAction } from \"../../store/actionCreators\"; // 组件导入\n\nimport { Carousel } from \"antd\";\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJTopBanner() {\n  _s();\n\n  // state\n  // 模糊图的下标\n  const [currentIndex, setCurrentIndex] = useState(0); // redux 相关的内容 + hooks\n  // 拿到state\n\n  const {\n    topBanners\n  } = useSelector(state => ({\n    // topBanners: state.get(\"recommend\").get(\"topBanners\"),\n    topBanners: state.getIn([\"recommend\", \"topBanners\"])\n  }), shallowEqual); // 拿到dispatch\n\n  const dispatch = useDispatch(); // 控制左右翻页\n\n  const bannerRef = useRef(); // 发送网络请求\n\n  useEffect(() => {\n    dispatch(getTopBannerAction());\n  }, [dispatch]); // 背景模糊图\n  // 使用 useCallback，防止该回调函数每次组件渲染都重定义\n\n  const bannerChange = useCallback((from, to) => {\n    // 根据API自身携带了 from 和 to 这两个参数\n    // console.log(to)\n    setCurrentIndex(to);\n  }, []); // 其他业务逻辑\n  // 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\n  // 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\n\n  const bgImage = topBanners[currentIndex] && topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\n  return /*#__PURE__*/_jsxDEV(BannerWrapper, {\n    bgImage: bgImage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner wrap-v2\",\n      children: [/*#__PURE__*/_jsxDEV(BannerLeft, {\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          effect: \"fade\",\n          autoplay: true,\n          ref: bannerRef,\n          beforeChange: bannerChange,\n          dots: {\n            className: \"dots\"\n          },\n          children: topBanners.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"banner-item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: item.imageUrl,\n                alt: item.topTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, item.imageUrl, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BannerRight, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SignInInfo\",\n          children: \"PC \\u5B89\\u5353 iPhone WP iPad Mac \\u516D\\u5927\\u5BA2\\u6237\\u7AEF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BannerControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn left\",\n          onClick: e => bannerRef.current.prev()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn right\",\n          onClick: e => bannerRef.current.next()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}, \"NeNmvC2U67GhRSWwuijt7y8c2RU=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/recommend/c-cpns/top-banner/index.js"],"names":["React","memo","useEffect","useRef","useCallback","useState","useSelector","useDispatch","shallowEqual","getTopBannerAction","Carousel","BannerWrapper","BannerLeft","BannerRight","BannerControl","LJTopBanner","currentIndex","setCurrentIndex","topBanners","state","getIn","dispatch","bannerRef","bannerChange","from","to","bgImage","imageUrl","className","map","item","index","topTitle","e","current","prev","next"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef, useCallback, useState } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\n\nimport { getTopBannerAction } from \"../../store/actionCreators\";\n\n// 组件导入\nimport { Carousel } from \"antd\";\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from \"./style\";\n\nexport default memo(function LJTopBanner() {\n  // state\n  // 模糊图的下标\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // redux 相关的内容 + hooks\n  // 拿到state\n  const { topBanners } = useSelector(\n    (state) => ({\n      // topBanners: state.get(\"recommend\").get(\"topBanners\"),\n      topBanners: state.getIn([\"recommend\", \"topBanners\"]),\n    }),\n    shallowEqual\n  );\n\n  // 拿到dispatch\n  const dispatch = useDispatch();\n\n  // 控制左右翻页\n  const bannerRef = useRef();\n\n  // 发送网络请求\n  useEffect(() => {\n    dispatch(getTopBannerAction());\n  }, [dispatch]);\n\n  // 背景模糊图\n  // 使用 useCallback，防止该回调函数每次组件渲染都重定义\n  const bannerChange = useCallback((from, to) => {\n    // 根据API自身携带了 from 和 to 这两个参数\n    // console.log(to)\n    setCurrentIndex(to);\n  }, []);\n\n  // 其他业务逻辑\n  // 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\n  // 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\n  const bgImage =\n    topBanners[currentIndex] &&\n    topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\n\n  return (\n    <BannerWrapper bgImage={bgImage}>\n      <div className=\"banner wrap-v2\">\n        <BannerLeft>\n          <Carousel\n            effect=\"fade\"\n            autoplay\n            ref={bannerRef}\n            beforeChange={bannerChange}\n            dots={{ className: \"dots\" }}\n          >\n            {topBanners.map((item, index) => {\n              return (\n                <div className=\"banner-item\" key={item.imageUrl}>\n                  <img\n                    className=\"image\"\n                    src={item.imageUrl}\n                    alt={item.topTitle}\n                  />\n                </div>\n              );\n            })}\n          </Carousel>\n        </BannerLeft>\n        <BannerRight>\n          <div className=\"SignInInfo\">\n            PC 安卓 iPhone WP iPad Mac 六大客户端\n          </div>\n        </BannerRight>\n        <BannerControl>\n          <button\n            className=\"btn left\"\n            onClick={(e) => bannerRef.current.prev()}\n          ></button>\n          <button\n            className=\"btn right\"\n            onClick={(e) => bannerRef.current.next()}\n          ></button>\n        </BannerControl>\n      </div>\n    </BannerWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}