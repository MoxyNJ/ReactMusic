{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\songList\\\\c-cpns\\\\songs-main\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { PER_PAGE_NUMBER } from \"@/common/contants\";\nimport { getSongCategoryListAction } from \"../../store/actionCreators\";\nimport LJSongsCover from \"@/components/songs-cover\";\nimport LJPagination from \"@/components/songs-pagination\";\nimport { SongsMainWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJSongsMain() {\n  _s();\n\n  // props\n  const [currentPage, setCurrentPage] = useState(1); // redux hoooks\n\n  const {\n    songList: {\n      playlists = [],\n      total = 0\n    }\n  } = useSelector(state => ({\n    songList: state.getIn([\"songList\", \"songList\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // handle function\n\n  function onPageChange(page, pageSize) {\n    setCurrentPage(page);\n    dispatch(getSongCategoryListAction(page));\n  }\n\n  return /*#__PURE__*/_jsxDEV(SongsMainWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-list\",\n      children: playlists.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(LJSongsCover, {\n          info: item,\n          right: \"30px\"\n        }, item.id + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LJPagination, {\n      currentPage: currentPage,\n      total: total,\n      pageSize: PER_PAGE_NUMBER,\n      onPageChange: onPageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}, \"FoYlWDcqhCD5QqtfziKwY9GXWoM=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/songList/c-cpns/songs-main/index.js"],"names":["React","useState","memo","useSelector","useDispatch","shallowEqual","PER_PAGE_NUMBER","getSongCategoryListAction","LJSongsCover","LJPagination","SongsMainWrapper","LJSongsMain","currentPage","setCurrentPage","songList","playlists","total","state","getIn","dispatch","onPageChange","page","pageSize","map","item","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,gBAAT,QAAiC,SAAjC;;AACA,kCAAeR,IAAI,SAAC,SAASS,WAAT,GAAuB;AAAA;;AACzC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C,CAFyC,CAIzC;;AACA,QAAM;AACJa,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS,GAAG,EAAd;AAAkBC,MAAAA,KAAK,GAAG;AAA1B;AADN,MAEFb,WAAW,CACZc,KAAD,KAAY;AACVH,IAAAA,QAAQ,EAAEG,KAAK,CAACC,KAAN,CAAY,CAAC,UAAD,EAAa,UAAb,CAAZ;AADA,GAAZ,CADa,EAIbb,YAJa,CAFf;AASA,QAAMc,QAAQ,GAAGf,WAAW,EAA5B,CAdyC,CAgBzC;;AACA,WAASgB,YAAT,CAAsBC,IAAtB,EAA4BC,QAA5B,EAAsC;AACpCT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAF,IAAAA,QAAQ,CAACZ,yBAAyB,CAACc,IAAD,CAA1B,CAAR;AACD;;AAED,sBACE,QAAC,gBAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGN,SAAS,CAACQ,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,4BACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAED,IAApB;AAAgD,UAAA,KAAK,EAAC;AAAtD,WAA+BA,IAAI,CAACE,EAAL,GAAUD,KAAzC;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AACE,MAAA,WAAW,EAAEb,WADf;AAEE,MAAA,KAAK,EAAEI,KAFT;AAGE,MAAA,QAAQ,EAAEV,eAHZ;AAIE,MAAA,YAAY,EAAEc;AAJhB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvCkB;AAAA,UAObjB,WAPa,EAcAC,WAdA;AAAA,GAAnB","sourcesContent":["import React, { useState, memo } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport { PER_PAGE_NUMBER } from \"@/common/contants\";\r\nimport { getSongCategoryListAction } from \"../../store/actionCreators\";\r\n\r\nimport LJSongsCover from \"@/components/songs-cover\";\r\nimport LJPagination from \"@/components/songs-pagination\";\r\nimport { SongsMainWrapper } from \"./style\";\r\nexport default memo(function LJSongsMain() {\r\n  // props\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // redux hoooks\r\n  const {\r\n    songList: { playlists = [], total = 0 },\r\n  } = useSelector(\r\n    (state) => ({\r\n      songList: state.getIn([\"songList\", \"songList\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // handle function\r\n  function onPageChange(page, pageSize) {\r\n    setCurrentPage(page);\r\n    dispatch(getSongCategoryListAction(page));\r\n  }\r\n\r\n  return (\r\n    <SongsMainWrapper>\r\n      <div className=\"songs-list\">\r\n        {playlists.map((item, index) => {\r\n          return (\r\n            <LJSongsCover info={item} key={item.id + index} right=\"30px\" />\r\n          );\r\n        })}\r\n      </div>\r\n      <LJPagination\r\n        currentPage={currentPage}\r\n        total={total}\r\n        pageSize={PER_PAGE_NUMBER}\r\n        onPageChange={onPageChange}\r\n      />\r\n    </SongsMainWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}