{"ast":null,"code":"import _slicedToArray from\"F:/ReactTea/moxy-music-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useEffect,useRef,useCallback,useState}from\"react\";import{useSelector,useDispatch,shallowEqual}from\"react-redux\";import{getTopBannerAction}from\"../../store/actionCreators\";// 组件导入\nimport{Carousel}from\"antd\";import{BannerWrapper,BannerLeft,BannerRight,BannerControl}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJTopBanner(){// state\n// 模糊图的下标\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentIndex=_useState2[0],setCurrentIndex=_useState2[1];// redux 相关的内容 + hooks\n// 拿到state\nvar _useSelector=useSelector(function(state){return{// topBanners: state.get(\"recommend\").get(\"topBanners\"),\ntopBanners:state.getIn([\"recommend\",\"topBanners\"])};},shallowEqual),topBanners=_useSelector.topBanners;// 拿到dispatch\nvar dispatch=useDispatch();// 控制左右翻页\nvar bannerRef=useRef();// 发送网络请求\nuseEffect(function(){dispatch(getTopBannerAction());},[dispatch]);// 背景模糊图\n// 使用 useCallback，防止该回调函数每次组件渲染都重定义\nvar bannerChange=useCallback(function(from,to){// 根据API自身携带了 from 和 to 这两个参数\n// console.log(to)\nsetCurrentIndex(to);},[]);// 其他业务逻辑\n// 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\n// 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\nvar bgImage=topBanners[currentIndex]&&topBanners[currentIndex].imageUrl+\"?imageView&blur=40x20\";return/*#__PURE__*/_jsx(BannerWrapper,{bgImage:bgImage,children:/*#__PURE__*/_jsxs(\"div\",{className:\"banner wrap-v2\",children:[/*#__PURE__*/_jsx(BannerLeft,{children:/*#__PURE__*/_jsx(Carousel,{effect:\"fade\",autoplay:true,ref:bannerRef,beforeChange:bannerChange,children:topBanners.map(function(item,index){return/*#__PURE__*/_jsx(\"div\",{className:\"banner-item\",children:/*#__PURE__*/_jsx(\"img\",{className:\"image\",src:item.imageUrl,alt:item.topTitle})},item.imageUrl);})})}),/*#__PURE__*/_jsx(BannerRight,{children:/*#__PURE__*/_jsx(\"div\",{className:\"SignInInfo\",children:\"PC \\u5B89\\u5353 iPhone WP iPad Mac \\u516D\\u5927\\u5BA2\\u6237\\u7AEF\"})}),/*#__PURE__*/_jsxs(BannerControl,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn left\",onClick:function onClick(e){return bannerRef.current.prev();}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn right\",onClick:function onClick(e){return bannerRef.current.next();}})]})]})});});","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/recommend/c-cpns/top-banner/index.js"],"names":["React","memo","useEffect","useRef","useCallback","useState","useSelector","useDispatch","shallowEqual","getTopBannerAction","Carousel","BannerWrapper","BannerLeft","BannerRight","BannerControl","LJTopBanner","currentIndex","setCurrentIndex","state","topBanners","getIn","dispatch","bannerRef","bannerChange","from","to","bgImage","imageUrl","map","item","index","topTitle","e","current","prev","next"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,SAAtB,CAAiCC,MAAjC,CAAyCC,WAAzC,CAAsDC,QAAtD,KAAsE,OAAtE,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CAEA,OAASC,kBAAT,KAAmC,4BAAnC,CAEA;AACA,OAASC,QAAT,KAAyB,MAAzB,CACA,OAASC,aAAT,CAAwBC,UAAxB,CAAoCC,WAApC,CAAiDC,aAAjD,KAAsE,SAAtE,C,wFAEA,2BAAeb,IAAI,CAAC,QAASc,CAAAA,WAAT,EAAuB,CACzC;AACA;AAFyC,cAGDV,QAAQ,CAAC,CAAD,CAHP,wCAGlCW,YAHkC,eAGpBC,eAHoB,eAKzC;AACA;AANyC,iBAOlBX,WAAW,CAChC,SAACY,KAAD,QAAY,CACV;AACAC,UAAU,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,CAAc,YAAd,CAAZ,CAFF,CAAZ,EADgC,CAKhCZ,YALgC,CAPO,CAOjCW,UAPiC,cAOjCA,UAPiC,CAezC;AACA,GAAME,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA;AACA,GAAMe,CAAAA,SAAS,CAAGnB,MAAM,EAAxB,CAEA;AACAD,SAAS,CAAC,UAAM,CACdmB,QAAQ,CAACZ,kBAAkB,EAAnB,CAAR,CACD,CAFQ,CAEN,CAACY,QAAD,CAFM,CAAT,CAIA;AACA;AACA,GAAME,CAAAA,YAAY,CAAGnB,WAAW,CAAC,SAACoB,IAAD,CAAOC,EAAP,CAAc,CAC7C;AACA;AACAR,eAAe,CAACQ,EAAD,CAAf,CACD,CAJ+B,CAI7B,EAJ6B,CAAhC,CAMA;AACA;AACA;AACA,GAAMC,CAAAA,OAAO,CACXP,UAAU,CAACH,YAAD,CAAV,EACAG,UAAU,CAACH,YAAD,CAAV,CAAyBW,QAAzB,CAAoC,uBAFtC,CAIA,mBACE,KAAC,aAAD,EAAe,OAAO,CAAED,OAAxB,uBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,KAAC,UAAD,wBACE,KAAC,QAAD,EACE,MAAM,CAAC,MADT,CAEE,QAAQ,KAFV,CAGE,GAAG,CAAEJ,SAHP,CAIE,YAAY,CAAEC,YAJhB,UAMGJ,UAAU,CAACS,GAAX,CAAe,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC/B,mBACE,YAAK,SAAS,CAAC,aAAf,uBACE,YACE,SAAS,CAAC,OADZ,CAEE,GAAG,CAAED,IAAI,CAACF,QAFZ,CAGE,GAAG,CAAEE,IAAI,CAACE,QAHZ,EADF,EAAkCF,IAAI,CAACF,QAAvC,CADF,CASD,CAVA,CANH,EADF,EADF,cAqBE,KAAC,WAAD,wBACE,YAAK,SAAS,CAAC,YAAf,+EADF,EArBF,cA0BE,MAAC,aAAD,yBACE,eACE,SAAS,CAAC,UADZ,CAEE,OAAO,CAAE,iBAACK,CAAD,QAAOV,CAAAA,SAAS,CAACW,OAAV,CAAkBC,IAAlB,EAAP,EAFX,EADF,cAKE,eACE,SAAS,CAAC,WADZ,CAEE,OAAO,CAAE,iBAACF,CAAD,QAAOV,CAAAA,SAAS,CAACW,OAAV,CAAkBE,IAAlB,EAAP,EAFX,EALF,GA1BF,GADF,EADF,CAyCD,CAlFkB,CAAnB","sourcesContent":["import React, { memo, useEffect, useRef, useCallback, useState } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport { getTopBannerAction } from \"../../store/actionCreators\";\r\n\r\n// 组件导入\r\nimport { Carousel } from \"antd\";\r\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from \"./style\";\r\n\r\nexport default memo(function LJTopBanner() {\r\n  // state\r\n  // 模糊图的下标\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // redux 相关的内容 + hooks\r\n  // 拿到state\r\n  const { topBanners } = useSelector(\r\n    (state) => ({\r\n      // topBanners: state.get(\"recommend\").get(\"topBanners\"),\r\n      topBanners: state.getIn([\"recommend\", \"topBanners\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // 拿到dispatch\r\n  const dispatch = useDispatch();\r\n\r\n  // 控制左右翻页\r\n  const bannerRef = useRef();\r\n\r\n  // 发送网络请求\r\n  useEffect(() => {\r\n    dispatch(getTopBannerAction());\r\n  }, [dispatch]);\r\n\r\n  // 背景模糊图\r\n  // 使用 useCallback，防止该回调函数每次组件渲染都重定义\r\n  const bannerChange = useCallback((from, to) => {\r\n    // 根据API自身携带了 from 和 to 这两个参数\r\n    // console.log(to)\r\n    setCurrentIndex(to);\r\n  }, []);\r\n\r\n  // 其他业务逻辑\r\n  // 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\r\n  // 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\r\n  const bgImage =\r\n    topBanners[currentIndex] &&\r\n    topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\r\n\r\n  return (\r\n    <BannerWrapper bgImage={bgImage}>\r\n      <div className=\"banner wrap-v2\">\r\n        <BannerLeft>\r\n          <Carousel\r\n            effect=\"fade\"\r\n            autoplay\r\n            ref={bannerRef}\r\n            beforeChange={bannerChange}\r\n          >\r\n            {topBanners.map((item, index) => {\r\n              return (\r\n                <div className=\"banner-item\" key={item.imageUrl}>\r\n                  <img\r\n                    className=\"image\"\r\n                    src={item.imageUrl}\r\n                    alt={item.topTitle}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </BannerLeft>\r\n        <BannerRight>\r\n          <div className=\"SignInInfo\">\r\n            PC 安卓 iPhone WP iPad Mac 六大客户端\r\n          </div>\r\n        </BannerRight>\r\n        <BannerControl>\r\n          <button\r\n            className=\"btn left\"\r\n            onClick={(e) => bannerRef.current.prev()}\r\n          ></button>\r\n          <button\r\n            className=\"btn right\"\r\n            onClick={(e) => bannerRef.current.next()}\r\n          ></button>\r\n        </BannerControl>\r\n      </div>\r\n    </BannerWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}