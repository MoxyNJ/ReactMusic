{"ast":null,"code":"var _jsxFileName = \"/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-bar/c-cpns/app-player-volume/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Slider } from \"antd\";\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\nimport { PlayerVolumeWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerVolume() {\n  _s();\n\n  // redux hooks\n  const {\n    volume\n  } = useSelector(state => ({\n    volume: state.getIn([\"player\", \"volume\"])\n  })); // 进度条\n\n  const [progress, setProgress] = useState(volume);\n  const dispatch = useDispatch(); // react hooks\n  // 初始化\n\n  useEffect(() => {\n    setProgress(volume * 100);\n  }, [volume]); // 按下\n\n  const sliderChange = useCallback(value => {\n    dispatch(changePlayerVolumeAction(value / 100));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PlayerVolumeWrapper, {\n    className: \"sprite_playbar\",\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      vertical: true,\n      className: \"sprite_playbar\",\n      value: progress,\n      onChange: sliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}, \"AHO1l15M6BnHeYE1SkHxYWStIAo=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/player/app-player-bar/c-cpns/app-player-volume/index.js"],"names":["React","memo","useCallback","useEffect","useState","useDispatch","useSelector","Slider","changePlayerVolumeAction","PlayerVolumeWrapper","LJPlayerVolume","volume","state","getIn","progress","setProgress","dispatch","sliderChange","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,mBAAT,QAAoC,SAApC;;AAEA,kCAAeR,IAAI,SAAC,SAASS,cAAT,GAA0B;AAAA;;AAC5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,CAAEM,KAAD,KAAY;AACzCD,IAAAA,MAAM,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,QAAX,CAAZ;AADiC,GAAZ,CAAD,CAA9B,CAF4C,CAM5C;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACO,MAAD,CAAxC;AAEA,QAAMK,QAAQ,GAAGX,WAAW,EAA5B,CAT4C,CAW5C;AACA;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAACJ,MAAM,GAAG,GAAV,CAAX;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT,CAb4C,CAiB5C;;AACA,QAAMM,YAAY,GAAGf,WAAW,CAC7BgB,KAAD,IAAW;AACTF,IAAAA,QAAQ,CAACR,wBAAwB,CAACU,KAAK,GAAG,GAAT,CAAzB,CAAR;AACD,GAH6B,EAI9B,CAACF,QAAD,CAJ8B,CAAhC;AAOA,sBACE,QAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,gBAA/B;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,KAAK,EAAEF,QAHT;AAIE,MAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCkB;AAAA,UAEEX,WAFF,EASAD,WATA;AAAA,GAAnB","sourcesContent":["import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Slider } from \"antd\";\n\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\n\nimport { PlayerVolumeWrapper } from \"./style\";\n\nexport default memo(function LJPlayerVolume() {\n  // redux hooks\n  const { volume } = useSelector((state) => ({\n    volume: state.getIn([\"player\", \"volume\"]),\n  }));\n\n  // 进度条\n  const [progress, setProgress] = useState(volume);\n\n  const dispatch = useDispatch();\n\n  // react hooks\n  // 初始化\n  useEffect(() => {\n    setProgress(volume * 100);\n  }, [volume]);\n\n  // 按下\n  const sliderChange = useCallback(\n    (value) => {\n      dispatch(changePlayerVolumeAction(value / 100));\n    },\n    [dispatch]\n  );\n\n  return (\n    <PlayerVolumeWrapper className=\"sprite_playbar\">\n      <Slider\n        vertical\n        className=\"sprite_playbar\"\n        value={progress}\n        onChange={sliderChange}\n      />\n    </PlayerVolumeWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}