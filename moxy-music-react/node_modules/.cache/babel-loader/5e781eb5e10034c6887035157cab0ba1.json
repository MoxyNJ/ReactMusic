{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\player\\\\app-player-bar\\\\c-cpns\\\\app-player-volume\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { Slider } from \"antd\";\nimport { INIT_VOLUME } from \"@/common/contants\";\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\nimport { PlayerVolumeWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerVolume() {\n  _s();\n\n  // 进度条\n  const [progress, setProgress] = useState(0);\n  const dispatch = useDispatch(); // 对音量的初始化\n\n  useEffect(() => {\n    dispatch(changePlayerVolumeAction(INIT_VOLUME));\n    setProgress(INIT_VOLUME / 100);\n  }, [INIT_VOLUME]); // 按下\n\n  const sliderChange = useCallback(value => {\n    setProgress(value);\n    dispatch(changePlayerVolumeAction(value / 100));\n  }, [dispatch]); // // 松开\n  // const sliderAfterChange = useCallback(\n  //   (value) => {\n  //     const currentVolume = value / 100;\n  //     dispatch(changePlayerVolumeAction(currentVolume));\n  //   },\n  //   [dispatch]\n  // );\n\n  return /*#__PURE__*/_jsxDEV(PlayerVolumeWrapper, {\n    className: \"sprite_playbar\",\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      vertical: true,\n      className: \"sprite_playbar\",\n      value: progress,\n      onChange: sliderChange // onAfterChange={sliderAfterChange}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}, \"tNAOglFDX6Pp08h7aAs0pgkE8g8=\", false, function () {\n  return [useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/player/app-player-bar/c-cpns/app-player-volume/index.js"],"names":["React","memo","useCallback","useEffect","useState","useDispatch","useSelector","shallowEqual","Slider","INIT_VOLUME","changePlayerVolumeAction","PlayerVolumeWrapper","LJPlayerVolume","progress","setProgress","dispatch","sliderChange","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,mBAAT,QAAoC,SAApC;;AAEA,kCAAeV,IAAI,SAAC,SAASW,cAAT,GAA0B;AAAA;;AAC5C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B,CAJ4C,CAM5C;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACL,wBAAwB,CAACD,WAAD,CAAzB,CAAR;AACAK,IAAAA,WAAW,CAACL,WAAW,GAAG,GAAf,CAAX;AACD,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT,CAP4C,CAY5C;;AACA,QAAMO,YAAY,GAAGd,WAAW,CAC7Be,KAAD,IAAW;AACTH,IAAAA,WAAW,CAACG,KAAD,CAAX;AACAF,IAAAA,QAAQ,CAACL,wBAAwB,CAACO,KAAK,GAAG,GAAT,CAAzB,CAAR;AACD,GAJ6B,EAK9B,CAACF,QAAD,CAL8B,CAAhC,CAb4C,CAqB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,gBAA/B;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,KAAK,EAAEF,QAHT;AAIE,MAAA,QAAQ,EAAEG,YAJZ,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCkB;AAAA,UAIAX,WAJA;AAAA,GAAnB","sourcesContent":["import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport { Slider } from \"antd\";\r\n\r\nimport { INIT_VOLUME } from \"@/common/contants\";\r\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\r\n\r\nimport { PlayerVolumeWrapper } from \"./style\";\r\n\r\nexport default memo(function LJPlayerVolume() {\r\n  // 进度条\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // 对音量的初始化\r\n  useEffect(() => {\r\n    dispatch(changePlayerVolumeAction(INIT_VOLUME));\r\n    setProgress(INIT_VOLUME / 100);\r\n  }, [INIT_VOLUME]);\r\n\r\n  // 按下\r\n  const sliderChange = useCallback(\r\n    (value) => {\r\n      setProgress(value);\r\n      dispatch(changePlayerVolumeAction(value / 100));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // // 松开\r\n  // const sliderAfterChange = useCallback(\r\n  //   (value) => {\r\n  //     const currentVolume = value / 100;\r\n  //     dispatch(changePlayerVolumeAction(currentVolume));\r\n  //   },\r\n  //   [dispatch]\r\n  // );\r\n\r\n  return (\r\n    <PlayerVolumeWrapper className=\"sprite_playbar\">\r\n      <Slider\r\n        vertical\r\n        className=\"sprite_playbar\"\r\n        value={progress}\r\n        onChange={sliderChange}\r\n        // onAfterChange={sliderAfterChange}\r\n      />\r\n    </PlayerVolumeWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}