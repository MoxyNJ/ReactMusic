{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\player\\\\app-player-bar\\\\c-cpns\\\\app-player-volume\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Slider } from \"antd\";\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\nimport { PlayerVolumeWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerVolume() {\n  _s();\n\n  // redux hooks\n  const {\n    volume\n  } = useSelector(state => ({\n    volume: state.getIn([\"player\", \"volume\"])\n  })); // 进度条\n\n  const [progress, setProgress] = useState(volume);\n  const dispatch = useDispatch(); // react hooks\n  // 按下\n\n  const sliderChange = useCallback(value => {\n    setProgress(value);\n    dispatch(changePlayerVolumeAction(value / 100));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PlayerVolumeWrapper, {\n    className: \"sprite_playbar\",\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      vertical: true,\n      className: \"sprite_playbar\",\n      value: progress,\n      onChange: sliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}, \"bGCoLMJprRGfsBdlt0j8+iRXa4A=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/player/app-player-bar/c-cpns/app-player-volume/index.js"],"names":["React","memo","useCallback","useState","useDispatch","useSelector","Slider","changePlayerVolumeAction","PlayerVolumeWrapper","LJPlayerVolume","volume","state","getIn","progress","setProgress","dispatch","sliderChange","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,mBAAT,QAAoC,SAApC;;AAEA,kCAAeP,IAAI,SAAC,SAASQ,cAAT,GAA0B;AAAA;;AAC5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,CAAEM,KAAD,KAAY;AACzCD,IAAAA,MAAM,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,QAAX,CAAZ;AADiC,GAAZ,CAAD,CAA9B,CAF4C,CAM5C;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACO,MAAD,CAAxC;AAEA,QAAMK,QAAQ,GAAGX,WAAW,EAA5B,CAT4C,CAW5C;AACA;;AACA,QAAMY,YAAY,GAAGd,WAAW,CAC7Be,KAAD,IAAW;AACTH,IAAAA,WAAW,CAACG,KAAD,CAAX;AACAF,IAAAA,QAAQ,CAACR,wBAAwB,CAACU,KAAK,GAAG,GAAT,CAAzB,CAAR;AACD,GAJ6B,EAK9B,CAACF,QAAD,CAL8B,CAAhC;AAQA,sBACE,QAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,gBAA/B;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,KAAK,EAAEF,QAHT;AAIE,MAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA/BkB;AAAA,UAEEX,WAFF,EASAD,WATA;AAAA,GAAnB","sourcesContent":["import React, { memo, useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Slider } from \"antd\";\r\n\r\nimport { changePlayerVolumeAction } from \"../../../store/actionCreators\";\r\n\r\nimport { PlayerVolumeWrapper } from \"./style\";\r\n\r\nexport default memo(function LJPlayerVolume() {\r\n  // redux hooks\r\n  const { volume } = useSelector((state) => ({\r\n    volume: state.getIn([\"player\", \"volume\"]),\r\n  }));\r\n\r\n  // 进度条\r\n  const [progress, setProgress] = useState(volume);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // react hooks\r\n  // 按下\r\n  const sliderChange = useCallback(\r\n    (value) => {\r\n      setProgress(value);\r\n      dispatch(changePlayerVolumeAction(value / 100));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <PlayerVolumeWrapper className=\"sprite_playbar\">\r\n      <Slider\r\n        vertical\r\n        className=\"sprite_playbar\"\r\n        value={progress}\r\n        onChange={sliderChange}\r\n      />\r\n    </PlayerVolumeWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}