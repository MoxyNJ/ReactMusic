{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\discover\\\\c-pages\\\\ranking\\\\c-cpns\\\\rank-header\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { getSizeImage, formatMonthDay } from \"@/utils/format-utils\";\nimport LJRankingSongPannelBar from \"@/components/ranking-song-pannel-bar\";\nimport { LJRankingTitleWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJRankingTitle() {\n  _s();\n\n  // redux hooks\n  const {\n    playList,\n    listTitle,\n    currentIndex\n  } = useSelector(state => ({\n    playList: state.getIn([\"ranking\", \"playList\"]),\n    listTitle: state.getIn([\"ranking\", \"listTitle\"]),\n    currentIndex: state.getIn([\"ranking\", \"currentIndex\"])\n  }), shallowEqual); // react hooks\n\n  return /*#__PURE__*/_jsxDEV(LJRankingTitleWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}, \"vkponndq/9Zcu0/NlVBE+gwylCI=\", false, function () {\n  return [useSelector];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/discover/c-pages/ranking/c-cpns/rank-header/index.js"],"names":["React","memo","shallowEqual","useSelector","getSizeImage","formatMonthDay","LJRankingSongPannelBar","LJRankingTitleWrapper","LJRankingTitle","playList","listTitle","currentIndex","state","getIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,sBAA7C;AAEA,OAAOC,sBAAP,MAAmC,sCAAnC;AAEA,SAASC,qBAAT,QAAsC,SAAtC;;AACA,kCAAeN,IAAI,SAAC,SAASO,cAAT,GAA0B;AAAA;;AAC5C;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAwCR,WAAW,CACtDS,KAAD,KAAY;AACVH,IAAAA,QAAQ,EAAEG,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,UAAZ,CAAZ,CADA;AAEVH,IAAAA,SAAS,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,WAAZ,CAAZ,CAFD;AAGVF,IAAAA,YAAY,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,cAAZ,CAAZ;AAHJ,GAAZ,CADuD,EAMvDX,YANuD,CAAzD,CAF4C,CAW5C;;AAEA,sBACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA5CkB;AAAA,UAE6BC,WAF7B;AAAA,GAAnB","sourcesContent":["import React, { memo } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nimport { getSizeImage, formatMonthDay } from \"@/utils/format-utils\";\r\n\r\nimport LJRankingSongPannelBar from \"@/components/ranking-song-pannel-bar\";\r\n\r\nimport { LJRankingTitleWrapper } from \"./style\";\r\nexport default memo(function LJRankingTitle() {\r\n  // redux hooks\r\n  const { playList, listTitle, currentIndex } = useSelector(\r\n    (state) => ({\r\n      playList: state.getIn([\"ranking\", \"playList\"]),\r\n      listTitle: state.getIn([\"ranking\", \"listTitle\"]),\r\n      currentIndex: state.getIn([\"ranking\", \"currentIndex\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // react hooks\r\n\r\n  return (\r\n    <LJRankingTitleWrapper>\r\n      {/* <div className=\"image\">\r\n        <img\r\n          src={getSizeImage(playList.coverImgUrl, 150)}\r\n          alt={playList.name}\r\n        />\r\n        <div className=\"mask sprite_cover\"></div>\r\n      </div>\r\n      <div className=\"info\">\r\n        <div className=\"name\">{playList.name}</div>\r\n        <div className=\"time\">\r\n          <i className=\"icon sprite_icon2\"></i>\r\n          <span className=\"flash\">\r\n            最近更新：{formatMonthDay(playList.trackUpdateTime)}\r\n          </span>\r\n          <span className=\"regular\">\r\n            （\r\n            {listTitle[currentIndex] && listTitle[currentIndex].updateFrequency}\r\n            ）\r\n          </span>\r\n        </div>\r\n        <LJRankingSongPannelBar\r\n          subscribedCount={`(${playList.subscribedCount})`}\r\n          shareCount={`(${playList.shareCount})`}\r\n          download=\"下载\"\r\n          commentCount={`(${playList.commentCount})`}\r\n        />\r\n      </div> */}\r\n    </LJRankingTitleWrapper>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}