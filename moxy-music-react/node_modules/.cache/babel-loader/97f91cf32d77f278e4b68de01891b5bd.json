{"ast":null,"code":"var _jsxFileName = \"/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/ranking/c-cpns/rank-header/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { getSizeImage, formatMonthDay } from \"@/utils/format-utils\";\nimport LJRankingSongPannelBar from \"@/components/ranking-song-pannel-bar\";\nimport { LJRankingTitleWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJRankingTitle() {\n  _s();\n\n  // redux hooks\n  const {\n    playList: xxxx = [],\n    listTitle,\n    currentIndex\n  } = useSelector(state => ({\n    playList: state.getIn([\"ranking\", \"playList\"]),\n    listTitle: state.getIn([\"ranking\", \"listTitle\"]),\n    currentIndex: state.getIn([\"ranking\", \"currentIndex\"])\n  }), shallowEqual); // react hooks\n  // other function\n\n  return /*#__PURE__*/_jsxDEV(LJRankingTitleWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getSizeImage(playList.coverImgUrl, 150),\n        alt: playList.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mask sprite_cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: playList.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"icon sprite_icon2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flash\",\n          children: [\"\\u6700\\u8FD1\\u66F4\\u65B0\\uFF1A\", formatMonthDay(playList.trackUpdateTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"regular\",\n          children: [\"\\uFF08\", listTitle[currentIndex] && listTitle[currentIndex].updateFrequency, \"\\uFF09\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LJRankingSongPannelBar, {\n        subscribedCount: `(${playList.subscribedCount})`,\n        shareCount: `(${playList.shareCount})`,\n        download: \"\\u4E0B\\u8F7D\",\n        commentCount: `(${playList.commentCount})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"tuVgnslcNomaWRE3Tw+BxS+AQmY=\", false, function () {\n  return [useSelector];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/ranking/c-cpns/rank-header/index.js"],"names":["React","memo","shallowEqual","useSelector","getSizeImage","formatMonthDay","LJRankingSongPannelBar","LJRankingTitleWrapper","LJRankingTitle","playList","xxxx","listTitle","currentIndex","state","getIn","coverImgUrl","name","trackUpdateTime","updateFrequency","subscribedCount","shareCount","commentCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,sBAA7C;AAEA,OAAOC,sBAAP,MAAmC,sCAAnC;AAEA,SAASC,qBAAT,QAAsC,SAAtC;;AACA,kCAAeN,IAAI,SAAC,SAASO,cAAT,GAA0B;AAAA;;AAC5C;AACA,QAAM;AACJC,IAAAA,QAAQ,EAAEC,IAAI,GAAG,EADb;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFT,WAAW,CACZU,KAAD,KAAY;AACVJ,IAAAA,QAAQ,EAAEI,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,UAAZ,CAAZ,CADA;AAEVH,IAAAA,SAAS,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,WAAZ,CAAZ,CAFD;AAGVF,IAAAA,YAAY,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,SAAD,EAAY,cAAZ,CAAZ;AAHJ,GAAZ,CADa,EAMbZ,YANa,CAJf,CAF4C,CAe5C;AAEA;;AAEA,sBACE,QAAC,qBAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAEE,YAAY,CAACK,QAAQ,CAACM,WAAV,EAAuB,GAAvB,CADnB;AAEE,QAAA,GAAG,EAAEN,QAAQ,CAACO;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBP,QAAQ,CAACO;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,uDACQX,cAAc,CAACI,QAAQ,CAACQ,eAAV,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,+BAEGN,SAAS,CAACC,YAAD,CAAT,IAA2BD,SAAS,CAACC,YAAD,CAAT,CAAwBM,eAFtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE,QAAC,sBAAD;AACE,QAAA,eAAe,EAAG,IAAGT,QAAQ,CAACU,eAAgB,GADhD;AAEE,QAAA,UAAU,EAAG,IAAGV,QAAQ,CAACW,UAAW,GAFtC;AAGE,QAAA,QAAQ,EAAC,cAHX;AAIE,QAAA,YAAY,EAAG,IAAGX,QAAQ,CAACY,YAAa;AAJ1C;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlDkB;AAAA,UAMblB,WANa;AAAA,GAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nimport { getSizeImage, formatMonthDay } from \"@/utils/format-utils\";\n\nimport LJRankingSongPannelBar from \"@/components/ranking-song-pannel-bar\";\n\nimport { LJRankingTitleWrapper } from \"./style\";\nexport default memo(function LJRankingTitle() {\n  // redux hooks\n  const {\n    playList: xxxx = [],\n    listTitle,\n    currentIndex,\n  } = useSelector(\n    (state) => ({\n      playList: state.getIn([\"ranking\", \"playList\"]),\n      listTitle: state.getIn([\"ranking\", \"listTitle\"]),\n      currentIndex: state.getIn([\"ranking\", \"currentIndex\"]),\n    }),\n    shallowEqual\n  );\n\n  // react hooks\n\n  // other function\n\n  return (\n    <LJRankingTitleWrapper>\n      <div className=\"image\">\n        <img\n          src={getSizeImage(playList.coverImgUrl, 150)}\n          alt={playList.name}\n        />\n        <div className=\"mask sprite_cover\"></div>\n      </div>\n      <div className=\"info\">\n        <div className=\"name\">{playList.name}</div>\n        <div className=\"time\">\n          <i className=\"icon sprite_icon2\"></i>\n          <span className=\"flash\">\n            最近更新：{formatMonthDay(playList.trackUpdateTime)}\n          </span>\n          <span className=\"regular\">\n            （\n            {listTitle[currentIndex] && listTitle[currentIndex].updateFrequency}\n            ）\n          </span>\n        </div>\n        <LJRankingSongPannelBar\n          subscribedCount={`(${playList.subscribedCount})`}\n          shareCount={`(${playList.shareCount})`}\n          download=\"下载\"\n          commentCount={`(${playList.commentCount})`}\n        />\n      </div>\n    </LJRankingTitleWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}