{"ast":null,"code":"import React,{memo}from\"react\";import{useDispatch,useSelector,shallowEqual}from\"react-redux\";import classNames from\"classnames\";import{artistCategories}from\"@/common/local-data\";import{changeCurrentAreaAction,changeCurrentTypeAction}from\"../../store/actionCreators\";import{CategoryWrapper,CategoryItem}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJArtistCategory(){// redux hooks\nvar _useSelector=useSelector(function(state){return{currentArea:state.getIn([\"artist\",\"currentArea\"]),currentType:state.getIn([\"artist\",\"currentType\"])};},shallowEqual),currentArea=_useSelector.currentArea,currentType=_useSelector.currentType;var dispatch=useDispatch();// handle function\nvar selectArtist=function selectArtist(area,type){dispatch(changeCurrentAreaAction(area));dispatch(changeCurrentTypeAction(type));};// 用一个高阶函数，把每个大类中的小类提取了出来\nvar renderArtist=function renderArtist(artists,area){return/*#__PURE__*/_jsx(\"div\",{children:artists.map(function(item,index){// 判断是否被选中，要大类area和小类type都相符合。\nvar isSelect=currentArea===area&&currentType.type===item.type;return/*#__PURE__*/_jsx(CategoryItem,{className:classNames({active:isSelect}),children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(e){return selectArtist(area,item);},children:item.name})},item.name);})});};return/*#__PURE__*/_jsx(CategoryWrapper,{children:artistCategories.map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:item.title}),renderArtist(item.artists,item.area)]},item.area);})});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/artist/c-cpns/artist-category/index.js"],"names":["React","memo","useDispatch","useSelector","shallowEqual","classNames","artistCategories","changeCurrentAreaAction","changeCurrentTypeAction","CategoryWrapper","CategoryItem","LJArtistCategory","state","currentArea","getIn","currentType","dispatch","selectArtist","area","type","renderArtist","artists","map","item","index","isSelect","active","e","name","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,KAA4B,OAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,OAASC,gBAAT,KAAiC,qBAAjC,CAEA,OACEC,uBADF,CAEEC,uBAFF,KAGO,4BAHP,CAKA,OAASC,eAAT,CAA0BC,YAA1B,KAA8C,SAA9C,C,wFACA,2BAAeT,IAAI,CAAC,QAASU,CAAAA,gBAAT,EAA4B,CAC9C;AAD8C,iBAETR,WAAW,CAC9C,SAACS,KAAD,QAAY,CACVC,WAAW,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,CAAW,aAAX,CAAZ,CADH,CAEVC,WAAW,CAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,CAAW,aAAX,CAAZ,CAFH,CAAZ,EAD8C,CAK9CV,YAL8C,CAFF,CAEtCS,WAFsC,cAEtCA,WAFsC,CAEzBE,WAFyB,cAEzBA,WAFyB,CAS9C,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA;AACA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAOC,IAAP,CAAgB,CACnCH,QAAQ,CAACT,uBAAuB,CAACW,IAAD,CAAxB,CAAR,CACAF,QAAQ,CAACR,uBAAuB,CAACW,IAAD,CAAxB,CAAR,CACD,CAHD,CAKA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAUH,IAAV,CAAmB,CACtC,mBACE,qBACGG,OAAO,CAACC,GAAR,CAAY,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC5B;AACA,GAAMC,CAAAA,QAAQ,CACZZ,WAAW,GAAKK,IAAhB,EAAwBH,WAAW,CAACI,IAAZ,GAAqBI,IAAI,CAACJ,IADpD,CAEA,mBACE,KAAC,YAAD,EAEE,SAAS,CAAEd,UAAU,CAAC,CAAEqB,MAAM,CAAED,QAAV,CAAD,CAFvB,uBAKE,aAAM,OAAO,CAAE,iBAACE,CAAD,QAAOV,CAAAA,YAAY,CAACC,IAAD,CAAOK,IAAP,CAAnB,EAAf,UAAiDA,IAAI,CAACK,IAAtD,EALF,EACOL,IAAI,CAACK,IADZ,CADF,CASD,CAbA,CADH,EADF,CAkBD,CAnBD,CAqBA,mBACE,KAAC,eAAD,WAEGtB,gBAAgB,CAACgB,GAAjB,CAAqB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACrC,mBACE,aAAK,SAAS,CAAC,SAAf,wBACE,WAAI,SAAS,CAAC,OAAd,UAAuBD,IAAI,CAACM,KAA5B,EADF,CAEGT,YAAY,CAACG,IAAI,CAACF,OAAN,CAAeE,IAAI,CAACL,IAApB,CAFf,GAA8BK,IAAI,CAACL,IAAnC,CADF,CAMD,CAPA,CAFH,EADF,CAaD,CApDkB,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { artistCategories } from \"@/common/local-data\";\n\nimport {\n  changeCurrentAreaAction,\n  changeCurrentTypeAction,\n} from \"../../store/actionCreators\";\n\nimport { CategoryWrapper, CategoryItem } from \"./style\";\nexport default memo(function LJArtistCategory() {\n  // redux hooks\n  const { currentArea, currentType } = useSelector(\n    (state) => ({\n      currentArea: state.getIn([\"artist\", \"currentArea\"]),\n      currentType: state.getIn([\"artist\", \"currentType\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // handle function\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  };\n\n  // 用一个高阶函数，把每个大类中的小类提取了出来\n  const renderArtist = (artists, area) => {\n    return (\n      <div>\n        {artists.map((item, index) => {\n          // 判断是否被选中，要大类area和小类type都相符合。\n          const isSelect =\n            currentArea === area && currentType.type === item.type;\n          return (\n            <CategoryItem\n              key={item.name}\n              className={classNames({ active: isSelect })}\n            >\n              {/* 如果选中后，就会dispatch area & type，从而让list组件获取详细歌手数据 */}\n              <span onClick={(e) => selectArtist(area, item)}>{item.name}</span>\n            </CategoryItem>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <CategoryWrapper>\n      {/* 左侧导航的数据是本地提前保存的，直接拿来用。 */}\n      {artistCategories.map((item, index) => {\n        return (\n          <div className=\"section\" key={item.area}>\n            <h2 className=\"title\">{item.title}</h2>\n            {renderArtist(item.artists, item.area)}\n          </div>\n        );\n      })}\n    </CategoryWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}