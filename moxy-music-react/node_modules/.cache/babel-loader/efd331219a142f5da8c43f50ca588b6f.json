{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\moxy-music-react\\\\src\\\\pages\\\\player\\\\app-player-full\\\\c-cpns\\\\player-cover-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { getSizeImage } from \"@/utils/format-utils\";\nimport HHHH from \"@/components/theme-header-player\";\nimport { PlayerCoverListWrapper } from \"./style\";\nimport { getSimiPlaylistAction } from \"../../store/actionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function LJPlayerCoverList() {\n  _s();\n\n  // redux hooks\n  const {\n    simiPlaylist\n  } = useSelector(state => ({\n    simiPlaylist: state.getIn([\"player\", \"simiPlaylist\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // other hooks\n\n  useEffect(() => {\n    dispatch(getSimiPlaylistAction());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PlayerCoverListWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}, \"vpehSWUNXwDlZ0L+7NPbb68O6p0=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/ReactTea/moxy-music-react/src/pages/player/app-player-full/c-cpns/player-cover-list/index.js"],"names":["React","memo","useEffect","useDispatch","useSelector","shallowEqual","getSizeImage","HHHH","PlayerCoverListWrapper","getSimiPlaylistAction","LJPlayerCoverList","simiPlaylist","state","getIn","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,SAASC,sBAAT,QAAuC,SAAvC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;;AAEA,kCAAeR,IAAI,SAAC,SAASS,iBAAT,GAA6B;AAAA;;AAC/C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBP,WAAW,CACjCQ,KAAD,KAAY;AACVD,IAAAA,YAAY,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,cAAX,CAAZ;AADJ,GAAZ,CADkC,EAIlCR,YAJkC,CAApC;AAMA,QAAMS,QAAQ,GAAGX,WAAW,EAA5B,CAR+C,CAU/C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA1CkB;AAAA,UAEQV,WAFR,EAQAD,WARA;AAAA,GAAnB","sourcesContent":["import React, { memo, useEffect } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport { getSizeImage } from \"@/utils/format-utils\";\n\nimport HHHH from \"@/components/theme-header-player\";\nimport { PlayerCoverListWrapper } from \"./style\";\nimport { getSimiPlaylistAction } from \"../../store/actionCreators\";\n\nexport default memo(function LJPlayerCoverList() {\n  // redux hooks\n  const { simiPlaylist } = useSelector(\n    (state) => ({\n      simiPlaylist: state.getIn([\"player\", \"simiPlaylist\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // other hooks\n  useEffect(() => {\n    dispatch(getSimiPlaylistAction());\n  }, [dispatch]);\n\n  return (\n    <PlayerCoverListWrapper>\n      {/* <HHHH title=\"包含这首歌的歌单\" />\n      <div className=\"songs\">\n        {simiPlaylist.map((item, index) => {\n          return (\n            <div className=\"song-item\" key={item.id}>\n              <a className=\"image\" href=\"/todo\">\n                <img src={getSizeImage(item.coverImgUrl, 50)} alt=\"\" />\n              </a>\n              <div className=\"info text-nowrap\">\n                <a href=\"#/\" className=\"name\">\n                  {item.name}\n                </a>\n                <div className=\"auchor\">\n                  by\n                  <a href=\"#/\" className=\"nickname\">\n                    {item.creator.nickname}\n                  </a>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div> */}\n    </PlayerCoverListWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}