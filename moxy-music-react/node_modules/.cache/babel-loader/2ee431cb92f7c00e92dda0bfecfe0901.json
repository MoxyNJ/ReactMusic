{"ast":null,"code":"import _slicedToArray from\"/Users/moxy/ReactTea/moxy-music-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useEffect,useRef,useCallback,useState}from\"react\";import{useSelector,useDispatch,shallowEqual}from\"react-redux\";import{getTopBannerAction}from\"../../store/actionCreators\";// 组件导入\nimport{Carousel}from\"antd\";import{BannerWrapper,BannerLeft,BannerRight,BannerControl}from\"./style\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default/*#__PURE__*/memo(function LJTopBanner(){// state\n// 模糊图的下标\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentIndex=_useState2[0],setCurrentIndex=_useState2[1];// redux 相关的内容 + hooks\n// 拿到state\nvar _useSelector=useSelector(function(state){return{// topBanners: state.get(\"recommend\").get(\"topBanners\"),\ntopBanners:state.getIn([\"recommend\",\"topBanners\"])};},shallowEqual),topBanners=_useSelector.topBanners;// 拿到dispatch\nvar dispatch=useDispatch();// 控制左右翻页\nvar bannerRef=useRef();// 发送网络请求\nuseEffect(function(){dispatch(getTopBannerAction());},[dispatch]);// 背景模糊图\n// 使用 useCallback，防止该回调函数每次组件渲染都重定义\nvar bannerChange=useCallback(function(from,to){// 根据API自身携带了 from 和 to 这两个参数\n// console.log(to)\nsetCurrentIndex(to);},[]);// 其他业务逻辑\n// 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\n// 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\nvar bgImage=topBanners[currentIndex]&&topBanners[currentIndex].imageUrl+\"?imageView&blur=40x20\";return/*#__PURE__*/_jsx(BannerWrapper,{bgImage:bgImage,children:/*#__PURE__*/_jsxs(\"div\",{className:\"banner wrap-v2\",children:[/*#__PURE__*/_jsx(BannerLeft,{children:/*#__PURE__*/_jsx(Carousel,{effect:\"fade\",autoplay:true,ref:bannerRef,beforeChange:bannerChange,dots:{className:\"dots\"},children:topBanners.map(function(item,index){return/*#__PURE__*/_jsx(\"div\",{className:\"banner-item\",children:/*#__PURE__*/_jsx(\"img\",{className:\"image\",src:item.imageUrl,alt:item.topTitle})},item.imageUrl);})})}),/*#__PURE__*/_jsx(BannerRight,{children:/*#__PURE__*/_jsx(\"div\",{className:\"SignInInfo\",children:\"PC \\u5B89\\u5353 iPhone WP iPad Mac \\u516D\\u5927\\u5BA2\\u6237\\u7AEF\"})}),/*#__PURE__*/_jsxs(BannerControl,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn left\",onClick:function onClick(e){return bannerRef.current.prev();}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn right\",onClick:function onClick(e){return bannerRef.current.next();}})]})]})});});","map":{"version":3,"sources":["/Users/moxy/ReactTea/moxy-music-react/src/pages/discover/c-pages/recommend/c-cpns/top-banner/index.js"],"names":["React","memo","useEffect","useRef","useCallback","useState","useSelector","useDispatch","shallowEqual","getTopBannerAction","Carousel","BannerWrapper","BannerLeft","BannerRight","BannerControl","LJTopBanner","currentIndex","setCurrentIndex","state","topBanners","getIn","dispatch","bannerRef","bannerChange","from","to","bgImage","imageUrl","className","map","item","index","topTitle","e","current","prev","next"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,SAAtB,CAAiCC,MAAjC,CAAyCC,WAAzC,CAAsDC,QAAtD,KAAsE,OAAtE,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CAEA,OAASC,kBAAT,KAAmC,4BAAnC,CAEA;AACA,OAASC,QAAT,KAAyB,MAAzB,CACA,OAASC,aAAT,CAAwBC,UAAxB,CAAoCC,WAApC,CAAiDC,aAAjD,KAAsE,SAAtE,C,wFAEA,2BAAeb,IAAI,CAAC,QAASc,CAAAA,WAAT,EAAuB,CACzC;AACA;AAFyC,cAGDV,QAAQ,CAAC,CAAD,CAHP,wCAGlCW,YAHkC,eAGpBC,eAHoB,eAKzC;AACA;AANyC,iBAOlBX,WAAW,CAChC,SAACY,KAAD,QAAY,CACV;AACAC,UAAU,CAAED,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,CAAc,YAAd,CAAZ,CAFF,CAAZ,EADgC,CAKhCZ,YALgC,CAPO,CAOjCW,UAPiC,cAOjCA,UAPiC,CAezC;AACA,GAAME,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA;AACA,GAAMe,CAAAA,SAAS,CAAGnB,MAAM,EAAxB,CAEA;AACAD,SAAS,CAAC,UAAM,CACdmB,QAAQ,CAACZ,kBAAkB,EAAnB,CAAR,CACD,CAFQ,CAEN,CAACY,QAAD,CAFM,CAAT,CAIA;AACA;AACA,GAAME,CAAAA,YAAY,CAAGnB,WAAW,CAAC,SAACoB,IAAD,CAAOC,EAAP,CAAc,CAC7C;AACA;AACAR,eAAe,CAACQ,EAAD,CAAf,CACD,CAJ+B,CAI7B,EAJ6B,CAAhC,CAMA;AACA;AACA;AACA,GAAMC,CAAAA,OAAO,CACXP,UAAU,CAACH,YAAD,CAAV,EACAG,UAAU,CAACH,YAAD,CAAV,CAAyBW,QAAzB,CAAoC,uBAFtC,CAIA,mBACE,KAAC,aAAD,EAAe,OAAO,CAAED,OAAxB,uBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,KAAC,UAAD,wBACE,KAAC,QAAD,EACE,MAAM,CAAC,MADT,CAEE,QAAQ,KAFV,CAGE,GAAG,CAAEJ,SAHP,CAIE,YAAY,CAAEC,YAJhB,CAKE,IAAI,CAAE,CAAEK,SAAS,CAAE,MAAb,CALR,UAOGT,UAAU,CAACU,GAAX,CAAe,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC/B,mBACE,YAAK,SAAS,CAAC,aAAf,uBACE,YACE,SAAS,CAAC,OADZ,CAEE,GAAG,CAAED,IAAI,CAACH,QAFZ,CAGE,GAAG,CAAEG,IAAI,CAACE,QAHZ,EADF,EAAkCF,IAAI,CAACH,QAAvC,CADF,CASD,CAVA,CAPH,EADF,EADF,cAsBE,KAAC,WAAD,wBACE,YAAK,SAAS,CAAC,YAAf,+EADF,EAtBF,cA2BE,MAAC,aAAD,yBACE,eACE,SAAS,CAAC,UADZ,CAEE,OAAO,CAAE,iBAACM,CAAD,QAAOX,CAAAA,SAAS,CAACY,OAAV,CAAkBC,IAAlB,EAAP,EAFX,EADF,cAKE,eACE,SAAS,CAAC,WADZ,CAEE,OAAO,CAAE,iBAACF,CAAD,QAAOX,CAAAA,SAAS,CAACY,OAAV,CAAkBE,IAAlB,EAAP,EAFX,EALF,GA3BF,GADF,EADF,CA0CD,CAnFkB,CAAnB","sourcesContent":["import React, { memo, useEffect, useRef, useCallback, useState } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\n\nimport { getTopBannerAction } from \"../../store/actionCreators\";\n\n// 组件导入\nimport { Carousel } from \"antd\";\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from \"./style\";\n\nexport default memo(function LJTopBanner() {\n  // state\n  // 模糊图的下标\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // redux 相关的内容 + hooks\n  // 拿到state\n  const { topBanners } = useSelector(\n    (state) => ({\n      // topBanners: state.get(\"recommend\").get(\"topBanners\"),\n      topBanners: state.getIn([\"recommend\", \"topBanners\"]),\n    }),\n    shallowEqual\n  );\n\n  // 拿到dispatch\n  const dispatch = useDispatch();\n\n  // 控制左右翻页\n  const bannerRef = useRef();\n\n  // 发送网络请求\n  useEffect(() => {\n    dispatch(getTopBannerAction());\n  }, [dispatch]);\n\n  // 背景模糊图\n  // 使用 useCallback，防止该回调函数每次组件渲染都重定义\n  const bannerChange = useCallback((from, to) => {\n    // 根据API自身携带了 from 和 to 这两个参数\n    // console.log(to)\n    setCurrentIndex(to);\n  }, []);\n\n  // 其他业务逻辑\n  // 防止 topBanners 最开始的时候拿不到数据，先判断一下是否有数据：topBanners[currentIndex]\n  // 如果有数据，就那其中的 imageURL，如果没数据，就拿到了一个 undefined。\n  const bgImage =\n    topBanners[currentIndex] &&\n    topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\n\n  return (\n    <BannerWrapper bgImage={bgImage}>\n      <div className=\"banner wrap-v2\">\n        <BannerLeft>\n          <Carousel\n            effect=\"fade\"\n            autoplay\n            ref={bannerRef}\n            beforeChange={bannerChange}\n            dots={{ className: \"dots\" }}\n          >\n            {topBanners.map((item, index) => {\n              return (\n                <div className=\"banner-item\" key={item.imageUrl}>\n                  <img\n                    className=\"image\"\n                    src={item.imageUrl}\n                    alt={item.topTitle}\n                  />\n                </div>\n              );\n            })}\n          </Carousel>\n        </BannerLeft>\n        <BannerRight>\n          <div className=\"SignInInfo\">\n            PC 安卓 iPhone WP iPad Mac 六大客户端\n          </div>\n        </BannerRight>\n        <BannerControl>\n          <button\n            className=\"btn left\"\n            onClick={(e) => bannerRef.current.prev()}\n          ></button>\n          <button\n            className=\"btn right\"\n            onClick={(e) => bannerRef.current.next()}\n          ></button>\n        </BannerControl>\n      </div>\n    </BannerWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}