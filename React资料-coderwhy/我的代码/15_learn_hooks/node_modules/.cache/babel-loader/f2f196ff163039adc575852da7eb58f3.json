{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = shouldInstrument;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _micromatch() {\n  const data = _interopRequireDefault(require('micromatch'));\n\n  _micromatch = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst MOCKS_PATTERN = new RegExp((0, _jestRegexUtil().escapePathForRegex)(path().sep + '__mocks__' + path().sep));\nconst cachedRegexes = new Map();\n\nconst getRegex = regexStr => {\n  if (!cachedRegexes.has(regexStr)) {\n    cachedRegexes.set(regexStr, new RegExp(regexStr));\n  }\n\n  const regex = cachedRegexes.get(regexStr); // prevent stateful regexes from breaking, just in case\n\n  regex.lastIndex = 0;\n  return regex;\n};\n\nfunction shouldInstrument(filename, options, config) {\n  if (!options.collectCoverage) {\n    return false;\n  }\n\n  if (config.forceCoverageMatch.length && _micromatch().default.any(filename, config.forceCoverageMatch)) {\n    return true;\n  }\n\n  if (!config.testPathIgnorePatterns.some(pattern => getRegex(pattern).test(filename))) {\n    if (config.testRegex.some(regex => new RegExp(regex).test(filename))) {\n      return false;\n    }\n\n    if ((0, _jestUtil().globsToMatcher)(config.testMatch)((0, _jestUtil().replacePathSepForGlob)(filename))) {\n      return false;\n    }\n  }\n\n  if ( // This configuration field contains an object in the form of:\n  // {'path/to/file.js': true}\n  options.collectCoverageOnlyFrom && !options.collectCoverageOnlyFrom[filename]) {\n    return false;\n  }\n\n  if ( // still cover if `only` is specified\n  !options.collectCoverageOnlyFrom && options.collectCoverageFrom.length && !(0, _jestUtil().globsToMatcher)(options.collectCoverageFrom)((0, _jestUtil().replacePathSepForGlob)(path().relative(config.rootDir, filename)))) {\n    return false;\n  }\n\n  if (config.coveragePathIgnorePatterns.some(pattern => !!filename.match(pattern))) {\n    return false;\n  }\n\n  if (config.globalSetup === filename) {\n    return false;\n  }\n\n  if (config.globalTeardown === filename) {\n    return false;\n  }\n\n  if (config.setupFiles.includes(filename)) {\n    return false;\n  }\n\n  if (config.setupFilesAfterEnv.includes(filename)) {\n    return false;\n  }\n\n  if (MOCKS_PATTERN.test(filename)) {\n    return false;\n  }\n\n  if (options.changedFiles && !options.changedFiles.has(filename)) {\n    if (!options.sourcesRelatedToTestsInChangedFiles) {\n      return false;\n    }\n\n    if (!options.sourcesRelatedToTestsInChangedFiles.has(filename)) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["F:/GreenTea-Lemon/React/coderwhyReact/我的代码/15_learn_hooks/node_modules/@jest/transform/build/shouldInstrument.js"],"names":["Object","defineProperty","exports","value","default","shouldInstrument","path","data","_interopRequireWildcard","require","_micromatch","_interopRequireDefault","_jestRegexUtil","_jestUtil","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MOCKS_PATTERN","RegExp","escapePathForRegex","sep","cachedRegexes","Map","getRegex","regexStr","regex","lastIndex","filename","options","config","collectCoverage","forceCoverageMatch","length","any","testPathIgnorePatterns","some","pattern","test","testRegex","globsToMatcher","testMatch","replacePathSepForGlob","collectCoverageOnlyFrom","collectCoverageFrom","relative","rootDir","coveragePathIgnorePatterns","match","globalSetup","globalTeardown","setupFiles","includes","setupFilesAfterEnv","changedFiles","sourcesRelatedToTestsInChangedFiles"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = shouldInstrument;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _micromatch() {\n  const data = _interopRequireDefault(require('micromatch'));\n\n  _micromatch = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst MOCKS_PATTERN = new RegExp(\n  (0, _jestRegexUtil().escapePathForRegex)(\n    path().sep + '__mocks__' + path().sep\n  )\n);\nconst cachedRegexes = new Map();\n\nconst getRegex = regexStr => {\n  if (!cachedRegexes.has(regexStr)) {\n    cachedRegexes.set(regexStr, new RegExp(regexStr));\n  }\n\n  const regex = cachedRegexes.get(regexStr); // prevent stateful regexes from breaking, just in case\n\n  regex.lastIndex = 0;\n  return regex;\n};\n\nfunction shouldInstrument(filename, options, config) {\n  if (!options.collectCoverage) {\n    return false;\n  }\n\n  if (\n    config.forceCoverageMatch.length &&\n    _micromatch().default.any(filename, config.forceCoverageMatch)\n  ) {\n    return true;\n  }\n\n  if (\n    !config.testPathIgnorePatterns.some(pattern =>\n      getRegex(pattern).test(filename)\n    )\n  ) {\n    if (config.testRegex.some(regex => new RegExp(regex).test(filename))) {\n      return false;\n    }\n\n    if (\n      (0, _jestUtil().globsToMatcher)(config.testMatch)(\n        (0, _jestUtil().replacePathSepForGlob)(filename)\n      )\n    ) {\n      return false;\n    }\n  }\n\n  if (\n    // This configuration field contains an object in the form of:\n    // {'path/to/file.js': true}\n    options.collectCoverageOnlyFrom &&\n    !options.collectCoverageOnlyFrom[filename]\n  ) {\n    return false;\n  }\n\n  if (\n    // still cover if `only` is specified\n    !options.collectCoverageOnlyFrom &&\n    options.collectCoverageFrom.length &&\n    !(0, _jestUtil().globsToMatcher)(options.collectCoverageFrom)(\n      (0, _jestUtil().replacePathSepForGlob)(\n        path().relative(config.rootDir, filename)\n      )\n    )\n  ) {\n    return false;\n  }\n\n  if (\n    config.coveragePathIgnorePatterns.some(pattern => !!filename.match(pattern))\n  ) {\n    return false;\n  }\n\n  if (config.globalSetup === filename) {\n    return false;\n  }\n\n  if (config.globalTeardown === filename) {\n    return false;\n  }\n\n  if (config.setupFiles.includes(filename)) {\n    return false;\n  }\n\n  if (config.setupFilesAfterEnv.includes(filename)) {\n    return false;\n  }\n\n  if (MOCKS_PATTERN.test(filename)) {\n    return false;\n  }\n\n  if (options.changedFiles && !options.changedFiles.has(filename)) {\n    if (!options.sourcesRelatedToTestsInChangedFiles) {\n      return false;\n    }\n\n    if (!options.sourcesRelatedToTestsInChangedFiles.has(filename)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}