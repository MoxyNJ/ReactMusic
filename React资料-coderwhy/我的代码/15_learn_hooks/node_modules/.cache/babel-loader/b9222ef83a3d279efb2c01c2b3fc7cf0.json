{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = handlePotentialSyntaxError;\nexports.enhanceUnexpectedTokenMessage = enhanceUnexpectedTokenMessage;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst DOT = ' \\u2022 ';\n\nfunction handlePotentialSyntaxError(e) {\n  if (e.codeFrame) {\n    e.stack = e.message + '\\n' + e.codeFrame;\n  }\n\n  if ( // `instanceof` might come from the wrong context\n  e.name === 'SyntaxError' && (e.message.includes('Unexpected token') || e.message.includes('Cannot use import')) && !e.message.includes(' expected')) {\n    throw enhanceUnexpectedTokenMessage(e);\n  }\n\n  return e;\n}\n\nfunction enhanceUnexpectedTokenMessage(e) {\n  e.stack = `${_chalk().default.bold.red('Jest encountered an unexpected token')}\n\nThis usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\nBy default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\nHere's what you can do:\n${DOT}If you are trying to use ECMAScript Modules, see ${_chalk().default.underline('https://jestjs.io/docs/en/ecmascript-modules')} for how to enable it.\n${DOT}To have some of your \"node_modules\" files transformed, you can specify a custom ${_chalk().default.bold('\"transformIgnorePatterns\"')} in your config.\n${DOT}If you need a custom transformation specify a ${_chalk().default.bold('\"transform\"')} option in your config.\n${DOT}If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the ${_chalk().default.bold('\"moduleNameMapper\"')} config option.\n\nYou'll find more details and examples of these config options in the docs:\n${_chalk().default.cyan('https://jestjs.io/docs/en/configuration.html')}\n\n${_chalk().default.bold.red('Details:')}\n\n` + e.stack;\n  return e;\n}","map":{"version":3,"sources":["F:/GreenTea-Lemon/React/coderwhyReact/我的代码/15_learn_hooks/node_modules/@jest/transform/build/enhanceUnexpectedTokenMessage.js"],"names":["Object","defineProperty","exports","value","default","handlePotentialSyntaxError","enhanceUnexpectedTokenMessage","_chalk","data","_interopRequireDefault","require","obj","__esModule","DOT","e","codeFrame","stack","message","name","includes","bold","red","underline","cyan"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,0BAAlB;AACAH,OAAO,CAACI,6BAAR,GAAwCA,6BAAxC;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,YAAY;AACnB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCE,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACP,IAAAA,OAAO,EAAEO;AAAV,GAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,GAAG,GAAG,UAAZ;;AAEA,SAASR,0BAAT,CAAoCS,CAApC,EAAuC;AACrC,MAAIA,CAAC,CAACC,SAAN,EAAiB;AACfD,IAAAA,CAAC,CAACE,KAAF,GAAUF,CAAC,CAACG,OAAF,GAAY,IAAZ,GAAmBH,CAAC,CAACC,SAA/B;AACD;;AAED,OACE;AACAD,EAAAA,CAAC,CAACI,IAAF,KAAW,aAAX,KACCJ,CAAC,CAACG,OAAF,CAAUE,QAAV,CAAmB,kBAAnB,KACCL,CAAC,CAACG,OAAF,CAAUE,QAAV,CAAmB,mBAAnB,CAFF,KAGA,CAACL,CAAC,CAACG,OAAF,CAAUE,QAAV,CAAmB,WAAnB,CALH,EAME;AACA,UAAMb,6BAA6B,CAACQ,CAAD,CAAnC;AACD;;AAED,SAAOA,CAAP;AACD;;AAED,SAASR,6BAAT,CAAuCQ,CAAvC,EAA0C;AACxCA,EAAAA,CAAC,CAACE,KAAF,GACG,GAAET,MAAM,GAAGH,OAAT,CAAiBgB,IAAjB,CAAsBC,GAAtB,CAA0B,sCAA1B,CAAkE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,EAAER,GAAI,oDAAmDN,MAAM,GAAGH,OAAT,CAAiBkB,SAAjB,CACnD,8CADmD,CAEnD;AACN,EAAET,GAAI,mFAAkFN,MAAM,GAAGH,OAAT,CAAiBgB,IAAjB,CAClF,2BADkF,CAElF;AACN,EAAEP,GAAI,iDAAgDN,MAAM,GAAGH,OAAT,CAAiBgB,IAAjB,CAChD,aADgD,CAEhD;AACN,EAAEP,GAAI,sGAAqGN,MAAM,GAAGH,OAAT,CAAiBgB,IAAjB,CACrG,oBADqG,CAErG;AACN;AACA;AACA,EAAEb,MAAM,GAAGH,OAAT,CAAiBmB,IAAjB,CAAsB,8CAAtB,CAAsE;AACxE;AACA,EAAEhB,MAAM,GAAGH,OAAT,CAAiBgB,IAAjB,CAAsBC,GAAtB,CAA0B,UAA1B,CAAsC;AACxC;AACA,CAzBI,GAyBAP,CAAC,CAACE,KA1BJ;AA2BA,SAAOF,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = handlePotentialSyntaxError;\nexports.enhanceUnexpectedTokenMessage = enhanceUnexpectedTokenMessage;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst DOT = ' \\u2022 ';\n\nfunction handlePotentialSyntaxError(e) {\n  if (e.codeFrame) {\n    e.stack = e.message + '\\n' + e.codeFrame;\n  }\n\n  if (\n    // `instanceof` might come from the wrong context\n    e.name === 'SyntaxError' &&\n    (e.message.includes('Unexpected token') ||\n      e.message.includes('Cannot use import')) &&\n    !e.message.includes(' expected')\n  ) {\n    throw enhanceUnexpectedTokenMessage(e);\n  }\n\n  return e;\n}\n\nfunction enhanceUnexpectedTokenMessage(e) {\n  e.stack =\n    `${_chalk().default.bold.red('Jest encountered an unexpected token')}\n\nThis usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\nBy default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\nHere's what you can do:\n${DOT}If you are trying to use ECMAScript Modules, see ${_chalk().default.underline(\n      'https://jestjs.io/docs/en/ecmascript-modules'\n    )} for how to enable it.\n${DOT}To have some of your \"node_modules\" files transformed, you can specify a custom ${_chalk().default.bold(\n      '\"transformIgnorePatterns\"'\n    )} in your config.\n${DOT}If you need a custom transformation specify a ${_chalk().default.bold(\n      '\"transform\"'\n    )} option in your config.\n${DOT}If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the ${_chalk().default.bold(\n      '\"moduleNameMapper\"'\n    )} config option.\n\nYou'll find more details and examples of these config options in the docs:\n${_chalk().default.cyan('https://jestjs.io/docs/en/configuration.html')}\n\n${_chalk().default.bold.red('Details:')}\n\n` + e.stack;\n  return e;\n}\n"]},"metadata":{},"sourceType":"script"}