{"ast":null,"code":"let source, pos, end;\n\nlet openTokenDepth, templateDepth, lastTokenPos, lastSlashWasDivision, templateStack, templateStackDepth, openTokenPosStack, openClassPosStack, nextBraceIsClass, starExportMap, lastStarExportSpecifier, _exports, reexports;\n\nfunction resetState() {\n  openTokenDepth = 0;\n  templateDepth = -1;\n  lastTokenPos = -1;\n  lastSlashWasDivision = false;\n  templateStack = new Array(1024);\n  templateStackDepth = 0;\n  openTokenPosStack = new Array(1024);\n  openClassPosStack = new Array(1024);\n  nextBraceIsClass = false;\n  starExportMap = Object.create(null);\n  lastStarExportSpecifier = null;\n  _exports = new Set();\n  reexports = new Set();\n} // RequireType\n\n\nconst Import = 0;\nconst ExportAssign = 1;\nconst ExportStar = 2;\nconst strictReserved = new Set(['implements', 'interface', 'let', 'package', 'private', 'protected', 'public', 'static', 'yield', 'enum']);\n\nfunction parseCJS(source, name = '@') {\n  resetState();\n\n  try {\n    parseSource(source);\n  } catch (e) {\n    e.message += `\\n  at ${name}:${source.slice(0, pos).split('\\n').length}:${pos - source.lastIndexOf('\\n', pos - 1)}`;\n    e.loc = pos;\n    throw e;\n  }\n\n  const result = {\n    exports: [..._exports],\n    reexports: [...reexports]\n  };\n  resetState();\n  return result;\n}\n\nfunction addExport(name) {\n  if (!strictReserved.has(name)) _exports.add(name);\n}\n\nfunction parseSource(cjsSource) {\n  source = cjsSource;\n  pos = -1;\n  end = source.length - 1;\n  let ch = 0; // Handle #!\n\n  if (source.charCodeAt(0) === 35\n  /*#*/\n  && source.charCodeAt(1) === 33\n  /*!*/\n  ) {\n      if (source.length === 2) return true;\n      pos += 2;\n\n      while (pos++ < end) {\n        ch = source.charCodeAt(pos);\n        if (ch === 10\n        /*\\n*/\n        || ch === 13\n        /*\\r*/\n        ) break;\n      }\n    }\n\n  while (pos++ < end) {\n    ch = source.charCodeAt(pos);\n    if (ch === 32 || ch < 14 && ch > 8) continue;\n\n    if (openTokenDepth === 0) {\n      switch (ch) {\n        case 105\n        /*i*/\n        :\n          if (source.startsWith('mport', pos + 1) && keywordStart(pos)) throwIfImportStatement();\n          lastTokenPos = pos;\n          continue;\n\n        case 114\n        /*r*/\n        :\n          const startPos = pos;\n          if (tryParseRequire(Import) && keywordStart(startPos)) tryBacktrackAddStarExportBinding(startPos - 1);\n          lastTokenPos = pos;\n          continue;\n\n        case 95\n        /*_*/\n        :\n          if (source.startsWith('_export', pos + 1) && (keywordStart(pos) || source.charCodeAt(pos - 1) === 46\n          /*.*/\n          )) {\n            pos += 8;\n            if (source.startsWith('Star', pos)) pos += 4;\n\n            if (source.charCodeAt(pos) === 40\n            /*(*/\n            ) {\n                openTokenPosStack[openTokenDepth++] = lastTokenPos;\n                if (source.charCodeAt(++pos) === 114\n                /*r*/\n                ) tryParseRequire(ExportStar);\n              }\n          }\n\n          lastTokenPos = pos;\n          continue;\n      }\n    }\n\n    switch (ch) {\n      case 101\n      /*e*/\n      :\n        if (source.startsWith('xport', pos + 1) && keywordStart(pos)) {\n          if (source.charCodeAt(pos + 6) === 115\n          /*s*/\n          ) tryParseExportsDotAssign(false);else if (openTokenDepth === 0) throwIfExportStatement();\n        }\n\n        break;\n\n      case 99\n      /*c*/\n      :\n        if (keywordStart(pos) && source.startsWith('lass', pos + 1) && isBrOrWs(source.charCodeAt(pos + 5))) nextBraceIsClass = true;\n        break;\n\n      case 109\n      /*m*/\n      :\n        if (source.startsWith('odule', pos + 1) && keywordStart(pos)) tryParseModuleExportsDotAssign();\n        break;\n\n      case 79\n      /*O*/\n      :\n        if (source.startsWith('bject', pos + 1) && keywordStart(pos)) tryParseObjectDefineOrKeys(openTokenDepth === 0);\n        break;\n\n      case 40\n      /*(*/\n      :\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\n        break;\n\n      case 41\n      /*)*/\n      :\n        if (openTokenDepth === 0) throw new Error('Unexpected closing bracket.');\n        openTokenDepth--;\n        break;\n\n      case 123\n      /*{*/\n      :\n        openClassPosStack[openTokenDepth] = nextBraceIsClass;\n        nextBraceIsClass = false;\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\n        break;\n\n      case 125\n      /*}*/\n      :\n        if (openTokenDepth === 0) throw new Error('Unexpected closing brace.');\n\n        if (openTokenDepth-- === templateDepth) {\n          templateDepth = templateStack[--templateStackDepth];\n          templateString();\n        } else {\n          if (templateDepth !== -1 && openTokenDepth < templateDepth) throw new Error('Unexpected closing brace.');\n        }\n\n        break;\n\n      case 60\n      /*>*/\n      :\n        // TODO: <!-- XML comment support\n        break;\n\n      case 39\n      /*'*/\n      :\n        singleQuoteString();\n        break;\n\n      case 34\n      /*\"*/\n      :\n        doubleQuoteString();\n        break;\n\n      case 47\n      /*/*/\n      :\n        {\n          const next_ch = source.charCodeAt(pos + 1);\n\n          if (next_ch === 47\n          /*/*/\n          ) {\n              lineComment(); // dont update lastToken\n\n              continue;\n            } else if (next_ch === 42\n          /***/\n          ) {\n              blockComment(); // dont update lastToken\n\n              continue;\n            } else {\n            // Division / regex ambiguity handling based on checking backtrack analysis of:\n            // - what token came previously (lastToken)\n            // - if a closing brace or paren, what token came before the corresponding\n            //   opening brace or paren (lastOpenTokenIndex)\n            const lastToken = source.charCodeAt(lastTokenPos);\n\n            if (isExpressionPunctuator(lastToken) && !(lastToken === 46\n            /*.*/\n            && source.charCodeAt(lastTokenPos - 1) >= 48\n            /*0*/\n            && source.charCodeAt(lastTokenPos - 1) <= 57\n            /*9*/\n            ) && !(lastToken === 43\n            /*+*/\n            && source.charCodeAt(lastTokenPos - 1) === 43\n            /*+*/\n            ) && !(lastToken === 45\n            /*-*/\n            && source.charCodeAt(lastTokenPos - 1) === 45\n            /*-*/\n            ) || lastToken === 41\n            /*)*/\n            && isParenKeyword(openTokenPosStack[openTokenDepth]) || lastToken === 125\n            /*}*/\n            && (isExpressionTerminator(openTokenPosStack[openTokenDepth]) || openClassPosStack[openTokenDepth]) || lastToken === 47\n            /*/*/\n            && lastSlashWasDivision || isExpressionKeyword(lastTokenPos) || !lastToken) {\n              regularExpression();\n              lastSlashWasDivision = false;\n            } else {\n              lastSlashWasDivision = true;\n            }\n          }\n\n          break;\n        }\n\n      case 96\n      /*`*/\n      :\n        templateString();\n        break;\n    }\n\n    lastTokenPos = pos;\n  }\n\n  if (templateDepth !== -1) throw new Error('Unterminated template.');\n  if (openTokenDepth) throw new Error('Unterminated braces.');\n}\n\nfunction tryBacktrackAddStarExportBinding(bPos) {\n  while (source.charCodeAt(bPos) === 32\n  /* */\n  && bPos >= 0) bPos--;\n\n  if (source.charCodeAt(bPos) === 61\n  /*=*/\n  ) {\n      bPos--;\n\n      while (source.charCodeAt(bPos) === 32\n      /* */\n      && bPos >= 0) bPos--;\n\n      let codePoint;\n      const id_end = bPos;\n      let identifierStart = false;\n\n      while ((codePoint = codePointAtLast(bPos)) && bPos >= 0) {\n        if (codePoint === 92\n        /*\\*/\n        ) return;\n        if (!isIdentifierChar(codePoint, true)) break;\n        identifierStart = isIdentifierStart(codePoint, true);\n        bPos -= codePointLen(codePoint);\n      }\n\n      if (identifierStart && source.charCodeAt(bPos) === 32\n      /* */\n      ) {\n          const starExportId = source.slice(bPos + 1, id_end + 1);\n\n          while (source.charCodeAt(bPos) === 32\n          /* */\n          && bPos >= 0) bPos--;\n\n          switch (source.charCodeAt(bPos)) {\n            case 114\n            /*r*/\n            :\n              if (!source.startsWith('va', bPos - 2)) return;\n              break;\n\n            case 116\n            /*t*/\n            :\n              if (!source.startsWith('le', bPos - 2) && !source.startsWith('cons', bPos - 4)) return;\n              break;\n\n            default:\n              return;\n          }\n\n          starExportMap[starExportId] = lastStarExportSpecifier;\n        }\n    }\n}\n\nfunction tryParseObjectDefineOrKeys(keys) {\n  pos += 6;\n  let revertPos = pos - 1;\n  let ch = commentWhitespace();\n\n  if (ch === 46\n  /*.*/\n  ) {\n      pos++;\n      ch = commentWhitespace();\n\n      if (ch === 100\n      /*d*/\n      && source.startsWith('efineProperty', pos + 1)) {\n        while (true) {\n          pos += 14;\n          revertPos = pos - 1;\n          ch = commentWhitespace();\n          if (ch !== 40\n          /*(*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!readExportsOrModuleDotExports(ch)) break;\n          ch = commentWhitespace();\n          if (ch !== 44\n          /*,*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 39\n          /*'*/\n          && ch !== 34\n          /*\"*/\n          ) break;\n          let quot = ch;\n          const exportPos = ++pos;\n          if (!identifier() || source.charCodeAt(pos) !== quot) break;\n          const expt = source.slice(exportPos, pos);\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 44\n          /*,*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123\n          /*{*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n\n          if (ch === 101\n          /*e*/\n          ) {\n              if (!source.startsWith('numerable', pos + 1)) break;\n              pos += 10;\n              ch = commentWhitespace();\n              if (ch !== 58\n              /*:*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 116\n              /*t*/\n              || !source.startsWith('rue', pos + 1)) break;\n              pos += 4;\n              ch = commentWhitespace();\n              if (ch !== 44) break;\n              pos++;\n              ch = commentWhitespace();\n            }\n\n          if (ch === 118\n          /*v*/\n          ) {\n              if (!source.startsWith('alue', pos + 1)) break;\n              pos += 5;\n              ch = commentWhitespace();\n              if (ch !== 58\n              /*:*/\n              ) break;\n              pos++;\n              addExport(expt);\n              break;\n            } else if (ch === 103\n          /*g*/\n          ) {\n              if (!source.startsWith('et', pos + 1)) break;\n              pos += 3;\n              ch = commentWhitespace();\n\n              if (ch === 58\n              /*:*/\n              ) {\n                  pos++;\n                  ch = commentWhitespace();\n                  if (ch !== 102\n                  /*f*/\n                  ) break;\n                  if (!source.startsWith('unction', pos + 1)) break;\n                  pos += 8;\n                  let lastPos = pos;\n                  ch = commentWhitespace();\n                  if (ch !== 40 && (lastPos === pos || !identifier())) break;\n                  ch = commentWhitespace();\n                }\n\n              if (ch !== 40\n              /*(*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 41\n              /*)*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 123\n              /*{*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 114\n              /*r*/\n              ) break;\n              if (!source.startsWith('eturn', pos + 1)) break;\n              pos += 6;\n              ch = commentWhitespace();\n              if (!identifier()) break;\n              ch = commentWhitespace();\n\n              if (ch === 46\n              /*.*/\n              ) {\n                  pos++;\n                  commentWhitespace();\n                  if (!identifier()) break;\n                  ch = commentWhitespace();\n                } else if (ch === 91\n              /*[*/\n              ) {\n                  pos++;\n                  ch = commentWhitespace();\n                  if (ch === 39\n                  /*'*/\n                  ) singleQuoteString();else if (ch === 34\n                  /*\"*/\n                  ) doubleQuoteString();else break;\n                  pos++;\n                  ch = commentWhitespace();\n                  if (ch !== 93\n                  /*]*/\n                  ) break;\n                  pos++;\n                  ch = commentWhitespace();\n                }\n\n              if (ch === 59\n              /*;*/\n              ) {\n                  pos++;\n                  ch = commentWhitespace();\n                }\n\n              if (ch !== 125\n              /*}*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 125\n              /*}*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 41\n              /*)*/\n              ) break;\n              addExport(expt);\n              return;\n            }\n\n          break;\n        }\n      } else if (keys && ch === 107\n      /*k*/\n      && source.startsWith('eys', pos + 1)) {\n        while (true) {\n          pos += 4;\n          revertPos = pos - 1;\n          ch = commentWhitespace();\n          if (ch !== 40\n          /*(*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          const id_start = pos;\n          if (!identifier()) break;\n          const id = source.slice(id_start, pos);\n          ch = commentWhitespace();\n          if (ch !== 41\n          /*)*/\n          ) break;\n          revertPos = pos++;\n          ch = commentWhitespace();\n          if (ch !== 46\n          /*.*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 102\n          /*f*/\n          || !source.startsWith('orEach', pos + 1)) break;\n          pos += 7;\n          ch = commentWhitespace();\n          revertPos = pos - 1;\n          if (ch !== 40\n          /*(*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 102\n          /*f*/\n          || !source.startsWith('unction', pos + 1)) break;\n          pos += 8;\n          ch = commentWhitespace();\n          if (ch !== 40\n          /*(*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          const it_id_start = pos;\n          if (!identifier()) break;\n          const it_id = source.slice(it_id_start, pos);\n          ch = commentWhitespace();\n          if (ch !== 41\n          /*)*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123\n          /*{*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 105\n          /*i*/\n          || source.charCodeAt(pos + 1) !== 102\n          /*f*/\n          ) break;\n          pos += 2;\n          ch = commentWhitespace();\n          if (ch !== 40\n          /*(*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace(); // `if (` IDENTIFIER$2 `===` ( `'default'` | `\"default\"` ) `||` IDENTIFIER$2 `===` ( '__esModule' | `\"__esModule\"` ) `) return` `;`? |\n\n          if (ch === 61\n          /*=*/\n          ) {\n              if (!source.startsWith('==', pos + 1)) break;\n              pos += 3;\n              ch = commentWhitespace();\n              if (ch !== 34\n              /*\"*/\n              && ch !== 39\n              /*'*/\n              ) break;\n              let quot = ch;\n              if (!source.startsWith('default', pos + 1)) break;\n              pos += 8;\n              ch = commentWhitespace();\n              if (ch !== quot) break;\n              pos += 1;\n              ch = commentWhitespace();\n              if (ch !== 124\n              /*|*/\n              || source.charCodeAt(pos + 1) !== 124\n              /*|*/\n              ) break;\n              pos += 2;\n              ch = commentWhitespace();\n              if (source.slice(pos, pos + it_id.length) !== it_id) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 61\n              /*=*/\n              || source.slice(pos + 1, pos + 3) !== '==') break;\n              pos += 3;\n              ch = commentWhitespace();\n              if (ch !== 34\n              /*\"*/\n              && ch !== 39\n              /*'*/\n              ) break;\n              quot = ch;\n              if (!source.startsWith('__esModule', pos + 1)) break;\n              pos += 11;\n              ch = commentWhitespace();\n              if (ch !== quot) break;\n              pos += 1;\n              ch = commentWhitespace();\n              if (ch !== 41\n              /*)*/\n              ) break;\n              pos += 1;\n              ch = commentWhitespace();\n              if (ch !== 114\n              /*r*/\n              || !source.startsWith('eturn', pos + 1)) break;\n              pos += 6;\n              ch = commentWhitespace();\n              if (ch === 59\n              /*;*/\n              ) pos++;\n              ch = commentWhitespace();\n            } // `if (` IDENTIFIER$2 `!==` ( `'default'` | `\"default\"` ) `)`\n          else if (ch === 33\n            /*!*/\n            ) {\n                if (!source.startsWith('==', pos + 1)) break;\n                pos += 3;\n                ch = commentWhitespace();\n                if (ch !== 34\n                /*\"*/\n                && ch !== 39\n                /*'*/\n                ) break;\n                const quot = ch;\n                if (!source.startsWith('default', pos + 1)) break;\n                pos += 8;\n                ch = commentWhitespace();\n                if (ch !== quot) break;\n                pos += 1;\n                ch = commentWhitespace();\n                if (ch !== 41\n                /*)*/\n                ) break;\n                pos += 1;\n                ch = commentWhitespace();\n              } else break; // `if (` IDENTIFIER$2 `in` EXPORTS_IDENTIFIER `&&` EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] ===` IDENTIFIER$1 `[` IDENTIFIER$2 `]) return` `;`?\n\n\n          if (ch === 105\n          /*i*/\n          && source.charCodeAt(pos + 1) === 102\n          /*f*/\n          ) {\n              pos += 2;\n              ch = commentWhitespace();\n              if (ch !== 40\n              /*(*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 105\n              /*i*/\n              || !source.startsWith('n ', pos + 1)) break;\n              pos += 3;\n              ch = commentWhitespace();\n              if (!readExportsOrModuleDotExports(ch)) break;\n              ch = commentWhitespace();\n              if (ch !== 38\n              /*&*/\n              || source.charCodeAt(pos + 1) !== 38\n              /*&*/\n              ) break;\n              pos += 2;\n              ch = commentWhitespace();\n              if (!readExportsOrModuleDotExports(ch)) break;\n              ch = commentWhitespace();\n              if (ch !== 91\n              /*[*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 93\n              /*]*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 61\n              /*=*/\n              || !source.startsWith('==', pos + 1)) break;\n              pos += 3;\n              ch = commentWhitespace();\n              if (!source.startsWith(id, pos)) break;\n              pos += id.length;\n              ch = commentWhitespace();\n              if (ch !== 91\n              /*[*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (!source.startsWith(it_id, pos)) break;\n              pos += it_id.length;\n              ch = commentWhitespace();\n              if (ch !== 93\n              /*]*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 41\n              /*)*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 114\n              /*r*/\n              || !source.startsWith('eturn', pos + 1)) break;\n              pos += 6;\n              ch = commentWhitespace();\n              if (ch === 59\n              /*;*/\n              ) pos++;\n              ch = commentWhitespace();\n            } // EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] =` IDENTIFIER$1 `[` IDENTIFIER$2 `]`\n\n\n          if (readExportsOrModuleDotExports(ch)) {\n            ch = commentWhitespace();\n            if (ch !== 91\n            /*[*/\n            ) break;\n            pos++;\n            ch = commentWhitespace();\n            if (source.slice(pos, pos + it_id.length) !== it_id) break;\n            pos += it_id.length;\n            ch = commentWhitespace();\n            if (ch !== 93\n            /*]*/\n            ) break;\n            pos++;\n            ch = commentWhitespace();\n            if (ch !== 61\n            /*=*/\n            ) break;\n            pos++;\n            ch = commentWhitespace();\n            if (source.slice(pos, pos + id.length) !== id) break;\n            pos += id.length;\n            ch = commentWhitespace();\n            if (ch !== 91\n            /*[*/\n            ) break;\n            pos++;\n            ch = commentWhitespace();\n            if (source.slice(pos, pos + it_id.length) !== it_id) break;\n            pos += it_id.length;\n            ch = commentWhitespace();\n            if (ch !== 93\n            /*]*/\n            ) break;\n            pos++;\n            ch = commentWhitespace();\n\n            if (ch === 59\n            /*;*/\n            ) {\n                pos++;\n                ch = commentWhitespace();\n              }\n          } // `Object.defineProperty(` EXPORTS_IDENTIFIER `, ` IDENTIFIER$2 `, { enumerable: true, get: function () { return ` IDENTIFIER$1 `[` IDENTIFIER$2 `]; } })`\n          else if (ch === 79\n            /*O*/\n            ) {\n                if (source.slice(pos + 1, pos + 6) !== 'bject') break;\n                pos += 6;\n                ch = commentWhitespace();\n                if (ch !== 46\n                /*.*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 100\n                /*d*/\n                || !source.startsWith('efineProperty', pos + 1)) break;\n                pos += 14;\n                ch = commentWhitespace();\n                if (ch !== 40\n                /*(*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (!readExportsOrModuleDotExports(ch)) break;\n                ch = commentWhitespace();\n                if (ch !== 44\n                /*,*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (!source.startsWith(it_id, pos)) break;\n                pos += it_id.length;\n                ch = commentWhitespace();\n                if (ch !== 44\n                /*,*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 123\n                /*{*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 101\n                /*e*/\n                || !source.startsWith('numerable', pos + 1)) break;\n                pos += 10;\n                ch = commentWhitespace();\n                if (ch !== 58\n                /*:*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 116\n                /*t*/\n                && !source.startsWith('rue', pos + 1)) break;\n                pos += 4;\n                ch = commentWhitespace();\n                if (ch !== 44\n                /*,*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 103\n                /*g*/\n                || !source.startsWith('et', pos + 1)) break;\n                pos += 3;\n                ch = commentWhitespace();\n                if (ch !== 58\n                /*:*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 102\n                /*f*/\n                || !source.startsWith('unction', pos + 1)) break;\n                pos += 8;\n                ch = commentWhitespace();\n                if (ch !== 40\n                /*(*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 41\n                /*)*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 123\n                /*{*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 114\n                /*r*/\n                || !source.startsWith('eturn', pos + 1)) break;\n                pos += 6;\n                ch = commentWhitespace();\n                if (!source.startsWith(id, pos)) break;\n                pos += id.length;\n                ch = commentWhitespace();\n                if (ch !== 91\n                /*[*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (!source.startsWith(it_id, pos)) break;\n                pos += it_id.length;\n                ch = commentWhitespace();\n                if (ch !== 93\n                /*]*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n\n                if (ch === 59\n                /*;*/\n                ) {\n                    pos++;\n                    ch = commentWhitespace();\n                  }\n\n                if (ch !== 125\n                /*}*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 125\n                /*}*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n                if (ch !== 41\n                /*)*/\n                ) break;\n                pos++;\n                ch = commentWhitespace();\n\n                if (ch === 59\n                /*;*/\n                ) {\n                    pos++;\n                    ch = commentWhitespace();\n                  }\n              } else break;\n\n          if (ch !== 125\n          /*}*/\n          ) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41\n          /*)*/\n          ) break;\n          const starExportSpecifier = starExportMap[id];\n\n          if (starExportSpecifier) {\n            reexports.add(starExportSpecifier);\n            pos = revertPos;\n            return;\n          }\n\n          return;\n        }\n      }\n    }\n\n  pos = revertPos;\n}\n\nfunction readExportsOrModuleDotExports(ch) {\n  const revertPos = pos;\n\n  if (ch === 109\n  /*m*/\n  && source.startsWith('odule', pos + 1)) {\n    pos += 6;\n    ch = commentWhitespace();\n\n    if (ch !== 46\n    /*.*/\n    ) {\n        pos = revertPos;\n        return false;\n      }\n\n    pos++;\n    ch = commentWhitespace();\n  }\n\n  if (ch === 101\n  /*e*/\n  && source.startsWith('xports', pos + 1)) {\n    pos += 7;\n    return true;\n  } else {\n    pos = revertPos;\n    return false;\n  }\n}\n\nfunction tryParseModuleExportsDotAssign() {\n  pos += 6;\n  const revertPos = pos - 1;\n  let ch = commentWhitespace();\n\n  if (ch === 46\n  /*.*/\n  ) {\n      pos++;\n      ch = commentWhitespace();\n\n      if (ch === 101\n      /*e*/\n      && source.startsWith('xports', pos + 1)) {\n        tryParseExportsDotAssign(true);\n        return;\n      }\n    }\n\n  pos = revertPos;\n}\n\nfunction tryParseExportsDotAssign(assign) {\n  pos += 7;\n  const revertPos = pos - 1;\n  let ch = commentWhitespace();\n\n  switch (ch) {\n    // exports.asdf\n    case 46\n    /*.*/\n    :\n      {\n        pos++;\n        ch = commentWhitespace();\n        const startPos = pos;\n\n        if (identifier()) {\n          const endPos = pos;\n          ch = commentWhitespace();\n\n          if (ch === 61\n          /*=*/\n          ) {\n              addExport(source.slice(startPos, endPos));\n              return;\n            }\n        }\n\n        break;\n      }\n    // exports['asdf']\n\n    case 91\n    /*[*/\n    :\n      {\n        pos++;\n        ch = commentWhitespace();\n\n        if (ch === 39\n        /*'*/\n        || ch === 34\n        /*\"*/\n        ) {\n            pos++;\n            const startPos = pos;\n\n            if (identifier() && source.charCodeAt(pos) === ch) {\n              const endPos = pos++;\n              ch = commentWhitespace();\n              if (ch !== 93\n              /*]*/\n              ) break;\n              pos++;\n              ch = commentWhitespace();\n              if (ch !== 61\n              /*=*/\n              ) break;\n              addExport(source.slice(startPos, endPos));\n            }\n          }\n\n        break;\n      }\n    // module.exports =\n\n    case 61\n    /*=*/\n    :\n      {\n        if (assign) {\n          if (reexports.size) reexports = new Set();\n          pos++;\n          ch = commentWhitespace(); // { ... }\n\n          if (ch === 123\n          /*{*/\n          ) {\n              tryParseLiteralExports();\n              return;\n            } // require('...')\n\n\n          if (ch === 114\n          /*r*/\n          ) tryParseRequire(ExportAssign);\n        }\n      }\n  }\n\n  pos = revertPos;\n}\n\nfunction tryParseRequire(requireType) {\n  // require('...')\n  const revertPos = pos;\n\n  if (source.startsWith('equire', pos + 1)) {\n    pos += 7;\n    let ch = commentWhitespace();\n\n    if (ch === 40\n    /*(*/\n    ) {\n        pos++;\n        ch = commentWhitespace();\n        const reexportStart = pos + 1;\n\n        if (ch === 39\n        /*'*/\n        ) {\n            singleQuoteString();\n            const reexportEnd = pos++;\n            ch = commentWhitespace();\n\n            if (ch === 41\n            /*)*/\n            ) {\n                switch (requireType) {\n                  case ExportAssign:\n                    reexports.add(source.slice(reexportStart, reexportEnd));\n                    return true;\n\n                  case ExportStar:\n                    reexports.add(source.slice(reexportStart, reexportEnd));\n                    return true;\n\n                  default:\n                    lastStarExportSpecifier = source.slice(reexportStart, reexportEnd);\n                    return true;\n                }\n              }\n          } else if (ch === 34\n        /*\"*/\n        ) {\n            doubleQuoteString();\n            const reexportEnd = pos++;\n            ch = commentWhitespace();\n\n            if (ch === 41\n            /*)*/\n            ) {\n                switch (requireType) {\n                  case ExportAssign:\n                    reexports.add(source.slice(reexportStart, reexportEnd));\n                    return true;\n\n                  case ExportStar:\n                    reexports.add(source.slice(reexportStart, reexportEnd));\n                    return true;\n\n                  default:\n                    lastStarExportSpecifier = source.slice(reexportStart, reexportEnd);\n                    return true;\n                }\n              }\n          }\n      }\n\n    pos = revertPos;\n  }\n\n  return false;\n}\n\nfunction tryParseLiteralExports() {\n  const revertPos = pos - 1;\n\n  while (pos++ < end) {\n    let ch = commentWhitespace();\n    const startPos = pos;\n\n    if (identifier()) {\n      const endPos = pos;\n      ch = commentWhitespace();\n\n      if (ch === 58\n      /*:*/\n      ) {\n          pos++;\n          ch = commentWhitespace(); // nothing more complex than identifier expressions for now\n\n          if (!identifier()) {\n            pos = revertPos;\n            return;\n          }\n\n          ch = source.charCodeAt(pos);\n        }\n\n      addExport(source.slice(startPos, endPos));\n    } else if (ch === 46\n    /*.*/\n    && source.startsWith('..', pos + 1)) {\n      pos += 3;\n\n      if (source.charCodeAt(pos) === 114\n      /*r*/\n      && tryParseRequire(ExportAssign)) {\n        pos++;\n      } else if (!identifier()) {\n        pos = revertPos;\n        return;\n      }\n\n      ch = commentWhitespace();\n    } else if (ch === 39\n    /*'*/\n    || ch === 34\n    /*\"*/\n    ) {\n        const startPos = ++pos;\n\n        if (identifier() && source.charCodeAt(pos) === ch) {\n          const endPos = pos++;\n          ch = commentWhitespace();\n\n          if (ch === 58\n          /*:*/\n          ) {\n              pos++;\n              ch = commentWhitespace(); // nothing more complex than identifier expressions for now\n\n              if (!identifier()) {\n                pos = revertPos;\n                return;\n              }\n\n              ch = source.charCodeAt(pos);\n              addExport(source.slice(startPos, endPos));\n            }\n        }\n      } else {\n      pos = revertPos;\n      return;\n    }\n\n    if (ch === 125\n    /*}*/\n    ) return;\n\n    if (ch !== 44\n    /*,*/\n    ) {\n        pos = revertPos;\n        return;\n      }\n  }\n} // --- Extracted from AcornJS ---\n//(https://github.com/acornjs/acorn/blob/master/acorn/src/identifier.js#L23\n//\n// MIT License\n// Copyright (C) 2012-2018 by various contributors (see AUTHORS)\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// ## Character categories\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null; // These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n// eslint-disable-next-line comma-spacing\n\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938]; // eslint-disable-next-line comma-spacing\n\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239]; // This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n} // Test whether a given character code starts an identifier.\n\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes);\n} // Test whether a given character is part of an identifier.\n\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nfunction identifier() {\n  let ch = source.codePointAt(pos);\n  if (!isIdentifierStart(ch, true) || ch === '\\\\') return false;\n  pos += codePointLen(ch);\n\n  while (ch = source.codePointAt(pos)) {\n    if (isIdentifierChar(ch, true)) {\n      pos += codePointLen(ch);\n    } else if (ch === '\\\\') {\n      // no identifier escapes support for now\n      return false;\n    } else {\n      break;\n    }\n  }\n\n  return true;\n}\n\nfunction codePointLen(ch) {\n  if (ch < 0x10000) return 1;\n  return 2;\n}\n\nfunction codePointAtLast(bPos) {\n  // Gives the UTF char for backtracking surrogates\n  const ch = source.charCodeAt(bPos);\n  if ((ch & 0xFC00) === 0xDC00) return ((source.charCodeAt(bPos - 1) & 0x3FF) << 10 | ch & 0x3FF) + 0x10000;\n  return ch;\n}\n\nfunction throwIfImportStatement() {\n  const startPos = pos;\n  pos += 6;\n  const ch = commentWhitespace();\n\n  switch (ch) {\n    // dynamic import\n    case 40\n    /*(*/\n    :\n      openTokenPosStack[openTokenDepth++] = startPos;\n      return;\n    // import.meta\n\n    case 46\n    /*.*/\n    :\n      throw new Error('Unexpected import.meta in CJS module.');\n      return;\n\n    default:\n      // no space after \"import\" -> not an import keyword\n      if (pos === startPos + 6) break;\n\n    case 34\n    /*\"*/\n    :\n    case 39\n    /*'*/\n    :\n    case 123\n    /*{*/\n    :\n    case 42\n    /***/\n    :\n      // import statement only permitted at base-level\n      if (openTokenDepth !== 0) {\n        pos--;\n        return;\n      } // import statements are a syntax error in CommonJS\n\n\n      throw new Error('Unexpected import statement in CJS module.');\n  }\n}\n\nfunction throwIfExportStatement() {\n  pos += 6;\n  const curPos = pos;\n  const ch = commentWhitespace();\n  if (pos === curPos && !isPunctuator(ch)) return;\n  throw new Error('Unexpected export statement in CJS module.');\n}\n\nfunction commentWhitespace() {\n  let ch;\n\n  do {\n    ch = source.charCodeAt(pos);\n\n    if (ch === 47\n    /*/*/\n    ) {\n        const next_ch = source.charCodeAt(pos + 1);\n        if (next_ch === 47\n        /*/*/\n        ) lineComment();else if (next_ch === 42\n        /***/\n        ) blockComment();else return ch;\n      } else if (!isBrOrWs(ch)) {\n      return ch;\n    }\n  } while (pos++ < end);\n\n  return ch;\n}\n\nfunction templateString() {\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n\n    if (ch === 36\n    /*$*/\n    && source.charCodeAt(pos + 1) === 123\n    /*{*/\n    ) {\n        pos++;\n        templateStack[templateStackDepth++] = templateDepth;\n        templateDepth = ++openTokenDepth;\n        return;\n      }\n\n    if (ch === 96\n    /*`*/\n    ) return;\n    if (ch === 92\n    /*\\*/\n    ) pos++;\n  }\n\n  syntaxError();\n}\n\nfunction blockComment() {\n  pos++;\n\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n\n    if (ch === 42\n    /***/\n    && source.charCodeAt(pos + 1) === 47\n    /*/*/\n    ) {\n        pos++;\n        return;\n      }\n  }\n}\n\nfunction lineComment() {\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 10\n    /*\\n*/\n    || ch === 13\n    /*\\r*/\n    ) return;\n  }\n}\n\nfunction singleQuoteString() {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 39\n    /*'*/\n    ) return;\n\n    if (ch === 92\n    /*\\*/\n    ) {\n        ch = source.charCodeAt(++pos);\n        if (ch === 13\n        /*\\r*/\n        && source.charCodeAt(pos + 1) === 10\n        /*\\n*/\n        ) pos++;\n      } else if (isBr(ch)) break;\n  }\n\n  throw new Error('Unterminated string.');\n}\n\nfunction doubleQuoteString() {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 34\n    /*\"*/\n    ) return;\n\n    if (ch === 92\n    /*\\*/\n    ) {\n        ch = source.charCodeAt(++pos);\n        if (ch === 13\n        /*\\r*/\n        && source.charCodeAt(pos + 1) === 10\n        /*\\n*/\n        ) pos++;\n      } else if (isBr(ch)) break;\n  }\n\n  throw new Error('Unterminated string.');\n}\n\nfunction regexCharacterClass() {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 93\n    /*]*/\n    ) return ch;\n    if (ch === 92\n    /*\\*/\n    ) pos++;else if (ch === 10\n    /*\\n*/\n    || ch === 13\n    /*\\r*/\n    ) break;\n  }\n\n  throw new Error('Syntax error reading regular expression class.');\n}\n\nfunction regularExpression() {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 47\n    /*/*/\n    ) return;\n    if (ch === 91\n    /*[*/\n    ) ch = regexCharacterClass();else if (ch === 92\n    /*\\*/\n    ) pos++;else if (ch === 10\n    /*\\n*/\n    || ch === 13\n    /*\\r*/\n    ) break;\n  }\n\n  throw new Error('Syntax error reading regular expression.');\n} // Note: non-asii BR and whitespace checks omitted for perf / footprint\n// if there is a significant user need this can be reconsidered\n\n\nfunction isBr(c) {\n  return c === 13\n  /*\\r*/\n  || c === 10\n  /*\\n*/\n  ;\n}\n\nfunction isBrOrWs(c) {\n  return c > 8 && c < 14 || c === 32 || c === 160;\n}\n\nfunction isBrOrWsOrPunctuatorNotDot(c) {\n  return c > 8 && c < 14 || c === 32 || c === 160 || isPunctuator(c) && c !== 46\n  /*.*/\n  ;\n}\n\nfunction keywordStart(pos) {\n  return pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1));\n}\n\nfunction readPrecedingKeyword(pos, match) {\n  if (pos < match.length - 1) return false;\n  return source.startsWith(match, pos - match.length + 1) && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - match.length)));\n}\n\nfunction readPrecedingKeyword1(pos, ch) {\n  return source.charCodeAt(pos) === ch && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1)));\n} // Detects one of case, debugger, delete, do, else, in, instanceof, new,\n//   return, throw, typeof, void, yield, await\n\n\nfunction isExpressionKeyword(pos) {\n  switch (source.charCodeAt(pos)) {\n    case 100\n    /*d*/\n    :\n      switch (source.charCodeAt(pos - 1)) {\n        case 105\n        /*i*/\n        :\n          // void\n          return readPrecedingKeyword(pos - 2, 'vo');\n\n        case 108\n        /*l*/\n        :\n          // yield\n          return readPrecedingKeyword(pos - 2, 'yie');\n\n        default:\n          return false;\n      }\n\n    case 101\n    /*e*/\n    :\n      switch (source.charCodeAt(pos - 1)) {\n        case 115\n        /*s*/\n        :\n          switch (source.charCodeAt(pos - 2)) {\n            case 108\n            /*l*/\n            :\n              // else\n              return readPrecedingKeyword1(pos - 3, 101\n              /*e*/\n              );\n\n            case 97\n            /*a*/\n            :\n              // case\n              return readPrecedingKeyword1(pos - 3, 99\n              /*c*/\n              );\n\n            default:\n              return false;\n          }\n\n        case 116\n        /*t*/\n        :\n          // delete\n          return readPrecedingKeyword(pos - 2, 'dele');\n\n        default:\n          return false;\n      }\n\n    case 102\n    /*f*/\n    :\n      if (source.charCodeAt(pos - 1) !== 111\n      /*o*/\n      || source.charCodeAt(pos - 2) !== 101\n      /*e*/\n      ) return false;\n\n      switch (source.charCodeAt(pos - 3)) {\n        case 99\n        /*c*/\n        :\n          // instanceof\n          return readPrecedingKeyword(pos - 4, 'instan');\n\n        case 112\n        /*p*/\n        :\n          // typeof\n          return readPrecedingKeyword(pos - 4, 'ty');\n\n        default:\n          return false;\n      }\n\n    case 110\n    /*n*/\n    :\n      // in, return\n      return readPrecedingKeyword1(pos - 1, 105\n      /*i*/\n      ) || readPrecedingKeyword(pos - 1, 'retur');\n\n    case 111\n    /*o*/\n    :\n      // do\n      return readPrecedingKeyword1(pos - 1, 100\n      /*d*/\n      );\n\n    case 114\n    /*r*/\n    :\n      // debugger\n      return readPrecedingKeyword(pos - 1, 'debugge');\n\n    case 116\n    /*t*/\n    :\n      // await\n      return readPrecedingKeyword(pos - 1, 'awai');\n\n    case 119\n    /*w*/\n    :\n      switch (source.charCodeAt(pos - 1)) {\n        case 101\n        /*e*/\n        :\n          // new\n          return readPrecedingKeyword1(pos - 2, 110\n          /*n*/\n          );\n\n        case 111\n        /*o*/\n        :\n          // throw\n          return readPrecedingKeyword(pos - 2, 'thr');\n\n        default:\n          return false;\n      }\n\n  }\n\n  return false;\n}\n\nfunction isParenKeyword(curPos) {\n  return source.charCodeAt(curPos) === 101\n  /*e*/\n  && source.startsWith('whil', curPos - 4) || source.charCodeAt(curPos) === 114\n  /*r*/\n  && source.startsWith('fo', curPos - 2) || source.charCodeAt(curPos - 1) === 105\n  /*i*/\n  && source.charCodeAt(curPos) === 102\n  /*f*/\n  ;\n}\n\nfunction isPunctuator(ch) {\n  // 23 possible punctuator endings: !%&()*+,-./:;<=>?[]^{}|~\n  return ch === 33\n  /*!*/\n  || ch === 37\n  /*%*/\n  || ch === 38\n  /*&*/\n  || ch > 39 && ch < 48 || ch > 57 && ch < 64 || ch === 91\n  /*[*/\n  || ch === 93\n  /*]*/\n  || ch === 94\n  /*^*/\n  || ch > 122 && ch < 127;\n}\n\nfunction isExpressionPunctuator(ch) {\n  // 20 possible expression endings: !%&(*+,-.:;<=>?[^{|~\n  return ch === 33\n  /*!*/\n  || ch === 37\n  /*%*/\n  || ch === 38\n  /*&*/\n  || ch > 39 && ch < 47 && ch !== 41 || ch > 57 && ch < 64 || ch === 91\n  /*[*/\n  || ch === 94\n  /*^*/\n  || ch > 122 && ch < 127 && ch !== 125\n  /*}*/\n  ;\n}\n\nfunction isExpressionTerminator(curPos) {\n  // detects:\n  // => ; ) finally catch else\n  // as all of these followed by a { will indicate a statement brace\n  switch (source.charCodeAt(curPos)) {\n    case 62\n    /*>*/\n    :\n      return source.charCodeAt(curPos - 1) === 61\n      /*=*/\n      ;\n\n    case 59\n    /*;*/\n    :\n    case 41\n    /*)*/\n    :\n      return true;\n\n    case 104\n    /*h*/\n    :\n      return source.startsWith('catc', curPos - 4);\n\n    case 121\n    /*y*/\n    :\n      return source.startsWith('finall', curPos - 6);\n\n    case 101\n    /*e*/\n    :\n      return source.startsWith('els', curPos - 3);\n  }\n\n  return false;\n}\n\nconst initPromise = Promise.resolve();\n\nmodule.exports.init = () => initPromise;\n\nmodule.exports.parse = parseCJS;","map":{"version":3,"sources":["F:/GreenTea-Lemon/React/coderwhyReact/我的代码/15_learn_hooks/node_modules/cjs-module-lexer/lexer.js"],"names":["source","pos","end","openTokenDepth","templateDepth","lastTokenPos","lastSlashWasDivision","templateStack","templateStackDepth","openTokenPosStack","openClassPosStack","nextBraceIsClass","starExportMap","lastStarExportSpecifier","_exports","reexports","resetState","Array","Object","create","Set","Import","ExportAssign","ExportStar","strictReserved","parseCJS","name","parseSource","e","message","slice","split","length","lastIndexOf","loc","result","exports","addExport","has","add","cjsSource","ch","charCodeAt","startsWith","keywordStart","throwIfImportStatement","startPos","tryParseRequire","tryBacktrackAddStarExportBinding","tryParseExportsDotAssign","throwIfExportStatement","isBrOrWs","tryParseModuleExportsDotAssign","tryParseObjectDefineOrKeys","Error","templateString","singleQuoteString","doubleQuoteString","next_ch","lineComment","blockComment","lastToken","isExpressionPunctuator","isParenKeyword","isExpressionTerminator","isExpressionKeyword","regularExpression","bPos","codePoint","id_end","identifierStart","codePointAtLast","isIdentifierChar","isIdentifierStart","codePointLen","starExportId","keys","revertPos","commentWhitespace","readExportsOrModuleDotExports","quot","exportPos","identifier","expt","lastPos","id_start","id","it_id_start","it_id","starExportSpecifier","assign","endPos","size","tryParseLiteralExports","requireType","reexportStart","reexportEnd","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","i","astral","test","String","fromCharCode","codePointAt","curPos","isPunctuator","syntaxError","isBr","regexCharacterClass","c","isBrOrWsOrPunctuatorNotDot","readPrecedingKeyword","match","readPrecedingKeyword1","initPromise","Promise","resolve","module","init","parse"],"mappings":"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","sourcesContent":["let source, pos, end;\nlet openTokenDepth,\n  templateDepth,\n  lastTokenPos,\n  lastSlashWasDivision,\n  templateStack,\n  templateStackDepth,\n  openTokenPosStack,\n  openClassPosStack,\n  nextBraceIsClass,\n  starExportMap,\n  lastStarExportSpecifier,\n  _exports,\n  reexports;\n\nfunction resetState () {\n  openTokenDepth = 0;\n  templateDepth = -1;\n  lastTokenPos = -1;\n  lastSlashWasDivision = false;\n  templateStack = new Array(1024);\n  templateStackDepth = 0;\n  openTokenPosStack = new Array(1024);\n  openClassPosStack = new Array(1024);\n  nextBraceIsClass = false;\n  starExportMap = Object.create(null);\n  lastStarExportSpecifier = null;\n\n  _exports = new Set();\n  reexports = new Set();\n}\n\n// RequireType\nconst Import = 0;\nconst ExportAssign = 1;\nconst ExportStar = 2;\n\nconst strictReserved = new Set(['implements', 'interface', 'let', 'package', 'private', 'protected', 'public', 'static', 'yield', 'enum']);\n\nfunction parseCJS (source, name = '@') {\n  resetState();\n  try {\n    parseSource(source);\n  }\n  catch (e) {\n    e.message += `\\n  at ${name}:${source.slice(0, pos).split('\\n').length}:${pos - source.lastIndexOf('\\n', pos - 1)}`;\n    e.loc = pos;\n    throw e;\n  }\n  const result = { exports: [..._exports], reexports: [...reexports] };\n  resetState();\n  return result;\n}\n\nfunction addExport (name) {\n  if (!strictReserved.has(name))\n    _exports.add(name);\n}\n\nfunction parseSource (cjsSource) {\n  source = cjsSource;\n  pos = -1;\n  end = source.length - 1;\n  let ch = 0;\n\n  // Handle #!\n  if (source.charCodeAt(0) === 35/*#*/ && source.charCodeAt(1) === 33/*!*/) {\n    if (source.length === 2)\n      return true;\n    pos += 2;\n    while (pos++ < end) {\n      ch = source.charCodeAt(pos);\n      if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\n        break;\n    }\n  }\n\n  while (pos++ < end) {\n    ch = source.charCodeAt(pos);\n\n    if (ch === 32 || ch < 14 && ch > 8)\n      continue;\n\n    if (openTokenDepth === 0) {\n      switch (ch) {\n        case 105/*i*/:\n          if (source.startsWith('mport', pos + 1) && keywordStart(pos))\n            throwIfImportStatement();\n          lastTokenPos = pos;\n          continue;\n        case 114/*r*/:\n          const startPos = pos;\n          if (tryParseRequire(Import) && keywordStart(startPos))\n            tryBacktrackAddStarExportBinding(startPos - 1);\n          lastTokenPos = pos;\n          continue;\n        case 95/*_*/:\n          if (source.startsWith('_export', pos + 1) && (keywordStart(pos) || source.charCodeAt(pos - 1) === 46/*.*/)) {\n            pos += 8;\n            if (source.startsWith('Star', pos))\n              pos += 4;\n            if (source.charCodeAt(pos) === 40/*(*/) {\n              openTokenPosStack[openTokenDepth++] = lastTokenPos;\n              if (source.charCodeAt(++pos) === 114/*r*/)\n                tryParseRequire(ExportStar);\n            }\n          }\n          lastTokenPos = pos;\n          continue;\n      }\n    }\n\n    switch (ch) {\n      case 101/*e*/:\n        if (source.startsWith('xport', pos + 1) && keywordStart(pos)) {\n          if (source.charCodeAt(pos + 6) === 115/*s*/)\n            tryParseExportsDotAssign(false);\n          else if (openTokenDepth === 0)\n            throwIfExportStatement();\n        }\n        break;\n      case 99/*c*/:\n        if (keywordStart(pos) && source.startsWith('lass', pos + 1) && isBrOrWs(source.charCodeAt(pos + 5)))\n          nextBraceIsClass = true;\n        break;\n      case 109/*m*/:\n        if (source.startsWith('odule', pos + 1) && keywordStart(pos))\n          tryParseModuleExportsDotAssign();\n        break;\n      case 79/*O*/:\n        if (source.startsWith('bject', pos + 1) && keywordStart(pos))\n          tryParseObjectDefineOrKeys(openTokenDepth === 0);\n        break;\n      case 40/*(*/:\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\n        break;\n      case 41/*)*/:\n        if (openTokenDepth === 0)\n          throw new Error('Unexpected closing bracket.');\n        openTokenDepth--;\n        break;\n      case 123/*{*/:\n        openClassPosStack[openTokenDepth] = nextBraceIsClass;\n        nextBraceIsClass = false;\n        openTokenPosStack[openTokenDepth++] = lastTokenPos;\n        break;\n      case 125/*}*/:\n        if (openTokenDepth === 0)\n          throw new Error('Unexpected closing brace.');\n        if (openTokenDepth-- === templateDepth) {\n          templateDepth = templateStack[--templateStackDepth];\n          templateString();\n        }\n        else {\n          if (templateDepth !== -1 && openTokenDepth < templateDepth)\n            throw new Error('Unexpected closing brace.');\n        }\n        break;\n      case 60/*>*/:\n        // TODO: <!-- XML comment support\n        break;\n      case 39/*'*/:\n        singleQuoteString();\n        break;\n      case 34/*\"*/:\n        doubleQuoteString();\n        break;\n      case 47/*/*/: {\n        const next_ch = source.charCodeAt(pos + 1);\n        if (next_ch === 47/*/*/) {\n          lineComment();\n          // dont update lastToken\n          continue;\n        }\n        else if (next_ch === 42/***/) {\n          blockComment();\n          // dont update lastToken\n          continue;\n        }\n        else {\n          // Division / regex ambiguity handling based on checking backtrack analysis of:\n          // - what token came previously (lastToken)\n          // - if a closing brace or paren, what token came before the corresponding\n          //   opening brace or paren (lastOpenTokenIndex)\n          const lastToken = source.charCodeAt(lastTokenPos);\n          if (isExpressionPunctuator(lastToken) &&\n              !(lastToken === 46/*.*/ && (source.charCodeAt(lastTokenPos - 1) >= 48/*0*/ && source.charCodeAt(lastTokenPos - 1) <= 57/*9*/)) &&\n              !(lastToken === 43/*+*/ && source.charCodeAt(lastTokenPos - 1) === 43/*+*/) && !(lastToken === 45/*-*/ && source.charCodeAt(lastTokenPos - 1) === 45/*-*/) ||\n              lastToken === 41/*)*/ && isParenKeyword(openTokenPosStack[openTokenDepth]) ||\n              lastToken === 125/*}*/ && (isExpressionTerminator(openTokenPosStack[openTokenDepth]) || openClassPosStack[openTokenDepth]) ||\n              lastToken === 47/*/*/ && lastSlashWasDivision ||\n              isExpressionKeyword(lastTokenPos) ||\n              !lastToken) {\n            regularExpression();\n            lastSlashWasDivision = false;\n          }\n          else {\n            lastSlashWasDivision = true;\n          }\n        }\n        break;\n      }\n      case 96/*`*/:\n        templateString();\n        break;\n    }\n    lastTokenPos = pos;\n  }\n\n  if (templateDepth !== -1)\n    throw new Error('Unterminated template.');\n\n  if (openTokenDepth)\n    throw new Error('Unterminated braces.');\n}\n\nfunction tryBacktrackAddStarExportBinding (bPos) {\n  while (source.charCodeAt(bPos) === 32/* */ && bPos >= 0)\n    bPos--;\n  if (source.charCodeAt(bPos) === 61/*=*/) {\n    bPos--;\n    while (source.charCodeAt(bPos) === 32/* */ && bPos >= 0)\n      bPos--;\n    let codePoint;\n    const id_end = bPos;\n    let identifierStart = false;\n    while ((codePoint = codePointAtLast(bPos)) && bPos >= 0) {\n      if (codePoint === 92/*\\*/)\n        return;\n      if (!isIdentifierChar(codePoint, true))\n        break;\n      identifierStart = isIdentifierStart(codePoint, true);\n      bPos -= codePointLen(codePoint);\n    }\n    if (identifierStart && source.charCodeAt(bPos) === 32/* */) {\n      const starExportId = source.slice(bPos + 1, id_end + 1);\n      while (source.charCodeAt(bPos) === 32/* */ && bPos >= 0)\n        bPos--;\n      switch (source.charCodeAt(bPos)) {\n        case 114/*r*/:\n          if (!source.startsWith('va', bPos - 2))\n            return;\n          break;\n        case 116/*t*/:\n          if (!source.startsWith('le', bPos - 2) && !source.startsWith('cons', bPos - 4))\n            return;\n          break;\n        default: return;\n      }\n      starExportMap[starExportId] = lastStarExportSpecifier;\n    }\n  }\n}\n\nfunction tryParseObjectDefineOrKeys (keys) {\n  pos += 6;\n  let revertPos = pos - 1;\n  let ch = commentWhitespace();\n  if (ch === 46/*.*/) {\n    pos++;\n    ch = commentWhitespace();\n    if (ch === 100/*d*/ && source.startsWith('efineProperty', pos + 1)) {\n      while (true) {\n        pos += 14;\n        revertPos = pos - 1;\n        ch = commentWhitespace();\n        if (ch !== 40/*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (!readExportsOrModuleDotExports(ch)) break;\n        ch = commentWhitespace();\n        if (ch !== 44/*,*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 39/*'*/ && ch !== 34/*\"*/) break;\n        let quot = ch;\n        const exportPos = ++pos;\n        if (!identifier() || source.charCodeAt(pos) !== quot) break;\n        const expt = source.slice(exportPos, pos);\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 44/*,*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 123/*{*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch === 101/*e*/) {\n          if (!source.startsWith('numerable', pos + 1)) break;\n          pos += 10;\n          ch = commentWhitespace();\n          if (ch !== 58/*:*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 116/*t*/ || !source.startsWith('rue', pos + 1)) break;\n          pos += 4;\n          ch = commentWhitespace();\n          if (ch !== 44) break;\n          pos++;\n          ch = commentWhitespace();\n        }\n        if (ch === 118/*v*/) {\n          if (!source.startsWith('alue', pos + 1)) break;\n          pos += 5;\n          ch = commentWhitespace();\n          if (ch !== 58/*:*/) break;\n          pos++;\n          addExport(expt);\n          break;\n        }\n        else if (ch === 103/*g*/) {\n          if (!source.startsWith('et', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch === 58/*:*/) {\n            pos++;\n            ch = commentWhitespace();\n            if (ch !== 102/*f*/) break;\n            if (!source.startsWith('unction', pos + 1)) break;\n            pos += 8;\n            let lastPos = pos;\n            ch = commentWhitespace();\n            if (ch !== 40 && (lastPos === pos || !identifier())) break;\n            ch = commentWhitespace();\n          }\n          if (ch !== 40/*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123/*{*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 114/*r*/) break;\n          if (!source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (!identifier()) break;\n          ch = commentWhitespace();\n          if (ch === 46/*.*/) {\n            pos++;\n            commentWhitespace();\n            if (!identifier()) break;\n            ch = commentWhitespace();\n          }\n          else if (ch === 91/*[*/) {\n            pos++;\n            ch = commentWhitespace();\n            if (ch === 39/*'*/) singleQuoteString();\n            else if (ch === 34/*\"*/) doubleQuoteString();\n            else break;\n            pos++;\n            ch = commentWhitespace();\n            if (ch !== 93/*]*/) break;\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch === 59/*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch !== 125/*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 125/*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          addExport(expt);\n          return;\n        }\n        break;\n      }\n    }\n    else if (keys && ch === 107/*k*/ && source.startsWith('eys', pos + 1)) {\n      while (true) {\n        pos += 4;\n        revertPos = pos - 1;\n        ch = commentWhitespace();\n        if (ch !== 40/*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        const id_start = pos;\n        if (!identifier()) break;\n        const id = source.slice(id_start, pos);\n        ch = commentWhitespace();\n        if (ch !== 41/*)*/) break;\n\n        revertPos = pos++;\n        ch = commentWhitespace();\n        if (ch !== 46/*.*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 102/*f*/ || !source.startsWith('orEach', pos + 1)) break;\n        pos += 7;\n        ch = commentWhitespace();\n        revertPos = pos - 1;\n        if (ch !== 40/*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 102/*f*/ || !source.startsWith('unction', pos + 1)) break;\n        pos += 8;\n        ch = commentWhitespace();\n        if (ch !== 40/*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        const it_id_start = pos;\n        if (!identifier()) break;\n        const it_id = source.slice(it_id_start, pos);\n        ch = commentWhitespace();\n        if (ch !== 41/*)*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 123/*{*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 105/*i*/ || source.charCodeAt(pos + 1) !== 102/*f*/) break;\n        pos += 2;\n        ch = commentWhitespace();\n        if (ch !== 40/*(*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (!source.startsWith(it_id, pos)) break;\n        pos += it_id.length;\n        ch = commentWhitespace();\n        // `if (` IDENTIFIER$2 `===` ( `'default'` | `\"default\"` ) `||` IDENTIFIER$2 `===` ( '__esModule' | `\"__esModule\"` ) `) return` `;`? |\n        if (ch === 61/*=*/) {\n          if (!source.startsWith('==', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 34/*\"*/ && ch !== 39/*'*/) break;\n          let quot = ch;\n          if (!source.startsWith('default', pos + 1)) break;\n          pos += 8;\n          ch = commentWhitespace();\n          if (ch !== quot) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 124/*|*/ || source.charCodeAt(pos + 1) !== 124/*|*/) break;\n          pos += 2;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 61/*=*/ || source.slice(pos + 1, pos + 3) !== '==') break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 34/*\"*/ && ch !== 39/*'*/) break;\n          quot = ch;\n          if (!source.startsWith('__esModule', pos + 1)) break;\n          pos += 11;\n          ch = commentWhitespace();\n          if (ch !== quot) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (ch === 59/*;*/)\n            pos++;\n          ch = commentWhitespace();\n        }\n        // `if (` IDENTIFIER$2 `!==` ( `'default'` | `\"default\"` ) `)`\n        else if (ch === 33/*!*/) {\n          if (!source.startsWith('==', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 34/*\"*/ && ch !== 39/*'*/) break;\n          const quot = ch;\n          if (!source.startsWith('default', pos + 1)) break;\n          pos += 8;\n          ch = commentWhitespace();\n          if (ch !== quot) break;\n          pos += 1;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          pos += 1;\n          ch = commentWhitespace();\n        }\n        else break;\n\n        // `if (` IDENTIFIER$2 `in` EXPORTS_IDENTIFIER `&&` EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] ===` IDENTIFIER$1 `[` IDENTIFIER$2 `]) return` `;`?\n        if (ch === 105/*i*/ && source.charCodeAt(pos + 1) === 102/*f*/) {\n          pos += 2;\n          ch = commentWhitespace();\n          if (ch !== 40/*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 105/*i*/ || !source.startsWith('n ', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (!readExportsOrModuleDotExports(ch)) break;\n          ch = commentWhitespace();\n          if (ch !== 38/*&*/ || source.charCodeAt(pos + 1) !== 38/*&*/) break;\n          pos += 2;\n          ch = commentWhitespace();\n          if (!readExportsOrModuleDotExports(ch)) break;\n          ch = commentWhitespace();\n          if (ch !== 91/*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93/*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 61/*=*/ || !source.startsWith('==', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (!source.startsWith(id, pos)) break;\n          pos += id.length;\n          ch = commentWhitespace();\n          if (ch !== 91/*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93/*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (ch === 59/*;*/)\n            pos++;\n          ch = commentWhitespace();\n        }\n\n        // EXPORTS_IDENTIFIER `[` IDENTIFIER$2 `] =` IDENTIFIER$1 `[` IDENTIFIER$2 `]`\n        if (readExportsOrModuleDotExports(ch)) {\n          ch = commentWhitespace();\n          if (ch !== 91/*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93/*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 61/*=*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + id.length) !== id) break;\n          pos += id.length;\n          ch = commentWhitespace();\n          if (ch !== 91/*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (source.slice(pos, pos + it_id.length) !== it_id) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93/*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 59/*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n        }\n        // `Object.defineProperty(` EXPORTS_IDENTIFIER `, ` IDENTIFIER$2 `, { enumerable: true, get: function () { return ` IDENTIFIER$1 `[` IDENTIFIER$2 `]; } })`\n        else if (ch === 79/*O*/) {\n          if (source.slice(pos + 1, pos + 6) !== 'bject') break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (ch !== 46/*.*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 100/*d*/ || !source.startsWith('efineProperty', pos + 1)) break;\n          pos += 14;\n          ch = commentWhitespace();\n          if (ch !== 40/*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!readExportsOrModuleDotExports(ch)) break;\n          ch = commentWhitespace();\n          if (ch !== 44/*,*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 44/*,*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123/*{*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 101/*e*/ || !source.startsWith('numerable', pos + 1)) break;\n          pos += 10;\n          ch = commentWhitespace();\n          if (ch !== 58/*:*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 116/*t*/ && !source.startsWith('rue', pos + 1)) break;\n          pos += 4;\n          ch = commentWhitespace();\n          if (ch !== 44/*,*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 103/*g*/ || !source.startsWith('et', pos + 1)) break;\n          pos += 3;\n          ch = commentWhitespace();\n          if (ch !== 58/*:*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 102/*f*/ || !source.startsWith('unction', pos + 1)) break;\n          pos += 8;\n          ch = commentWhitespace();\n          if (ch !== 40/*(*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 123/*{*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 114/*r*/ || !source.startsWith('eturn', pos + 1)) break;\n          pos += 6;\n          ch = commentWhitespace();\n          if (!source.startsWith(id, pos)) break;\n          pos += id.length;\n          ch = commentWhitespace();\n          if (ch !== 91/*[*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (!source.startsWith(it_id, pos)) break;\n          pos += it_id.length;\n          ch = commentWhitespace();\n          if (ch !== 93/*]*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 59/*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n          if (ch !== 125/*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 125/*}*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 41/*)*/) break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch === 59/*;*/) {\n            pos++;\n            ch = commentWhitespace();\n          }\n        }\n        else break;\n\n        if (ch !== 125/*}*/) break;\n        pos++;\n        ch = commentWhitespace();\n        if (ch !== 41/*)*/) break;\n\n        const starExportSpecifier = starExportMap[id];\n        if (starExportSpecifier) {\n          reexports.add(starExportSpecifier);\n          pos = revertPos;\n          return;\n        }\n        return;\n      }\n    }\n  }\n  pos = revertPos;\n}\n\nfunction readExportsOrModuleDotExports (ch) {\n  const revertPos = pos;\n  if (ch === 109/*m*/ && source.startsWith('odule', pos + 1)) {\n    pos += 6;\n    ch = commentWhitespace();\n    if (ch !== 46/*.*/) {\n      pos = revertPos;\n      return false;\n    }\n    pos++;\n    ch = commentWhitespace();\n  }\n  if (ch === 101/*e*/ && source.startsWith('xports', pos + 1)) {\n    pos += 7;\n    return true;\n  }\n  else {\n    pos = revertPos;\n    return false;\n  }\n}\n\nfunction tryParseModuleExportsDotAssign () {\n  pos += 6;\n  const revertPos = pos - 1;\n  let ch = commentWhitespace();\n  if (ch === 46/*.*/) {\n    pos++;\n    ch = commentWhitespace();\n    if (ch === 101/*e*/ && source.startsWith('xports', pos + 1)) {\n      tryParseExportsDotAssign(true);\n      return;\n    }\n  }\n  pos = revertPos;\n}\n\nfunction tryParseExportsDotAssign (assign) {\n  pos += 7;\n  const revertPos = pos - 1;\n  let ch = commentWhitespace();\n  switch (ch) {\n    // exports.asdf\n    case 46/*.*/: {\n      pos++;\n      ch = commentWhitespace();\n      const startPos = pos;\n      if (identifier()) {\n        const endPos = pos;\n        ch = commentWhitespace();\n        if (ch === 61/*=*/) {\n          addExport(source.slice(startPos, endPos));\n          return;\n        }\n      }\n      break;\n    }\n    // exports['asdf']\n    case 91/*[*/: {\n      pos++;\n      ch = commentWhitespace();\n      if (ch === 39/*'*/ || ch === 34/*\"*/) {\n        pos++;\n        const startPos = pos;\n        if (identifier() && source.charCodeAt(pos) === ch) {\n          const endPos = pos++;\n          ch = commentWhitespace();\n          if (ch !== 93/*]*/)\n            break;\n          pos++;\n          ch = commentWhitespace();\n          if (ch !== 61/*=*/)\n            break;\n          addExport(source.slice(startPos, endPos));\n        }\n      }\n      break;\n    }\n    // module.exports =\n    case 61/*=*/: {\n      if (assign) {\n        if (reexports.size)\n          reexports = new Set();\n        pos++;\n        ch = commentWhitespace();\n        // { ... }\n        if (ch === 123/*{*/) {\n          tryParseLiteralExports();\n          return;\n        }\n\n        // require('...')\n        if (ch === 114/*r*/)\n          tryParseRequire(ExportAssign);\n      }\n    }\n  }\n  pos = revertPos;\n}\n\nfunction tryParseRequire (requireType) {\n  // require('...')\n  const revertPos = pos;\n  if (source.startsWith('equire', pos + 1)) {\n    pos += 7;\n    let ch = commentWhitespace();\n    if (ch === 40/*(*/) {\n      pos++;\n      ch = commentWhitespace();\n      const reexportStart = pos + 1;\n      if (ch === 39/*'*/) {\n        singleQuoteString();\n        const reexportEnd = pos++;\n        ch = commentWhitespace();\n        if (ch === 41/*)*/) {\n          switch (requireType) {\n            case ExportAssign:\n              reexports.add(source.slice(reexportStart, reexportEnd));\n              return true;\n            case ExportStar:\n              reexports.add(source.slice(reexportStart, reexportEnd));\n              return true;\n            default:\n              lastStarExportSpecifier = source.slice(reexportStart, reexportEnd);\n              return true;\n          }\n        }\n      }\n      else if (ch === 34/*\"*/) {\n        doubleQuoteString();\n        const reexportEnd = pos++;\n        ch = commentWhitespace();\n        if (ch === 41/*)*/) {\n          switch (requireType) {\n            case ExportAssign:\n              reexports.add(source.slice(reexportStart, reexportEnd));\n              return true;\n            case ExportStar:\n              reexports.add(source.slice(reexportStart, reexportEnd));\n              return true;\n            default:\n              lastStarExportSpecifier = source.slice(reexportStart, reexportEnd);\n              return true;\n          }\n        }\n      }\n    }\n    pos = revertPos;\n  }\n  return false;\n}\n\nfunction tryParseLiteralExports () {\n  const revertPos = pos - 1;\n  while (pos++ < end) {\n    let ch = commentWhitespace();\n    const startPos = pos;\n    if (identifier()) {\n      const endPos = pos;\n      ch = commentWhitespace();\n      if (ch === 58/*:*/) {\n        pos++;\n        ch = commentWhitespace();\n        // nothing more complex than identifier expressions for now\n        if (!identifier()) {\n          pos = revertPos;\n          return;\n        }\n        ch = source.charCodeAt(pos);\n      }\n      addExport(source.slice(startPos, endPos));\n    }\n    else if (ch === 46/*.*/ && source.startsWith('..', pos + 1)) {\n      pos += 3;\n      if (source.charCodeAt(pos) === 114/*r*/ && tryParseRequire(ExportAssign)) {\n        pos++;\n      }\n      else if (!identifier()) {\n        pos = revertPos;\n        return;\n      }\n      ch = commentWhitespace();\n    }\n    else if (ch === 39/*'*/ || ch === 34/*\"*/) {\n      const startPos = ++pos;\n      if (identifier() && source.charCodeAt(pos) === ch) {\n        const endPos = pos++;\n        ch = commentWhitespace();\n        if (ch === 58/*:*/) {\n          pos++;\n          ch = commentWhitespace();\n          // nothing more complex than identifier expressions for now\n          if (!identifier()) {\n            pos = revertPos;\n            return;\n          }\n          ch = source.charCodeAt(pos);\n          addExport(source.slice(startPos, endPos));\n        }\n      }\n    }\n    else {\n      pos = revertPos;\n      return;\n    }\n\n    if (ch === 125/*}*/)\n      return;\n\n    if (ch !== 44/*,*/) {\n      pos = revertPos;\n      return;\n    }\n  }\n}\n\n// --- Extracted from AcornJS ---\n//(https://github.com/acornjs/acorn/blob/master/acorn/src/identifier.js#L23\n//\n// MIT License\n\n// Copyright (C) 2012-2018 by various contributors (see AUTHORS)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\"\n\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\")\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\")\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938]\n\n// eslint-disable-next-line comma-spacing\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239]\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000\n  for (let i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36\n  if (code < 58) return true\n  if (code < 65) return false\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\nfunction identifier () {\n  let ch = source.codePointAt(pos);\n  if (!isIdentifierStart(ch, true) || ch === '\\\\')\n    return false;\n  pos += codePointLen(ch);\n  while (ch = source.codePointAt(pos)) {\n    if (isIdentifierChar(ch, true)) {\n      pos += codePointLen(ch);\n    }\n    else if (ch === '\\\\') {\n      // no identifier escapes support for now\n      return false;\n    }\n    else {\n      break;\n    }\n  }\n  return true;\n}\n\nfunction codePointLen (ch) {\n  if (ch < 0x10000) return 1;\n  return 2;\n}\n\nfunction codePointAtLast (bPos) {\n  // Gives the UTF char for backtracking surrogates\n  const ch = source.charCodeAt(bPos);\n  if ((ch & 0xFC00) === 0xDC00)\n    return (((source.charCodeAt(bPos - 1) & 0x3FF) << 10) | (ch & 0x3FF)) + 0x10000;\n  return ch;\n}\n\nfunction throwIfImportStatement () {\n  const startPos = pos;\n  pos += 6;\n  const ch = commentWhitespace();\n  switch (ch) {\n    // dynamic import\n    case 40/*(*/:\n      openTokenPosStack[openTokenDepth++] = startPos;\n      return;\n    // import.meta\n    case 46/*.*/:\n      throw new Error('Unexpected import.meta in CJS module.');\n      return;\n\n    default:\n      // no space after \"import\" -> not an import keyword\n      if (pos === startPos + 6)\n        break;\n    case 34/*\"*/:\n    case 39/*'*/:\n    case 123/*{*/:\n    case 42/***/:\n      // import statement only permitted at base-level\n      if (openTokenDepth !== 0) {\n        pos--;\n        return;\n      }\n      // import statements are a syntax error in CommonJS\n      throw new Error('Unexpected import statement in CJS module.');\n  }\n}\n\nfunction throwIfExportStatement () {\n  pos += 6;\n  const curPos = pos;\n  const ch = commentWhitespace();\n  if (pos === curPos && !isPunctuator(ch))\n    return;\n  throw new Error('Unexpected export statement in CJS module.');\n}\n\nfunction commentWhitespace () {\n  let ch;\n  do {\n    ch = source.charCodeAt(pos);\n    if (ch === 47/*/*/) {\n      const next_ch = source.charCodeAt(pos + 1);\n      if (next_ch === 47/*/*/)\n        lineComment();\n      else if (next_ch === 42/***/)\n        blockComment();\n      else\n        return ch;\n    }\n    else if (!isBrOrWs(ch)) {\n      return ch;\n    }\n  } while (pos++ < end);\n  return ch;\n}\n\nfunction templateString () {\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 36/*$*/ && source.charCodeAt(pos + 1) === 123/*{*/) {\n      pos++;\n      templateStack[templateStackDepth++] = templateDepth;\n      templateDepth = ++openTokenDepth;\n      return;\n    }\n    if (ch === 96/*`*/)\n      return;\n    if (ch === 92/*\\*/)\n      pos++;\n  }\n  syntaxError();\n}\n\nfunction blockComment () {\n  pos++;\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 42/***/ && source.charCodeAt(pos + 1) === 47/*/*/) {\n      pos++;\n      return;\n    }\n  }\n}\n\nfunction lineComment () {\n  while (pos++ < end) {\n    const ch = source.charCodeAt(pos);\n    if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\n      return;\n  }\n}\n\nfunction singleQuoteString () {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 39/*'*/)\n      return;\n    if (ch === 92/*\\*/) {\n      ch = source.charCodeAt(++pos);\n      if (ch === 13/*\\r*/ && source.charCodeAt(pos + 1) === 10/*\\n*/)\n        pos++;\n    }\n    else if (isBr(ch))\n      break;\n  }\n  throw new Error('Unterminated string.');\n}\n\nfunction doubleQuoteString () {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 34/*\"*/)\n      return;\n    if (ch === 92/*\\*/) {\n      ch = source.charCodeAt(++pos);\n      if (ch === 13/*\\r*/ && source.charCodeAt(pos + 1) === 10/*\\n*/)\n        pos++;\n    }\n    else if (isBr(ch))\n      break;\n  }\n  throw new Error('Unterminated string.');\n}\n\nfunction regexCharacterClass () {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 93/*]*/)\n      return ch;\n    if (ch === 92/*\\*/)\n      pos++;\n    else if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\n      break;\n  }\n  throw new Error('Syntax error reading regular expression class.');\n}\n\nfunction regularExpression () {\n  while (pos++ < end) {\n    let ch = source.charCodeAt(pos);\n    if (ch === 47/*/*/)\n      return;\n    if (ch === 91/*[*/)\n      ch = regexCharacterClass();\n    else if (ch === 92/*\\*/)\n      pos++;\n    else if (ch === 10/*\\n*/ || ch === 13/*\\r*/)\n      break;\n  }\n  throw new Error('Syntax error reading regular expression.');\n}\n\n// Note: non-asii BR and whitespace checks omitted for perf / footprint\n// if there is a significant user need this can be reconsidered\nfunction isBr (c) {\n  return c === 13/*\\r*/ || c === 10/*\\n*/;\n}\n\nfunction isBrOrWs (c) {\n  return c > 8 && c < 14 || c === 32 || c === 160;\n}\n\nfunction isBrOrWsOrPunctuatorNotDot (c) {\n  return c > 8 && c < 14 || c === 32 || c === 160 || isPunctuator(c) && c !== 46/*.*/;\n}\n\nfunction keywordStart (pos) {\n  return pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1));\n}\n\nfunction readPrecedingKeyword (pos, match) {\n  if (pos < match.length - 1)\n    return false;\n  return source.startsWith(match, pos - match.length + 1) && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - match.length)));\n}\n\nfunction readPrecedingKeyword1 (pos, ch) {\n  return source.charCodeAt(pos) === ch && (pos === 0 || isBrOrWsOrPunctuatorNotDot(source.charCodeAt(pos - 1)));\n}\n\n// Detects one of case, debugger, delete, do, else, in, instanceof, new,\n//   return, throw, typeof, void, yield, await\nfunction isExpressionKeyword (pos) {\n  switch (source.charCodeAt(pos)) {\n    case 100/*d*/:\n      switch (source.charCodeAt(pos - 1)) {\n        case 105/*i*/:\n          // void\n          return readPrecedingKeyword(pos - 2, 'vo');\n        case 108/*l*/:\n          // yield\n          return readPrecedingKeyword(pos - 2, 'yie');\n        default:\n          return false;\n      }\n    case 101/*e*/:\n      switch (source.charCodeAt(pos - 1)) {\n        case 115/*s*/:\n          switch (source.charCodeAt(pos - 2)) {\n            case 108/*l*/:\n              // else\n              return readPrecedingKeyword1(pos - 3, 101/*e*/);\n            case 97/*a*/:\n              // case\n              return readPrecedingKeyword1(pos - 3, 99/*c*/);\n            default:\n              return false;\n          }\n        case 116/*t*/:\n          // delete\n          return readPrecedingKeyword(pos - 2, 'dele');\n        default:\n          return false;\n      }\n    case 102/*f*/:\n      if (source.charCodeAt(pos - 1) !== 111/*o*/ || source.charCodeAt(pos - 2) !== 101/*e*/)\n        return false;\n      switch (source.charCodeAt(pos - 3)) {\n        case 99/*c*/:\n          // instanceof\n          return readPrecedingKeyword(pos - 4, 'instan');\n        case 112/*p*/:\n          // typeof\n          return readPrecedingKeyword(pos - 4, 'ty');\n        default:\n          return false;\n      }\n    case 110/*n*/:\n      // in, return\n      return readPrecedingKeyword1(pos - 1, 105/*i*/) || readPrecedingKeyword(pos - 1, 'retur');\n    case 111/*o*/:\n      // do\n      return readPrecedingKeyword1(pos - 1, 100/*d*/);\n    case 114/*r*/:\n      // debugger\n      return readPrecedingKeyword(pos - 1, 'debugge');\n    case 116/*t*/:\n      // await\n      return readPrecedingKeyword(pos - 1, 'awai');\n    case 119/*w*/:\n      switch (source.charCodeAt(pos - 1)) {\n        case 101/*e*/:\n          // new\n          return readPrecedingKeyword1(pos - 2, 110/*n*/);\n        case 111/*o*/:\n          // throw\n          return readPrecedingKeyword(pos - 2, 'thr');\n        default:\n          return false;\n      }\n  }\n  return false;\n}\n\nfunction isParenKeyword (curPos) {\n  return source.charCodeAt(curPos) === 101/*e*/ && source.startsWith('whil', curPos - 4) ||\n      source.charCodeAt(curPos) === 114/*r*/ && source.startsWith('fo', curPos - 2) ||\n      source.charCodeAt(curPos - 1) === 105/*i*/ && source.charCodeAt(curPos) === 102/*f*/;\n}\n\nfunction isPunctuator (ch) {\n  // 23 possible punctuator endings: !%&()*+,-./:;<=>?[]^{}|~\n  return ch === 33/*!*/ || ch === 37/*%*/ || ch === 38/*&*/ ||\n    ch > 39 && ch < 48 || ch > 57 && ch < 64 ||\n    ch === 91/*[*/ || ch === 93/*]*/ || ch === 94/*^*/ ||\n    ch > 122 && ch < 127;\n}\n\nfunction isExpressionPunctuator (ch) {\n  // 20 possible expression endings: !%&(*+,-.:;<=>?[^{|~\n  return ch === 33/*!*/ || ch === 37/*%*/ || ch === 38/*&*/ ||\n    ch > 39 && ch < 47 && ch !== 41 || ch > 57 && ch < 64 ||\n    ch === 91/*[*/ || ch === 94/*^*/ || ch > 122 && ch < 127 && ch !== 125/*}*/;\n}\n\nfunction isExpressionTerminator (curPos) {\n  // detects:\n  // => ; ) finally catch else\n  // as all of these followed by a { will indicate a statement brace\n  switch (source.charCodeAt(curPos)) {\n    case 62/*>*/:\n      return source.charCodeAt(curPos - 1) === 61/*=*/;\n    case 59/*;*/:\n    case 41/*)*/:\n      return true;\n    case 104/*h*/:\n      return source.startsWith('catc', curPos - 4);\n    case 121/*y*/:\n      return source.startsWith('finall', curPos - 6);\n    case 101/*e*/:\n      return source.startsWith('els', curPos - 3);\n  }\n  return false;\n}\n\nconst initPromise = Promise.resolve();\n\nmodule.exports.init = () => initPromise;\nmodule.exports.parse = parseCJS;\n"]},"metadata":{},"sourceType":"script"}