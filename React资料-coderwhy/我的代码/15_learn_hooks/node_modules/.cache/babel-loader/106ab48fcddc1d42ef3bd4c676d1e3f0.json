{"ast":null,"code":"var _jsxFileName = \"F:\\\\GreenTea-Lemon\\\\React\\\\coderwhyReact\\\\\\u6211\\u7684\\u4EE3\\u7801\\\\15_learn_hooks\\\\src\\\\01_\\u4F53\\u9A8Chooks\\\\02_counter-hook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CounterHook() {\n  _s();\n\n  /**\r\n    Hook:useState\r\n    - 本身是一个函数，来自react包\r\n    - 参数和返回值\r\n     1. 参数：作用是给创建出来的state状态一个默认值。\r\n     2. 返回:一个数组，包含两个成员：当前状态state对象+操作状态的函数\r\n   */\n  //1 传统用法\n  const arr = useState(0);\n  const state = arr[0];\n  const setState = arr[1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u5F53\\u524D\\u8BA1\\u6570\\uFF1A\", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => setState(state + 1),\n      children: \" +1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => setState(state - 1),\n      children: \" -1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CounterHook, \"/BMsZQZXTF1OCuMRBRwd0iKMePs=\");\n\n_c = CounterHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterHook\");","map":{"version":3,"sources":["F:/GreenTea-Lemon/React/coderwhyReact/我的代码/15_learn_hooks/src/01_体验hooks/02_counter-hook.js"],"names":["React","useState","CounterHook","arr","state","setState","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC;AACF;AACA;AACA;AACA;AACA;AACA;AAEE;AACA,QAAMC,GAAG,GAAGF,QAAQ,CAAC,CAAD,CAApB;AACA,QAAMG,KAAK,GAAGD,GAAG,CAAC,CAAD,CAAjB;AACA,QAAME,QAAQ,GAAGF,GAAG,CAAC,CAAD,CAApB;AAEA,sBACE;AAAA,4BACE;AAAA,mDAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAGE,CAAD,IAAOD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAGE,CAAD,IAAOD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBuBF,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function CounterHook() {\r\n  /**\r\n    Hook:useState\r\n    - 本身是一个函数，来自react包\r\n    - 参数和返回值\r\n     1. 参数：作用是给创建出来的state状态一个默认值。\r\n     2. 返回:一个数组，包含两个成员：当前状态state对象+操作状态的函数\r\n   */\r\n\r\n  //1 传统用法\r\n  const arr = useState(0);\r\n  const state = arr[0];\r\n  const setState = arr[1];\r\n\r\n  return (\r\n    <div>\r\n      <h1>当前计数：{state}</h1>\r\n      <button onClick={(e) => setState(state + 1)}> +1 </button>\r\n      <button onClick={(e) => setState(state - 1)}> -1 </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}