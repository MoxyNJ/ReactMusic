{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactTea\\\\React\\u8D44\\u6599-coderwhy\\\\hy-react-web-music\\\\src\\\\pages\\\\player\\\\app-play-bar\\\\index.js\";\nimport React, { memo, useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { message } from \"antd\";\nimport { getPlayUrl, formatMinuteSecond } from \"@/utils/format-utils\";\nimport { getSongDetailAction, changeCurrentLyricIndexAction, changePlaySequenceAction, changePlaySongAction } from \"../store/actionCreators\";\nimport HYAppPlayPanel from \"../app-play-panel\";\nimport { NavLink } from \"react-router-dom\";\nimport { Slider } from \"antd\";\nimport { PlaybarWrapper, Control, PlayInfo, Operator } from \"./style\";\nexport default memo(function HYAppPlaybar() {\n  // props and state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  const [showPanel, setShowPanel] = useState(false); // redux hooks\n\n  const {\n    currentSong,\n    currentLyrics,\n    currentLyricIndex,\n    playList,\n    playSequence\n  } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\n    currentLyrics: state.getIn([\"player\", \"currentLyrics\"]),\n    currentLyricIndex: state.getIn([\"player\", \"currentLyricIndex\"]),\n    playList: state.getIn([\"player\", \"playList\"]),\n    playSequence: state.getIn([\"player\", \"playSequence\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // other hooks\n\n  const audioRef = useRef();\n  useEffect(() => {\n    dispatch(getSongDetailAction(167876));\n  }, [dispatch]);\n  useEffect(() => {\n    audioRef.current.src = getPlayUrl(currentSong.id);\n    audioRef.current.play().then(res => {\n      setIsPlaying(true);\n    }).catch(err => {\n      setIsPlaying(false);\n    });\n    setDuration(currentSong.dt);\n  }, [currentSong]); // 其他业务\n\n  const play = useCallback(() => {\n    setIsPlaying(!isPlaying);\n    isPlaying ? audioRef.current.pause() : audioRef.current.play().catch(err => {\n      setIsPlaying(false);\n    });\n  }, [isPlaying]);\n\n  const timeUpdate = e => {\n    const currentTime = e.target.currentTime;\n\n    if (!isChanging) {\n      setCurrentTime(currentTime);\n      setProgress(currentTime * 1000 / duration * 100);\n    }\n\n    let lrcLength = currentLyrics.length;\n    let i = 0;\n\n    for (; i < lrcLength; i++) {\n      const lrcTime = currentLyrics[i].time;\n\n      if (currentTime * 1000 < lrcTime) {\n        break;\n      }\n    }\n\n    const finalIndex = i - 1;\n\n    if (finalIndex !== currentLyricIndex) {\n      dispatch(changeCurrentLyricIndexAction(finalIndex));\n      message.open({\n        content: currentLyrics[finalIndex].content,\n        key: \"lyric\",\n        duration: 0,\n        className: \"lyric-message\"\n      });\n    }\n  };\n\n  const timeEnded = () => {\n    if (playSequence === 2 || playList.length === 1) {\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    } else {\n      dispatch(changePlaySongAction(1));\n    }\n  };\n\n  const sliderChange = useCallback(value => {\n    setProgress(value);\n    const time = value / 100.0 * duration / 1000;\n    setCurrentTime(time);\n    setIsChanging(true);\n  }, [duration]);\n  const sliderAfterChange = useCallback(value => {\n    const time = value / 100.0 * duration / 1000;\n    audioRef.current.currentTime = time;\n    setCurrentTime(time);\n    setIsChanging(false);\n\n    if (!isPlaying) {\n      play();\n    }\n  }, [duration, isPlaying, play]);\n  return /*#__PURE__*/React.createElement(PlaybarWrapper, {\n    className: \"sprite_playbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content wrap-v2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    isPlaying: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn prev\",\n    onClick: e => dispatch(changePlaySongAction(-1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn play\",\n    onClick: e => play(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn next\",\n    onClick: e => dispatch(changePlaySongAction(1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(PlayInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/discover/player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://p2.music.126.net/OVkXDNmbk2uj6wE1KTZIwQ==/109951165203334337.jpg?param=34y34\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"song-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, currentSong.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"singer-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, currentSong.ar[0].name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: progress,\n    onChange: sliderChange,\n    onAfterChange: sliderAfterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"now-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, formatMinuteSecond(currentTime * 1000)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"/\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, formatMinuteSecond(duration)))))), /*#__PURE__*/React.createElement(Operator, {\n    sequence: playSequence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn favor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right sprite_playbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn volume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn loop\",\n    onClick: e => dispatch(changePlaySequenceAction(playSequence + 1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sprite_playbar btn playlist\",\n    onClick: e => setShowPanel(!showPanel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, playList.length)))), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    onTimeUpdate: timeUpdate,\n    onEnded: timeEnded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }), showPanel && /*#__PURE__*/React.createElement(HYAppPlayPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }));\n});","map":{"version":3,"sources":["F:/ReactTea/React资料-coderwhy/hy-react-web-music/src/pages/player/app-play-bar/index.js"],"names":["React","memo","useRef","useEffect","useState","useCallback","useSelector","shallowEqual","useDispatch","message","getPlayUrl","formatMinuteSecond","getSongDetailAction","changeCurrentLyricIndexAction","changePlaySequenceAction","changePlaySongAction","HYAppPlayPanel","NavLink","Slider","PlaybarWrapper","Control","PlayInfo","Operator","HYAppPlaybar","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","progress","setProgress","isChanging","setIsChanging","showPanel","setShowPanel","currentSong","currentLyrics","currentLyricIndex","playList","playSequence","state","getIn","dispatch","audioRef","current","src","id","play","then","res","catch","err","dt","pause","timeUpdate","e","target","lrcLength","length","i","lrcTime","time","finalIndex","open","content","key","className","timeEnded","sliderChange","value","sliderAfterChange","name","ar"],"mappings":"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","sourcesContent":["import React, { memo, useRef, useEffect, useState, useCallback } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\n\nimport { message } from \"antd\";\n\nimport { getPlayUrl, formatMinuteSecond } from \"@/utils/format-utils\";\nimport {\n  getSongDetailAction,\n  changeCurrentLyricIndexAction,\n  changePlaySequenceAction,\n  changePlaySongAction,\n} from \"../store/actionCreators\";\n\nimport HYAppPlayPanel from \"../app-play-panel\";\nimport { NavLink } from \"react-router-dom\";\nimport { Slider } from \"antd\";\nimport { PlaybarWrapper, Control, PlayInfo, Operator } from \"./style\";\n\nexport default memo(function HYAppPlaybar() {\n  // props and state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  const [showPanel, setShowPanel] = useState(false);\n\n  // redux hooks\n  const {\n    currentSong,\n    currentLyrics,\n    currentLyricIndex,\n    playList,\n    playSequence,\n  } = useSelector(\n    (state) => ({\n      currentSong: state.getIn([\"player\", \"currentSong\"]),\n      currentLyrics: state.getIn([\"player\", \"currentLyrics\"]),\n      currentLyricIndex: state.getIn([\"player\", \"currentLyricIndex\"]),\n      playList: state.getIn([\"player\", \"playList\"]),\n      playSequence: state.getIn([\"player\", \"playSequence\"]),\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  // other hooks\n  const audioRef = useRef();\n  useEffect(() => {\n    dispatch(getSongDetailAction(167876));\n  }, [dispatch]);\n\n  useEffect(() => {\n    audioRef.current.src = getPlayUrl(currentSong.id);\n    audioRef.current\n      .play()\n      .then((res) => {\n        setIsPlaying(true);\n      })\n      .catch((err) => {\n        setIsPlaying(false);\n      });\n    setDuration(currentSong.dt);\n  }, [currentSong]);\n\n  // 其他业务\n  const play = useCallback(() => {\n    setIsPlaying(!isPlaying);\n    isPlaying\n      ? audioRef.current.pause()\n      : audioRef.current.play().catch((err) => {\n          setIsPlaying(false);\n        });\n  }, [isPlaying]);\n\n  const timeUpdate = (e) => {\n    const currentTime = e.target.currentTime;\n    if (!isChanging) {\n      setCurrentTime(currentTime);\n      setProgress(((currentTime * 1000) / duration) * 100);\n    }\n\n    let lrcLength = currentLyrics.length;\n    let i = 0;\n    for (; i < lrcLength; i++) {\n      const lrcTime = currentLyrics[i].time;\n      if (currentTime * 1000 < lrcTime) {\n        break;\n      }\n    }\n    const finalIndex = i - 1;\n    if (finalIndex !== currentLyricIndex) {\n      dispatch(changeCurrentLyricIndexAction(finalIndex));\n      message.open({\n        content: currentLyrics[finalIndex].content,\n        key: \"lyric\",\n        duration: 0,\n        className: \"lyric-message\",\n      });\n    }\n  };\n\n  const timeEnded = () => {\n    if (playSequence === 2 || playList.length === 1) {\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    } else {\n      dispatch(changePlaySongAction(1));\n    }\n  };\n\n  const sliderChange = useCallback(\n    (value) => {\n      setProgress(value);\n      const time = ((value / 100.0) * duration) / 1000;\n      setCurrentTime(time);\n      setIsChanging(true);\n    },\n    [duration]\n  );\n\n  const sliderAfterChange = useCallback(\n    (value) => {\n      const time = ((value / 100.0) * duration) / 1000;\n      audioRef.current.currentTime = time;\n      setCurrentTime(time);\n      setIsChanging(false);\n\n      if (!isPlaying) {\n        play();\n      }\n    },\n    [duration, isPlaying, play]\n  );\n\n  return (\n    <PlaybarWrapper className=\"sprite_playbar\">\n      <div className=\"content wrap-v2\">\n        <Control isPlaying={isPlaying}>\n          <button\n            className=\"sprite_playbar btn prev\"\n            onClick={(e) => dispatch(changePlaySongAction(-1))}\n          ></button>\n          <button\n            className=\"sprite_playbar btn play\"\n            onClick={(e) => play()}\n          ></button>\n          <button\n            className=\"sprite_playbar btn next\"\n            onClick={(e) => dispatch(changePlaySongAction(1))}\n          ></button>\n        </Control>\n        <PlayInfo>\n          <div className=\"image\">\n            <NavLink to=\"/discover/player\">\n              <img\n                src=\"https://p2.music.126.net/OVkXDNmbk2uj6wE1KTZIwQ==/109951165203334337.jpg?param=34y34\"\n                alt=\"\"\n              />\n            </NavLink>\n          </div>\n          <div className=\"info\">\n            <div className=\"song\">\n              <span className=\"song-name\">{currentSong.name}</span>\n              <span className=\"singer-name\">{currentSong.ar[0].name}</span>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                value={progress}\n                onChange={sliderChange}\n                onAfterChange={sliderAfterChange}\n              />\n              <div className=\"time\">\n                <span className=\"now-time\">\n                  {formatMinuteSecond(currentTime * 1000)}\n                </span>\n                <span className=\"divider\">/</span>\n                <span className=\"total-time\">\n                  {formatMinuteSecond(duration)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </PlayInfo>\n        <Operator sequence={playSequence}>\n          <div className=\"left\">\n            <button className=\"sprite_playbar btn favor\"></button>\n            <button className=\"sprite_playbar btn share\"></button>\n          </div>\n          <div className=\"right sprite_playbar\">\n            <button className=\"sprite_playbar btn volume\"></button>\n            <button\n              className=\"sprite_playbar btn loop\"\n              onClick={(e) =>\n                dispatch(changePlaySequenceAction(playSequence + 1))\n              }\n            ></button>\n            <button\n              className=\"sprite_playbar btn playlist\"\n              onClick={(e) => setShowPanel(!showPanel)}\n            >\n              {playList.length}\n            </button>\n          </div>\n        </Operator>\n      </div>\n      <audio ref={audioRef} onTimeUpdate={timeUpdate} onEnded={timeEnded} />\n      {showPanel && <HYAppPlayPanel />}\n    </PlaybarWrapper>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}