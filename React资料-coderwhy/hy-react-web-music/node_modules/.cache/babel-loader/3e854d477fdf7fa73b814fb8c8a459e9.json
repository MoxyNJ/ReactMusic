{"ast":null,"code":"export function handleSongsCategory(data) {\n  // 1.获取所有的类别\n  const category = data.categories; // category： {0: '语种', 1: '风格', 2: '场景', 3: '情感', 4: '主题'}\n\n  console.log(Object.entries(category)); // 2.创建类别数据结构\n  //   2.1 entries 把category 对象转换为了可迭代的数组，成员是对象的 key / value 对\n  //     (5) [Array(2), Array(2), Array(2), Array(2), Array(2)]\n  //       0: (2) ['0', '语种']\n  //       1: (2) ['1', '风格']\n  //       2: (2) ['2', '场景']\n  //       3: (2) ['3', '情感']\n  //       4: (2) ['4', '主题']\n  //   2.2 利用 map 对数组进行改造\n\n  const categoryData = Object.entries(category).map(([key, value]) => {\n    return {\n      name: value,\n      subs: []\n    };\n  }); // 3.将subs添加到对应的类别中\n\n  for (let item of data.sub) {\n    categoryData[item.category].subs.push(item);\n  }\n\n  return categoryData;\n} // 获取歌手字母类别\n\nexport function generateSingerAlpha() {\n  var alphabets = [\"-1\"];\n  var start = \"A\".charCodeAt(0);\n  var last = \"Z\".charCodeAt(0);\n\n  for (var i = start; i <= last; ++i) {\n    alphabets.push(String.fromCharCode(i));\n  }\n\n  alphabets.push(\"0\");\n  return alphabets;\n}\nexport const singerAlphas = generateSingerAlpha();","map":{"version":3,"sources":["F:/ReactTea/React资料-coderwhy/hy-react-web-music/src/utils/handle-data.js"],"names":["handleSongsCategory","data","category","categories","console","log","Object","entries","categoryData","map","key","value","name","subs","item","sub","push","generateSingerAlpha","alphabets","start","charCodeAt","last","i","String","fromCharCode","singerAlphas"],"mappings":"AAAA,OAAO,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AACxC;AACA,QAAMC,QAAQ,GAAGD,IAAI,CAACE,UAAtB,CAFwC,CAGxC;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAP,CAAeL,QAAf,CAAZ,EALwC,CAOxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMM,YAAY,GAAGF,MAAM,CAACC,OAAP,CAAeL,QAAf,EAAyBO,GAAzB,CAA6B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAClE,WAAO;AACLC,MAAAA,IAAI,EAAED,KADD;AAELE,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID,GALoB,CAArB,CAhBwC,CAuBxC;;AACA,OAAK,IAAIC,IAAT,IAAiBb,IAAI,CAACc,GAAtB,EAA2B;AACzBP,IAAAA,YAAY,CAACM,IAAI,CAACZ,QAAN,CAAZ,CAA4BW,IAA5B,CAAiCG,IAAjC,CAAsCF,IAAtC;AACD;;AAED,SAAON,YAAP;AACD,C,CAED;;AACA,OAAO,SAASS,mBAAT,GAA+B;AACpC,MAAIC,SAAS,GAAG,CAAC,IAAD,CAAhB;AACA,MAAIC,KAAK,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAZ;AACA,MAAIC,IAAI,GAAG,IAAID,UAAJ,CAAe,CAAf,CAAX;;AACA,OAAK,IAAIE,CAAC,GAAGH,KAAb,EAAoBG,CAAC,IAAID,IAAzB,EAA+B,EAAEC,CAAjC,EAAoC;AAClCJ,IAAAA,SAAS,CAACF,IAAV,CAAeO,MAAM,CAACC,YAAP,CAAoBF,CAApB,CAAf;AACD;;AAEDJ,EAAAA,SAAS,CAACF,IAAV,CAAe,GAAf;AAEA,SAAOE,SAAP;AACD;AAED,OAAO,MAAMO,YAAY,GAAGR,mBAAmB,EAAxC","sourcesContent":["export function handleSongsCategory(data) {\n  // 1.获取所有的类别\n  const category = data.categories;\n  // category： {0: '语种', 1: '风格', 2: '场景', 3: '情感', 4: '主题'}\n\n  console.log(Object.entries(category));\n\n  // 2.创建类别数据结构\n  //   2.1 entries 把category 对象转换为了可迭代的数组，成员是对象的 key / value 对\n  //     (5) [Array(2), Array(2), Array(2), Array(2), Array(2)]\n  //       0: (2) ['0', '语种']\n  //       1: (2) ['1', '风格']\n  //       2: (2) ['2', '场景']\n  //       3: (2) ['3', '情感']\n  //       4: (2) ['4', '主题']\n  //   2.2 利用 map 对数组进行改造\n  const categoryData = Object.entries(category).map(([key, value]) => {\n    return {\n      name: value,\n      subs: [],\n    };\n  });\n\n  // 3.将subs添加到对应的类别中\n  for (let item of data.sub) {\n    categoryData[item.category].subs.push(item);\n  }\n\n  return categoryData;\n}\n\n// 获取歌手字母类别\nexport function generateSingerAlpha() {\n  var alphabets = [\"-1\"];\n  var start = \"A\".charCodeAt(0);\n  var last = \"Z\".charCodeAt(0);\n  for (var i = start; i <= last; ++i) {\n    alphabets.push(String.fromCharCode(i));\n  }\n\n  alphabets.push(\"0\");\n\n  return alphabets;\n}\n\nexport const singerAlphas = generateSingerAlpha();\n"]},"metadata":{},"sourceType":"module"}